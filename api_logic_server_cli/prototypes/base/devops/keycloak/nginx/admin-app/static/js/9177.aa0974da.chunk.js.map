{"version":3,"file":"static/js/9177.aa0974da.chunk.js","mappings":"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","sources":["components/external/UserPasswordTab.js","components/external/index.js","components/Custom.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Button } from '@material-ui/core';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { FormControl } from '@mui/material';\nimport {useRecordContext, useDataProvider} from \"react-admin\";\nimport {httpAuthClient} from \"../../rav4-jsonapi-client/ra-jsonapi-client\"\nimport { useConf } from \"../../Config\";\nimport { useNotify } from 'react-admin';\n\nexport const UserPasswordTab = () => {\n    const conf = useConf();\n    const notify = useNotify();\n    const record = useRecordContext();\n    const dataProvider = useDataProvider();\n    const [pwdValue, setPwdValue] = useState(\"\");\n    const [rpwdValue, setRPwdValue] = useState(\"\");\n    const [submitColor, setSubmitColor] = useState(\"\")\n    const onPwdChange = (e) => {\n        let pwdValue = e.target.value\n        setPwdValue(pwdValue)\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5  ? \"primary\" : \"\")\n        console.log(pwdValue, rpwdValue);\n    }\n    const onRPwdVerify = (e) => {\n        let rpwdValue = e.target.value\n        setRPwdValue(rpwdValue)\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"\")\n        console.log(pwdValue, rpwdValue);\n        \n    }\n    const handleSubmit = () => {\n        console.log(rpwdValue);\n        if(pwdValue !== rpwdValue){\n            notify('Passwords don\\'t match',  { type: 'warning' })\n            return\n        }\n        if(pwdValue.length < 6){\n            notify('Password too short',  { type: 'warning' })\n            return\n        }\n        const data = {\n            \"password\": pwdValue\n        }\n        httpAuthClient(`${conf.api_root}/Users/${record.id}/change_password`, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n        .then(()=>notify('Password Changed!'))\n        .catch(()=>notify(`Error Changing Password`,  { type: 'warning' }))\n          \n    }\n\n    return (\n        <Box\n        component=\"form\"\n        sx={{\n            '& .MuiTextField-root': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        <FormControl>\n            <Grid item xs={12} spacing={4} margin={5} >\n                <Typography variant=\"body2\" component=\"p\" ><b>Change the user password</b></Typography>\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"New Password\"\n                type=\"password\"\n                onChange={onPwdChange}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"Repeat Password\"\n                type=\"password\"\n                onChange={onRPwdVerify}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <Button variant=\"contained\" color={submitColor} onClick={handleSubmit}>Submit</Button>\n            </Grid>\n        </FormControl>\n        </Box>\n    );\n}\n\n\nexport const ApiUserPasswordTab = () => {\n    const conf = useConf();\n    const notify = useNotify();\n    const record = useRecordContext();\n    const dataProvider = useDataProvider();\n    const [curPwdValue, setCurPwdValue] = useState(\"\");\n    const [newPwdValue, setNewPwdValue] = useState(\"\");\n    const [rpwdValue, setRPwdValue] = useState(\"\");\n    const [submitColor, setSubmitColor] = useState(\"\")\n\n    const onCurPwdChange = (e) => {\n        let pwdValue = e.target.value\n        setCurPwdValue(pwdValue)\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5  ? \"primary\" : \"\")\n    }\n    const onNewPwdChange = (e) => {\n        let pwdValue = e.target.value\n        setNewPwdValue(pwdValue)\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5  ? \"primary\" : \"\")\n    }\n    const onRPwdVerify = (e) => {\n        let rpwdValue = e.target.value\n        setRPwdValue(rpwdValue)\n        setSubmitColor(newPwdValue === rpwdValue && newPwdValue.length > 5 ? \"primary\" : \"\")\n    }\n    const handleSubmit = () => {\n        console.log(rpwdValue);\n        if(newPwdValue !== rpwdValue){\n            notify('Passwords don\\'t match',  { type: 'warning' })\n            return\n        }\n        if(newPwdValue.length < 1){\n            notify('Password too short',  { type: 'warning' })\n            return\n        }\n        const data = {\n            \"password\": newPwdValue\n        }\n        httpAuthClient(`${conf.api_root}/Users/${record.id}/change_password`, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n        .then(()=>notify('Password Changed!'))\n        .catch(()=>notify(`Error Changing Password`,  { type: 'warning' }))\n          \n    }\n\n    return (\n        <Box\n        component=\"form\"\n        sx={{\n            '& .MuiTextField-root': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        <FormControl>\n            <Grid item xs={12} spacing={4} margin={5} >\n                <Typography variant=\"body2\" component=\"p\" ><b>Current user password</b></Typography>\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"Current Password\"\n                type=\"password\"\n                onChange={onCurPwdChange}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n                <Typography variant=\"body2\" component=\"p\" ><b>New user password</b></Typography>\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"New Password\"\n                type=\"password\"\n                onChange={onNewPwdChange}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"Repeat Password\"\n                type=\"password\"\n                onChange={onRPwdVerify}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <Button variant=\"contained\" color={submitColor} onClick={handleSubmit}>Submit</Button>\n            </Grid>\n        </FormControl>\n        </Box>\n    );\n}\n","\nexport const MyComp = (props) => {\n    return <div>HMMMM</div>\n}","import Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport {\n    TextField,\n    PasswordInput\n} from \"react-admin\";\n\nimport {useRecordContext} from \"react-admin\";\nexport * from './external/UserPasswordTab'\nexport * from './ApiAdmin'\nexport * from './external'\n\n\nexport const SampleColumnField = ({attribute}) => {\n    return <TextField source={attribute.name} key={attribute.name} style={{color : \"red\" }} />\n}\n\nexport const EmployeeLabel = (props) => {\n    const employee = props.instance\n    return <div> {employee.attributes?.FirstName} {employee.attributes?.LastName}</div>\n}\n\nexport const CustomerLabel = (props) => {\n    const customer = props.instance\n    return <div> <b>{customer.attributes?.CompanyName}</b> <i>{customer.attributes?.ContactName}</i></div>\n}\n\nexport const UserPasswordField = (props) => {\n\n    if(props.mode === \"list\"){\n        return <span/>\n    }\n    if(props.mode === \"edit\"){\n        return <>\n            <Grid item xs={12} spacing={4} margin={5} >\n                <Typography variant=\"h6\" component=\"h6\" >Change Password</Typography>\n            </Grid>\n            <Grid item xs={4} spacing={4} margin={5} ><PasswordInput source=\"_password\" /> </Grid>\n            <Grid item xs={4} spacing={4} margin={5} ><PasswordInput source=\"_password\" /> </Grid>\n            <Grid item xs={4} spacing={4} margin={5} ></Grid>\n        </>\n    }\n    return <></>\n}\n\nexport const CustomTab = (props) => {\n    // eslint-disable-next-line no-unused-vars\n    const record = useRecordContext();\n    return <div>Some Text</div>\n}\n"],"names":["UserPasswordTab","conf","useConf","notify","useNotify","record","useRecordContext","useDataProvider","useState","pwdValue","setPwdValue","rpwdValue","setRPwdValue","submitColor","setSubmitColor","Box","component","sx","m","width","noValidate","autoComplete","FormControl","Grid","item","xs","spacing","margin","Typography","variant","id","label","type","onChange","e","target","value","length","console","log","Button","color","onClick","data","httpAuthClient","api_root","method","body","JSON","stringify","then","catch","ApiUserPasswordTab","setCurPwdValue","newPwdValue","setNewPwdValue","MyComp","props","SampleColumnField","attribute","TextField","source","name","style","EmployeeLabel","employee","instance","attributes","FirstName","LastName","CustomerLabel","customer","CompanyName","ContactName","UserPasswordField","mode","PasswordInput","CustomTab"],"sourceRoot":""}