import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { ServiceWorkerModule } from '@angular/service-worker';
import { APP_CONFIG, ONTIMIZE_PROVIDERS, OntimizeWebModule } from 'ontimize-web-ngx';

import { environment } from '../environments/environment';
import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { CONFIG } from './app.config';
{% if use_keycloak %}
import { O_AUTH_SERVICE } from 'ontimize-web-ngx';
import { KeycloakOptions, O_KEYCLOAK_OPTIONS, OKeycloakAuthService, OntimizeKeycloakModule } from 'ontimize-web-ngx-keycloak';
{% endif %}
// Standard providers...
// Defining custom providers (if needed)...
export const customProviders: any = [
];
{% if use_keycloak %}
const keycloakOptions: KeycloakOptions = {
  config: {
    url: {{ keyckloak_url }},
    realm: {{ keycloak_realm }},
    clientId: {{ keycloak_client_id }}
  },
  initOptions: {
    onLoad: 'login-required'
  }
};
{% endif %}
@NgModule({
  imports: [
    BrowserModule,
    BrowserAnimationsModule,
    OntimizeWebModule,
    {% if use_keycloak %}
    OntimizeKeycloakModule,
    {% endif %}
    AppRoutingModule,
    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })
  ],
  declarations: [
    AppComponent
  ],
  bootstrap: [
    AppComponent
  ],
  providers: [
    { provide: APP_CONFIG, useValue: CONFIG },
    ONTIMIZE_PROVIDERS,
    {% if use_keycloak %}
    { provide: O_AUTH_SERVICE, useValue: OKeycloakAuthService },
    { provide: O_KEYCLOAK_OPTIONS, useValue: keycloakOptions },
    {% endif %}
    ...customProviders
  ]
})
export class AppModule { }
