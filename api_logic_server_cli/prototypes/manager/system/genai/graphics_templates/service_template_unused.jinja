from flask import request, jsonify
import logging
import safrs
from sqlalchemy.orm import aliased
from sqlalchemy import extract, func
from database.models import {{classes_used}}

app_logger = logging.getLogger("api_logic_server_app")

def add_service(app, api, project_dir, swagger_host: str, PORT: str, method_decorators = []):
    pass

    @app.route('/{{name}}, methods=["GET","OPTIONS"]')
    def {{name}}():
        """        
        Illustrates:
        * Complex query with multiple joins

        Test it with:
        
                curl -X GET "http://localhost:5656/{{name}}"
        
        """
        if request.method == 'OPTIONS':
            return jsonify({ "result": "ok" })
            
        from api.api_discovery.graphics_services import GraphicsServices 
        results = GraphicsServices.{{ name }}()
        # Render the HTML template with the results
        # Ensure the template is located in the "templates" directory relative to the project root.
        from jinja2 import Environment, FileSystemLoader
        from flask import Response
        env = Environment(loader = FileSystemLoader('templates')) # create a templates folder in root path and add jinja files
        template = env.get_template('{{ name }}.jinja')
        output = template.render(result=results)
        print(output)
    
        return output