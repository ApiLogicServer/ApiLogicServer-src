
@classmethod
@add_method(models.{{class_x_axis}})
@jsonapi_rpc(http_methods=['GET', 'OPTIONS'])
def {{name}}(*args, **kwargs):
    """        
    Complex query with multiple joins, for graphics, from 'Graph Sales by Category', etc.
    Test with Swagger.
    """
    if request.method == 'OPTIONS':
        return jsonify({ "result": "ok" })
        
    from database.models import {{classes_used}}
    db = safrs.DB
    session = db.session    # sqlalchemy.orm.scoping.scoped_session
    # Security.set_user_sa()  # an endpoint that requires no auth header (see also @bypass_security)

    # SQLAlchemy query
    query = {{ sqlalchemy_query }} 
    # Execute query and fetch results
    results = query.all()
    from decimal import Decimal
    columns = ['{{ xAxis }}' , '{{ yAxis }}']
    results = [{columns[0]: row[0], columns[1]: round(float(row[1]), 2)} for row in results]
    title = '{{ title }}'
    graph_type = '{{ graph_type }}'.lower()
    json_results = {
        "results": results,
        "columns": columns,
        "title": title,
        "chart_type": graph_type,
        "xAxis": columns[0],
        "yAxis": columns[1],
    }
    
    return json_results 
