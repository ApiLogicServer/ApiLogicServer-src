
Item Quantity Update Recalculates Amounts
 - 2025-10-20 11:28:01,686 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10a00dd00) (sqlalchemy before_flush)			 - 2025-10-20 11:28:01,688 - logic_logger - INFO
..Item[148] {Update - client} id: 148, order_id: 132, product_id: 2, quantity:  [5-->] 10, amount: 450.0000000000, unit_price: 90.0000000000  row: 0x10a262350  session: 0x10a00dd00  ins_upd_dlt: upd, initial: upd - 2025-10-20 11:28:01,688 - logic_logger - INFO
..Item[148] {Formula amount} id: 148, order_id: 132, product_id: 2, quantity:  [5-->] 10, amount:  [450.0000000000-->] 900.0000000000, unit_price: 90.0000000000  row: 0x10a262350  session: 0x10a00dd00  ins_upd_dlt: upd, initial: upd - 2025-10-20 11:28:01,688 - logic_logger - INFO
....Order[132] {Update - Adjusting order: amount_total} id: 132, notes: Test order, customer_id: 165, CreatedOn: 2025-10-20, date_shipped: None, amount_total:  [450.0000000000-->] 900.0000000000  row: 0x10a2616d0  session: 0x10a00dd00  ins_upd_dlt: upd, initial: upd - 2025-10-20 11:28:01,689 - logic_logger - INFO
......Customer[165] {Update - Adjusting customer: balance} id: 165, name: Bob 1760984881672, balance:  [450.0000000000-->] 900.0000000000, credit_limit: 2000.0000000000, email: None, email_opt_out: None  row: 0x10a263ad0  session: 0x10a00dd00  ins_upd_dlt: upd, initial: upd - 2025-10-20 11:28:01,689 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10a00dd00)   										 - 2025-10-20 11:28:01,689 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10a00dd00)   										 - 2025-10-20 11:28:01,689 - logic_logger - INFO
....Order[132] {AfterFlush Event} id: 132, notes: Test order, customer_id: 165, CreatedOn: 2025-10-20, date_shipped: None, amount_total:  [450.0000000000-->] 900.0000000000  row: 0x10a2616d0  session: 0x10a00dd00  ins_upd_dlt: upd, initial: upd - 2025-10-20 11:28:01,690 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-20 11:28:01,690 - logic_logger - INFO
  Customer		## - 2025-10-20 11:28:01,690 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x108fed080>)		## - 2025-10-20 11:28:01,690 - logic_logger - INFO
  Item		## - 2025-10-20 11:28:01,690 - logic_logger - INFO
    2. Derive <class 'database.models.Item'>.amount as Formula (1): <function>		## - 2025-10-20 11:28:01,690 - logic_logger - INFO
  Order		## - 2025-10-20 11:28:01,690 - logic_logger - INFO
    3. RowEvent Order.send_order_to_shipping() 		## - 2025-10-20 11:28:01,690 - logic_logger - INFO
    4. Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)		## - 2025-10-20 11:28:01,690 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10a00dd00))       	 - 2025-10-20 11:28:01,690 - logic_logger - INFO
