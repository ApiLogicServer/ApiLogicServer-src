
Ship Order Excludes from Balance
 - 2025-10-24 08:44:43,999 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10a377ac0) (sqlalchemy before_flush)			 - 2025-10-24 08:44:44,001 - logic_logger - INFO
..Order[31] {Update - client} id: 31, notes: Test order - Ship Order Excludes from Balance, customer_id: 36, CreatedOn: 2025-10-24, date_shipped:  [None-->] 2025-10-22 00:00:00, amount_total: 180.0000000000  row: 0x10a44ac50  session: 0x10a377ac0  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:44,001 - logic_logger - INFO
....Customer[36] {Update - Adjusting customer: balance} id: 36, name: Charlie 1761320683984, balance:  [180.0000000000-->] 0E-10, credit_limit: 2000.0000000000, email: None, email_opt_out: None  row: 0x10a3cb050  session: 0x10a377ac0  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:44,002 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10a377ac0)   										 - 2025-10-24 08:44:44,002 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10a377ac0)   										 - 2025-10-24 08:44:44,002 - logic_logger - INFO
..Order[31] {AfterFlush Event} id: 31, notes: Test order - Ship Order Excludes from Balance, customer_id: 36, CreatedOn: 2025-10-24, date_shipped:  [None-->] 2025-10-22 00:00:00, amount_total: 180.0000000000  row: 0x10a44ac50  session: 0x10a377ac0  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:44,002 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-24 08:44:44,002 - logic_logger - INFO
  Customer		## - 2025-10-24 08:44:44,002 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x109355260>)		## - 2025-10-24 08:44:44,002 - logic_logger - INFO
  Order		## - 2025-10-24 08:44:44,002 - logic_logger - INFO
    2. RowEvent Order.send_order_to_shipping() 		## - 2025-10-24 08:44:44,002 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10a377ac0))       	 - 2025-10-24 08:44:44,002 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10a376140) (sqlalchemy before_flush)			 - 2025-10-24 08:44:44,008 - logic_logger - INFO
..Customer[None] {Insert - client} id: None, name: Diana 1761320684007, balance: 0, credit_limit: 5000, email: None, email_opt_out: None  row: 0x10a48d250  session: 0x10a376140  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:44,008 - logic_logger - INFO
..Customer[None] {server aggregate_defaults: balance } id: None, name: Diana 1761320684007, balance: 0, credit_limit: 5000, email: None, email_opt_out: None  row: 0x10a48d250  session: 0x10a376140  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:44,008 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10a376140)   										 - 2025-10-24 08:44:44,008 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10a376140)   										 - 2025-10-24 08:44:44,009 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-24 08:44:44,009 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10a376140))       	 - 2025-10-24 08:44:44,009 - logic_logger - INFO
