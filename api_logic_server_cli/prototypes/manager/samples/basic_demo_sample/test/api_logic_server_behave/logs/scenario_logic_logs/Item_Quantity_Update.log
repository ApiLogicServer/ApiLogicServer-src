
Item Quantity Update
 - 2025-10-20 10:00:28,295 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10be51d00) (sqlalchemy before_flush)			 - 2025-10-20 10:00:28,296 - logic_logger - INFO
..Item[73] {Update - client} id: 73, order_id: 62, product_id: 2, quantity:  [5-->] 10, amount: 450.0000000000, unit_price: 90.0000000000  row: 0x10c04ead0  session: 0x10be51d00  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,296 - logic_logger - INFO
..Item[73] {Formula amount} id: 73, order_id: 62, product_id: 2, quantity:  [5-->] 10, amount:  [450.0000000000-->] 900.0000000000, unit_price: 90.0000000000  row: 0x10c04ead0  session: 0x10be51d00  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,297 - logic_logger - INFO
....Order[62] {Update - Adjusting order: amount_total} id: 62, notes: Test order for CRUD operations, customer_id: 78, CreatedOn: 2025-10-20, date_shipped: None, amount_total:  [450.0000000000-->] 900.0000000000  row: 0x10beab7d0  session: 0x10be51d00  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,297 - logic_logger - INFO
......Customer[78] {Update - Adjusting customer: balance} id: 78, name: TestCustomer 1760979628281, balance:  [450.0000000000-->] 900.0000000000, credit_limit: 5000.0000000000, email: None, email_opt_out: None  row: 0x10bf1db50  session: 0x10be51d00  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,297 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10be51d00)   										 - 2025-10-20 10:00:28,298 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10be51d00)   										 - 2025-10-20 10:00:28,298 - logic_logger - INFO
....Order[62] {AfterFlush Event} id: 62, notes: Test order for CRUD operations, customer_id: 78, CreatedOn: 2025-10-20, date_shipped: None, amount_total:  [450.0000000000-->] 900.0000000000  row: 0x10beab7d0  session: 0x10be51d00  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,298 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-20 10:00:28,298 - logic_logger - INFO
  Customer		## - 2025-10-20 10:00:28,299 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x10ad6d080>)		## - 2025-10-20 10:00:28,299 - logic_logger - INFO
  Item		## - 2025-10-20 10:00:28,299 - logic_logger - INFO
    2. Derive <class 'database.models.Item'>.amount as Formula (1): <function>		## - 2025-10-20 10:00:28,299 - logic_logger - INFO
  Order		## - 2025-10-20 10:00:28,299 - logic_logger - INFO
    3. RowEvent Order.send_order_to_shipping() 		## - 2025-10-20 10:00:28,299 - logic_logger - INFO
    4. Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)		## - 2025-10-20 10:00:28,299 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10be51d00))       	 - 2025-10-20 10:00:28,299 - logic_logger - INFO
