
Exceed Credit Limit Rejected
 - 2025-10-24 08:44:44,036 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10a377130) (sqlalchemy before_flush)			 - 2025-10-24 08:44:44,038 - logic_logger - INFO
..Customer[38] {Update - client} id: 38, name: Silent 1761320684031, balance: 0E-10, credit_limit: 1000.0000000000, email: None, email_opt_out: None  row: 0x10a48c950  session: 0x10a377130  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:44,038 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10a377130)   										 - 2025-10-24 08:44:44,038 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10a377130)   										 - 2025-10-24 08:44:44,038 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-24 08:44:44,038 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10a377130))       	 - 2025-10-24 08:44:44,038 - logic_logger - INFO
Logic Phase:		ROW LOGIC IGNORE RE-RAISE(session=0x10a377130) (sqlalchemy before_flush)			 - 2025-10-24 08:44:44,038 - logic_logger - DEBUG

Logic Phase:		ROW LOGIC		(session=0x10a377130) (sqlalchemy before_flush)			 - 2025-10-24 08:44:44,038 - logic_logger - INFO
..Product[2] {Update - client} id: 2, name: Widget, unit_price: 90.0000000000, carbon_neutral: None  row: 0x10a451400  session: 0x10a377130  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:44,038 - logic_logger - INFO
..Item[None] {Insert - client} id: None, order_id: None, product_id: None, quantity: 20, amount: None, unit_price: None  row: 0x10a3cbcd0  session: 0x10a377130  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:44,039 - logic_logger - INFO
..Item[None] {copy_rules for role: product - unit_price} id: None, order_id: None, product_id: None, quantity: 20, amount: None, unit_price: 90.0000000000  row: 0x10a3cbcd0  session: 0x10a377130  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:44,039 - logic_logger - INFO
..Item[None] {Formula amount} id: None, order_id: None, product_id: None, quantity: 20, amount: 1800.0000000000, unit_price: 90.0000000000  row: 0x10a3cbcd0  session: 0x10a377130  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:44,039 - logic_logger - INFO
....Order[None] {server aggregate_defaults: amount_total } id: None, notes: Test order - Exceed Credit Limit Rejected, customer_id: 38, CreatedOn: None, date_shipped: None, amount_total:  [None-->] 0  row: 0x10a3cb1d0  session: 0x10a377130  ins_upd_dlt: *, initial: * - 2025-10-24 08:44:44,039 - logic_logger - INFO
..Item[None] {TODO DB adjust_from_inserted/adopted_child adjusts Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)} id: None, order_id: None, product_id: None, quantity: 20, amount: 1800.0000000000, unit_price: 90.0000000000  row: 0x10a3cbcd0  session: 0x10a377130  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:44,039 - logic_logger - INFO
....Order[None] {Adjustment logic chaining deferred for this parent parent do_defer_adjustment: True, is_parent_submitted: True, is_parent_row_processed: False, order} id: None, notes: Test order - Exceed Credit Limit Rejected, customer_id: 38, CreatedOn: None, date_shipped: None, amount_total:  [None-->] 1800.0000000000  row: 0x10a3cb1d0  session: 0x10a377130  ins_upd_dlt: *, initial: * - 2025-10-24 08:44:44,039 - logic_logger - INFO
..Order[None] {Insert - client} id: None, notes: Test order - Exceed Credit Limit Rejected, customer_id: 38, CreatedOn: None, date_shipped: None, amount_total: 1800.0000000000  row: 0x10a3cb1d0  session: 0x10a377130  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:44,039 - logic_logger - INFO
..Order[None] {early_row_event_all_classes - handle_all did stamping} id: None, notes: Test order - Exceed Credit Limit Rejected, customer_id: 38, CreatedOn: 2025-10-24 08:44:44.039537, date_shipped: None, amount_total: 1800.0000000000  row: 0x10a3cb1d0  session: 0x10a377130  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:44,039 - logic_logger - INFO
..Order[None] {TODO DB adjust_from_inserted/adopted_child adjusts Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x109355260>)} id: None, notes: Test order - Exceed Credit Limit Rejected, customer_id: 38, CreatedOn: 2025-10-24 08:44:44.039537, date_shipped: None, amount_total: 1800.0000000000  row: 0x10a3cb1d0  session: 0x10a377130  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:44,039 - logic_logger - INFO
....Customer[38] {Update - Adjusting customer: balance} id: 38, name: Silent 1761320684031, balance:  [0E-10-->] 1800.0000000000, credit_limit: 1000.0000000000, email: None, email_opt_out: None  row: 0x10a48c950  session: 0x10a377130  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:44,039 - logic_logger - INFO
....Customer[38] {Constraint Failure: Customer balance (1800.0000000000) exceeds credit limit (1000.0000000000)} id: 38, name: Silent 1761320684031, balance:  [0E-10-->] 1800.0000000000, credit_limit: 1000.0000000000, email: None, email_opt_out: None  row: 0x10a48c950  session: 0x10a377130  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:44,040 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-24 08:44:44,040 - logic_logger - INFO
  Customer		## - 2025-10-24 08:44:44,040 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x109355260>)		## - 2025-10-24 08:44:44,040 - logic_logger - INFO
    2. Constraint Function: None 		## - 2025-10-24 08:44:44,040 - logic_logger - INFO
  Item		## - 2025-10-24 08:44:44,040 - logic_logger - INFO
    3. Derive <class 'database.models.Item'>.unit_price as Copy(product.unit_price)		## - 2025-10-24 08:44:44,040 - logic_logger - INFO
    4. Derive <class 'database.models.Item'>.amount as Formula (1): <function>		## - 2025-10-24 08:44:44,040 - logic_logger - INFO
  Order		## - 2025-10-24 08:44:44,040 - logic_logger - INFO
    5. Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)		## - 2025-10-24 08:44:44,040 - logic_logger - INFO
