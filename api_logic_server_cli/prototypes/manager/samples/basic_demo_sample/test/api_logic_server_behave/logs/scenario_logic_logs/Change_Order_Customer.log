
Change Order Customer
 - 2025-10-24 08:44:43,976 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10a376f10) (sqlalchemy before_flush)			 - 2025-10-24 08:44:43,978 - logic_logger - INFO
..Order[30] {Update - client} id: 30, notes: Test order - Change Order Customer, customer_id:  [34-->] 35, CreatedOn: 2025-10-24, date_shipped: None, amount_total: 450.0000000000  row: 0x10a4490d0  session: 0x10a376f10  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:43,978 - logic_logger - INFO
....Customer[35] {Update - Adjusting customer: balance, balance} id: 35, name: Bob 1761320683960, balance:  [0E-10-->] 450.0000000000, credit_limit: 3000.0000000000, email: None, email_opt_out: None  row: 0x10a44a7d0  session: 0x10a376f10  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:43,978 - logic_logger - INFO
....Customer[34] {Update - Adjusting Old customer} id: 34, name: Alice 1761320683958, balance:  [450.0000000000-->] 0E-10, credit_limit: 5000.0000000000, email: None, email_opt_out: None  row: 0x10a44bad0  session: 0x10a376f10  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:43,979 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10a376f10)   										 - 2025-10-24 08:44:43,979 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10a376f10)   										 - 2025-10-24 08:44:43,979 - logic_logger - INFO
..Order[30] {AfterFlush Event} id: 30, notes: Test order - Change Order Customer, customer_id:  [34-->] 35, CreatedOn: 2025-10-24, date_shipped: None, amount_total: 450.0000000000  row: 0x10a4490d0  session: 0x10a376f10  ins_upd_dlt: upd, initial: upd - 2025-10-24 08:44:43,979 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-24 08:44:43,979 - logic_logger - INFO
  Customer		## - 2025-10-24 08:44:43,979 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x109355260>)		## - 2025-10-24 08:44:43,979 - logic_logger - INFO
  Order		## - 2025-10-24 08:44:43,979 - logic_logger - INFO
    2. RowEvent Order.send_order_to_shipping() 		## - 2025-10-24 08:44:43,979 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10a376f10))       	 - 2025-10-24 08:44:43,979 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10a375590) (sqlalchemy before_flush)			 - 2025-10-24 08:44:43,985 - logic_logger - INFO
..Customer[None] {Insert - client} id: None, name: Charlie 1761320683984, balance: 0, credit_limit: 2000, email: None, email_opt_out: None  row: 0x10a48cf50  session: 0x10a375590  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:43,985 - logic_logger - INFO
..Customer[None] {server aggregate_defaults: balance } id: None, name: Charlie 1761320683984, balance: 0, credit_limit: 2000, email: None, email_opt_out: None  row: 0x10a48cf50  session: 0x10a375590  ins_upd_dlt: ins, initial: ins - 2025-10-24 08:44:43,985 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10a375590)   										 - 2025-10-24 08:44:43,985 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10a375590)   										 - 2025-10-24 08:44:43,985 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-24 08:44:43,985 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10a375590))       	 - 2025-10-24 08:44:43,985 - logic_logger - INFO
