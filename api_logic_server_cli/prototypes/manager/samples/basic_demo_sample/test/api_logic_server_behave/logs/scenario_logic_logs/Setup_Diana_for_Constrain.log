
Setup Diana for Constraint Test
 - 2025-10-20 10:00:28,426 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10be53f00) (sqlalchemy before_flush)			 - 2025-10-20 10:00:28,427 - logic_logger - INFO
..Customer[None] {Insert - client} id: None, name: Diana 1760979628426, balance: 0, credit_limit: 1000, email: None, email_opt_out: None  row: 0x10c04f5d0  session: 0x10be53f00  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,427 - logic_logger - INFO
..Customer[None] {server aggregate_defaults: balance } id: None, name: Diana 1760979628426, balance: 0, credit_limit: 1000, email: None, email_opt_out: None  row: 0x10c04f5d0  session: 0x10be53f00  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,427 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10be53f00)   										 - 2025-10-20 10:00:28,427 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10be53f00)   										 - 2025-10-20 10:00:28,427 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-20 10:00:28,427 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10be53f00))       	 - 2025-10-20 10:00:28,427 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10be51d00) (sqlalchemy before_flush)			 - 2025-10-20 10:00:28,430 - logic_logger - INFO
..Order[None] {Insert - client} id: None, notes: Setup order for constraint test, customer_id: 84, CreatedOn: None, date_shipped: None, amount_total: None  row: 0x10c04f0d0  session: 0x10be51d00  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,430 - logic_logger - INFO
..Order[None] {early_row_event_all_classes - handle_all did stamping} id: None, notes: Setup order for constraint test, customer_id: 84, CreatedOn: 2025-10-20 10:00:28.430516, date_shipped: None, amount_total: None  row: 0x10c04f0d0  session: 0x10be51d00  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,430 - logic_logger - INFO
..Order[None] {server aggregate_defaults: amount_total } id: None, notes: Setup order for constraint test, customer_id: 84, CreatedOn: 2025-10-20 10:00:28.430516, date_shipped: None, amount_total: 0  row: 0x10c04f0d0  session: 0x10be51d00  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,430 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10be51d00)   										 - 2025-10-20 10:00:28,430 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10be51d00)   										 - 2025-10-20 10:00:28,431 - logic_logger - INFO
..Order[68] {AfterFlush Event} id: 68, notes: Setup order for constraint test, customer_id: 84, CreatedOn: 2025-10-20 10:00:28.430516, date_shipped: None, amount_total: 0  row: 0x10c04f0d0  session: 0x10be51d00  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,431 - logic_logger - INFO
..Order[68] {Sending Order to Shipping [Note: **Kafka not enabled** ]} id: 68, notes: Setup order for constraint test, customer_id: 84, CreatedOn: 2025-10-20 10:00:28.430516, date_shipped: None, amount_total: 0  row: 0x10c04f0d0  session: 0x10be51d00  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,431 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-20 10:00:28,431 - logic_logger - INFO
  Customer		## - 2025-10-20 10:00:28,431 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x10ad6d080>)		## - 2025-10-20 10:00:28,431 - logic_logger - INFO
  Order		## - 2025-10-20 10:00:28,431 - logic_logger - INFO
    2. RowEvent Order.send_order_to_shipping() 		## - 2025-10-20 10:00:28,431 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10be51d00))       	 - 2025-10-20 10:00:28,431 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10be53df0) (sqlalchemy before_flush)			 - 2025-10-20 10:00:28,434 - logic_logger - INFO
..Item[None] {Insert - client} id: None, order_id: 68, product_id: 2, quantity: 8, amount: None, unit_price: None  row: 0x10c04cdd0  session: 0x10be53df0  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,434 - logic_logger - INFO
..Item[None] {copy_rules for role: product - unit_price} id: None, order_id: 68, product_id: 2, quantity: 8, amount: None, unit_price: 90.0000000000  row: 0x10c04cdd0  session: 0x10be53df0  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,434 - logic_logger - INFO
..Item[None] {Formula amount} id: None, order_id: 68, product_id: 2, quantity: 8, amount: 720.0000000000, unit_price: 90.0000000000  row: 0x10c04cdd0  session: 0x10be53df0  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,435 - logic_logger - INFO
..Item[None] {TODO DB adjust_from_inserted/adopted_child adjusts Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)} id: None, order_id: 68, product_id: 2, quantity: 8, amount: 720.0000000000, unit_price: 90.0000000000  row: 0x10c04cdd0  session: 0x10be53df0  ins_upd_dlt: ins, initial: ins - 2025-10-20 10:00:28,435 - logic_logger - INFO
....Order[68] {Update - Adjusting order: amount_total} id: 68, notes: Setup order for constraint test, customer_id: 84, CreatedOn: 2025-10-20, date_shipped: None, amount_total:  [0E-10-->] 720.0000000000  row: 0x10c04d950  session: 0x10be53df0  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,435 - logic_logger - INFO
......Customer[84] {Update - Adjusting customer: balance} id: 84, name: Diana 1760979628426, balance:  [0E-10-->] 720.0000000000, credit_limit: 1000.0000000000, email: None, email_opt_out: None  row: 0x10bf1dd50  session: 0x10be53df0  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,435 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10be53df0)   										 - 2025-10-20 10:00:28,435 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10be53df0)   										 - 2025-10-20 10:00:28,436 - logic_logger - INFO
....Order[68] {AfterFlush Event} id: 68, notes: Setup order for constraint test, customer_id: 84, CreatedOn: 2025-10-20, date_shipped: None, amount_total:  [0E-10-->] 720.0000000000  row: 0x10c04d950  session: 0x10be53df0  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,436 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-20 10:00:28,436 - logic_logger - INFO
  Customer		## - 2025-10-20 10:00:28,436 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x10ad6d080>)		## - 2025-10-20 10:00:28,436 - logic_logger - INFO
  Item		## - 2025-10-20 10:00:28,436 - logic_logger - INFO
    2. Derive <class 'database.models.Item'>.amount as Formula (1): <function>		## - 2025-10-20 10:00:28,436 - logic_logger - INFO
    3. Derive <class 'database.models.Item'>.unit_price as Copy(product.unit_price)		## - 2025-10-20 10:00:28,436 - logic_logger - INFO
  Order		## - 2025-10-20 10:00:28,436 - logic_logger - INFO
    4. Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)		## - 2025-10-20 10:00:28,436 - logic_logger - INFO
    5. RowEvent Order.send_order_to_shipping() 		## - 2025-10-20 10:00:28,436 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10be53df0))       	 - 2025-10-20 10:00:28,436 - logic_logger - INFO
