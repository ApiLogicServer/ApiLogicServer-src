
Change Item Product
 - 2025-10-20 10:00:28,490 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10be52360) (sqlalchemy before_flush)			 - 2025-10-20 10:00:28,491 - logic_logger - INFO
..Item[82] {Update - client} id: 82, order_id: 70, product_id:  [2-->] 1, quantity: 1, amount: 90.0000000000, unit_price: 90.0000000000  row: 0x10c04e950  session: 0x10be52360  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,491 - logic_logger - INFO
..Item[82] {copy_rules for role: product - unit_price} id: 82, order_id: 70, product_id:  [2-->] 1, quantity: 1, amount: 90.0000000000, unit_price:  [90.0000000000-->] 150.0000000000  row: 0x10c04e950  session: 0x10be52360  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,492 - logic_logger - INFO
..Item[82] {Formula amount} id: 82, order_id: 70, product_id:  [2-->] 1, quantity: 1, amount:  [90.0000000000-->] 150.0000000000, unit_price:  [90.0000000000-->] 150.0000000000  row: 0x10c04e950  session: 0x10be52360  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,492 - logic_logger - INFO
....Order[70] {Update - Adjusting order: amount_total} id: 70, notes: Order for product change test, customer_id: 86, CreatedOn: 2025-10-20, date_shipped: None, amount_total:  [90.0000000000-->] 150.0000000000  row: 0x10c04db50  session: 0x10be52360  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,492 - logic_logger - INFO
......Customer[86] {Update - Adjusting customer: balance} id: 86, name: ProductChangeTestCustomer 1760979628475, balance:  [90.0000000000-->] 150.0000000000, credit_limit: 5000.0000000000, email: None, email_opt_out: None  row: 0x10bf1f7d0  session: 0x10be52360  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,492 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10be52360)   										 - 2025-10-20 10:00:28,493 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10be52360)   										 - 2025-10-20 10:00:28,493 - logic_logger - INFO
....Order[70] {AfterFlush Event} id: 70, notes: Order for product change test, customer_id: 86, CreatedOn: 2025-10-20, date_shipped: None, amount_total:  [90.0000000000-->] 150.0000000000  row: 0x10c04db50  session: 0x10be52360  ins_upd_dlt: upd, initial: upd - 2025-10-20 10:00:28,493 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-20 10:00:28,493 - logic_logger - INFO
  Customer		## - 2025-10-20 10:00:28,493 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x10ad6d080>)		## - 2025-10-20 10:00:28,493 - logic_logger - INFO
  Item		## - 2025-10-20 10:00:28,493 - logic_logger - INFO
    2. Derive <class 'database.models.Item'>.amount as Formula (1): <function>		## - 2025-10-20 10:00:28,493 - logic_logger - INFO
    3. Derive <class 'database.models.Item'>.unit_price as Copy(product.unit_price)		## - 2025-10-20 10:00:28,493 - logic_logger - INFO
  Order		## - 2025-10-20 10:00:28,493 - logic_logger - INFO
    4. Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)		## - 2025-10-20 10:00:28,493 - logic_logger - INFO
    5. RowEvent Order.send_order_to_shipping() 		## - 2025-10-20 10:00:28,494 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10be52360))       	 - 2025-10-20 10:00:28,494 - logic_logger - INFO
