
Multi-Item B2B Order for Bob
 - 2025-10-19 20:29:14,098 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10b786ad0) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,100 - logic_logger - INFO
..Customer[100] {Update - client} id: 100, name: Bob 1760930954093, balance: 0E-10, credit_limit: 3000.0000000000, email: None, email_opt_out: None  row: 0x10b9d58d0  session: 0x10b786ad0  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,100 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10b786ad0)   										 - 2025-10-19 20:29:14,100 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10b786ad0)   										 - 2025-10-19 20:29:14,100 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-19 20:29:14,100 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10b786ad0))       	 - 2025-10-19 20:29:14,100 - logic_logger - INFO
Logic Phase:		ROW LOGIC IGNORE RE-RAISE(session=0x10b786ad0) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,100 - logic_logger - DEBUG

Logic Phase:		ROW LOGIC		(session=0x10b786ad0) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,100 - logic_logger - INFO
..Product[2] {Update - client} id: 2, name: Widget, unit_price: 90.0000000000, carbon_neutral: True  row: 0x10ba2fd90  session: 0x10b786ad0  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,100 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10b786ad0)   										 - 2025-10-19 20:29:14,100 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10b786ad0)   										 - 2025-10-19 20:29:14,101 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-19 20:29:14,101 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10b786ad0))       	 - 2025-10-19 20:29:14,101 - logic_logger - INFO
Logic Phase:		ROW LOGIC IGNORE RE-RAISE(session=0x10b786ad0) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,101 - logic_logger - DEBUG

Logic Phase:		ROW LOGIC		(session=0x10b786ad0) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,101 - logic_logger - INFO
..Product[1] {Update - client} id: 1, name: Gadget, unit_price: 150.0000000000, carbon_neutral: True  row: 0x10ba2d160  session: 0x10b786ad0  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,101 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10b786ad0)   										 - 2025-10-19 20:29:14,101 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10b786ad0)   										 - 2025-10-19 20:29:14,101 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-19 20:29:14,101 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10b786ad0))       	 - 2025-10-19 20:29:14,101 - logic_logger - INFO
Logic Phase:		ROW LOGIC IGNORE RE-RAISE(session=0x10b786ad0) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,101 - logic_logger - DEBUG

Logic Phase:		ROW LOGIC		(session=0x10b786ad0) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,101 - logic_logger - INFO
..Product[5] {Update - client} id: 5, name: Green, unit_price: 109.0000000000, carbon_neutral: True  row: 0x10ba2c440  session: 0x10b786ad0  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,101 - logic_logger - INFO
..Item[None] {Insert - client} id: None, order_id: None, product_id: None, quantity: 1, amount: None, unit_price: None  row: 0x10b858d50  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,101 - logic_logger - INFO
..Item[None] {copy_rules for role: product - unit_price} id: None, order_id: None, product_id: None, quantity: 1, amount: None, unit_price: 109.0000000000  row: 0x10b858d50  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {Formula amount} id: None, order_id: None, product_id: None, quantity: 1, amount: 109.0000000000, unit_price: 109.0000000000  row: 0x10b858d50  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
....Order[None] {server aggregate_defaults: amount_total } id: None, notes: Multi-item test order, customer_id: 100, CreatedOn: None, date_shipped: None, amount_total:  [None-->] 0  row: 0x10b7769d0  session: 0x10b786ad0  ins_upd_dlt: *, initial: * - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {TODO DB adjust_from_inserted/adopted_child adjusts Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)} id: None, order_id: None, product_id: None, quantity: 1, amount: 109.0000000000, unit_price: 109.0000000000  row: 0x10b858d50  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
....Order[None] {Adjustment logic chaining deferred for this parent parent do_defer_adjustment: True, is_parent_submitted: True, is_parent_row_processed: False, order} id: None, notes: Multi-item test order, customer_id: 100, CreatedOn: None, date_shipped: None, amount_total:  [None-->] 109.0000000000  row: 0x10b7769d0  session: 0x10b786ad0  ins_upd_dlt: *, initial: * - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {Insert - client} id: None, order_id: None, product_id: 1, quantity: 2, amount: None, unit_price: None  row: 0x10b858f50  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {copy_rules for role: product - unit_price} id: None, order_id: None, product_id: 1, quantity: 2, amount: None, unit_price: 150.0000000000  row: 0x10b858f50  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {Formula amount} id: None, order_id: None, product_id: 1, quantity: 2, amount: 300.0000000000, unit_price: 150.0000000000  row: 0x10b858f50  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {TODO DB adjust_from_inserted/adopted_child adjusts Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)} id: None, order_id: None, product_id: 1, quantity: 2, amount: 300.0000000000, unit_price: 150.0000000000  row: 0x10b858f50  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
....Order[None] {Adjustment logic chaining deferred for this parent parent do_defer_adjustment: True, is_parent_submitted: True, is_parent_row_processed: False, order} id: None, notes: Multi-item test order, customer_id: 100, CreatedOn: None, date_shipped: None, amount_total:  [109.0000000000-->] 409.0000000000  row: 0x10b7769d0  session: 0x10b786ad0  ins_upd_dlt: *, initial: * - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {Insert - client} id: None, order_id: None, product_id: 2, quantity: 1, amount: None, unit_price: None  row: 0x10b9d73d0  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {copy_rules for role: product - unit_price} id: None, order_id: None, product_id: 2, quantity: 1, amount: None, unit_price: 90.0000000000  row: 0x10b9d73d0  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {Formula amount} id: None, order_id: None, product_id: 2, quantity: 1, amount: 90.0000000000, unit_price: 90.0000000000  row: 0x10b9d73d0  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,102 - logic_logger - INFO
..Item[None] {TODO DB adjust_from_inserted/adopted_child adjusts Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)} id: None, order_id: None, product_id: 2, quantity: 1, amount: 90.0000000000, unit_price: 90.0000000000  row: 0x10b9d73d0  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,103 - logic_logger - INFO
....Order[None] {Adjustment logic chaining deferred for this parent parent do_defer_adjustment: True, is_parent_submitted: True, is_parent_row_processed: False, order} id: None, notes: Multi-item test order, customer_id: 100, CreatedOn: None, date_shipped: None, amount_total:  [409.0000000000-->] 499.0000000000  row: 0x10b7769d0  session: 0x10b786ad0  ins_upd_dlt: *, initial: * - 2025-10-19 20:29:14,103 - logic_logger - INFO
..Order[None] {Insert - client} id: None, notes: Multi-item test order, customer_id: 100, CreatedOn: None, date_shipped: None, amount_total: 499.0000000000  row: 0x10b7769d0  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,103 - logic_logger - INFO
..Order[None] {early_row_event_all_classes - handle_all did stamping} id: None, notes: Multi-item test order, customer_id: 100, CreatedOn: 2025-10-19 20:29:14.103193, date_shipped: None, amount_total: 499.0000000000  row: 0x10b7769d0  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,103 - logic_logger - INFO
..Order[None] {TODO DB adjust_from_inserted/adopted_child adjusts Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x10a7cd3a0>)} id: None, notes: Multi-item test order, customer_id: 100, CreatedOn: 2025-10-19 20:29:14.103193, date_shipped: None, amount_total: 499.0000000000  row: 0x10b7769d0  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,103 - logic_logger - INFO
....Customer[100] {Update - Adjusting customer: balance} id: 100, name: Bob 1760930954093, balance:  [0E-10-->] 499.0000000000, credit_limit: 3000.0000000000, email: None, email_opt_out: None  row: 0x10b9d58d0  session: 0x10b786ad0  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,103 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10b786ad0)   										 - 2025-10-19 20:29:14,103 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10b786ad0)   										 - 2025-10-19 20:29:14,104 - logic_logger - INFO
..Order[87] {AfterFlush Event} id: 87, notes: Multi-item test order, customer_id: 100, CreatedOn: 2025-10-19 20:29:14.103193, date_shipped: None, amount_total: 499.0000000000  row: 0x10b7769d0  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,104 - logic_logger - INFO
..Order[87] {Sending Order to Shipping [Note: **Kafka not enabled** ]} id: 87, notes: Multi-item test order, customer_id: 100, CreatedOn: 2025-10-19 20:29:14.103193, date_shipped: None, amount_total: 499.0000000000  row: 0x10b7769d0  session: 0x10b786ad0  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,104 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-19 20:29:14,104 - logic_logger - INFO
  Customer		## - 2025-10-19 20:29:14,104 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x10a7cd3a0>)		## - 2025-10-19 20:29:14,104 - logic_logger - INFO
  Item		## - 2025-10-19 20:29:14,104 - logic_logger - INFO
    2. Derive <class 'database.models.Item'>.unit_price as Copy(product.unit_price)		## - 2025-10-19 20:29:14,104 - logic_logger - INFO
    3. Derive <class 'database.models.Item'>.amount as Formula (1): <function>		## - 2025-10-19 20:29:14,104 - logic_logger - INFO
  Order		## - 2025-10-19 20:29:14,104 - logic_logger - INFO
    4. Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)		## - 2025-10-19 20:29:14,104 - logic_logger - INFO
    5. RowEvent Order.send_order_to_shipping() 		## - 2025-10-19 20:29:14,104 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10b786ad0))       	 - 2025-10-19 20:29:14,104 - logic_logger - INFO
Multi-item order created: 87 - 2025-10-19 20:29:14,108 - logic_logger - INFO
✓ Order has 3 items - 2025-10-19 20:29:14,111 - logic_logger - INFO
✓ Customer balance verified: 499.0 - 2025-10-19 20:29:14,114 - logic_logger - INFO
