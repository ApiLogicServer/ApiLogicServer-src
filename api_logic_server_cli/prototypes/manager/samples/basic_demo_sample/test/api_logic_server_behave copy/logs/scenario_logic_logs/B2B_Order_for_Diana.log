
B2B Order for Diana
 - 2025-10-19 20:29:14,057 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10b787020) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,059 - logic_logger - INFO
..Customer[98] {Update - client} id: 98, name: Diana 1760930954052, balance: 0E-10, credit_limit: 1000.0000000000, email: None, email_opt_out: None  row: 0x10b9d7ed0  session: 0x10b787020  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,059 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10b787020)   										 - 2025-10-19 20:29:14,059 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10b787020)   										 - 2025-10-19 20:29:14,059 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-19 20:29:14,059 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10b787020))       	 - 2025-10-19 20:29:14,059 - logic_logger - INFO
Logic Phase:		ROW LOGIC IGNORE RE-RAISE(session=0x10b787020) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,060 - logic_logger - DEBUG

Logic Phase:		ROW LOGIC		(session=0x10b787020) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,060 - logic_logger - INFO
..Product[1] {Update - client} id: 1, name: Gadget, unit_price: 150.0000000000, carbon_neutral: True  row: 0x10ba2cde0  session: 0x10b787020  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,060 - logic_logger - INFO
..Item[None] {Insert - client} id: None, order_id: None, product_id: None, quantity: 7, amount: None, unit_price: None  row: 0x10b8ef050  session: 0x10b787020  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,060 - logic_logger - INFO
..Item[None] {copy_rules for role: product - unit_price} id: None, order_id: None, product_id: None, quantity: 7, amount: None, unit_price: 150.0000000000  row: 0x10b8ef050  session: 0x10b787020  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,060 - logic_logger - INFO
..Item[None] {Formula amount} id: None, order_id: None, product_id: None, quantity: 7, amount: 1050.0000000000, unit_price: 150.0000000000  row: 0x10b8ef050  session: 0x10b787020  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,060 - logic_logger - INFO
....Order[None] {server aggregate_defaults: amount_total } id: None, notes: Test B2B order, customer_id: 98, CreatedOn: None, date_shipped: None, amount_total:  [None-->] 0  row: 0x10b775fd0  session: 0x10b787020  ins_upd_dlt: *, initial: * - 2025-10-19 20:29:14,060 - logic_logger - INFO
..Item[None] {TODO DB adjust_from_inserted/adopted_child adjusts Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)} id: None, order_id: None, product_id: None, quantity: 7, amount: 1050.0000000000, unit_price: 150.0000000000  row: 0x10b8ef050  session: 0x10b787020  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,060 - logic_logger - INFO
....Order[None] {Adjustment logic chaining deferred for this parent parent do_defer_adjustment: True, is_parent_submitted: True, is_parent_row_processed: False, order} id: None, notes: Test B2B order, customer_id: 98, CreatedOn: None, date_shipped: None, amount_total:  [None-->] 1050.0000000000  row: 0x10b775fd0  session: 0x10b787020  ins_upd_dlt: *, initial: * - 2025-10-19 20:29:14,060 - logic_logger - INFO
..Order[None] {Insert - client} id: None, notes: Test B2B order, customer_id: 98, CreatedOn: None, date_shipped: None, amount_total: 1050.0000000000  row: 0x10b775fd0  session: 0x10b787020  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,060 - logic_logger - INFO
..Order[None] {early_row_event_all_classes - handle_all did stamping} id: None, notes: Test B2B order, customer_id: 98, CreatedOn: 2025-10-19 20:29:14.060815, date_shipped: None, amount_total: 1050.0000000000  row: 0x10b775fd0  session: 0x10b787020  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,060 - logic_logger - INFO
..Order[None] {TODO DB adjust_from_inserted/adopted_child adjusts Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x10a7cd3a0>)} id: None, notes: Test B2B order, customer_id: 98, CreatedOn: 2025-10-19 20:29:14.060815, date_shipped: None, amount_total: 1050.0000000000  row: 0x10b775fd0  session: 0x10b787020  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,061 - logic_logger - INFO
....Customer[98] {Update - Adjusting customer: balance} id: 98, name: Diana 1760930954052, balance:  [0E-10-->] 1050.0000000000, credit_limit: 1000.0000000000, email: None, email_opt_out: None  row: 0x10b9d7ed0  session: 0x10b787020  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,061 - logic_logger - INFO
....Customer[98] {Constraint Failure: Customer balance (1050.0000000000) exceeds credit limit (1000.0000000000)} id: 98, name: Diana 1760930954052, balance:  [0E-10-->] 1050.0000000000, credit_limit: 1000.0000000000, email: None, email_opt_out: None  row: 0x10b9d7ed0  session: 0x10b787020  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,061 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-19 20:29:14,061 - logic_logger - INFO
  Customer		## - 2025-10-19 20:29:14,061 - logic_logger - INFO
    1. Derive <class 'database.models.Customer'>.balance as Sum(Order.amount_total Where Rule.sum(derive=Customer.balance, as_sum_of=Order.amount_total, where=lambda row: row.date_shipped is None) - <function declare_logic.<locals>.<lambda> at 0x10a7cd3a0>)		## - 2025-10-19 20:29:14,061 - logic_logger - INFO
    2. Constraint Function: None 		## - 2025-10-19 20:29:14,061 - logic_logger - INFO
  Item		## - 2025-10-19 20:29:14,061 - logic_logger - INFO
    3. Derive <class 'database.models.Item'>.unit_price as Copy(product.unit_price)		## - 2025-10-19 20:29:14,061 - logic_logger - INFO
    4. Derive <class 'database.models.Item'>.amount as Formula (1): <function>		## - 2025-10-19 20:29:14,061 - logic_logger - INFO
  Order		## - 2025-10-19 20:29:14,061 - logic_logger - INFO
    5. Derive <class 'database.models.Order'>.amount_total as Sum(Item.amount Where  - None)		## - 2025-10-19 20:29:14,061 - logic_logger - INFO
Order creation failed: 400 - 2025-10-19 20:29:14,063 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10b787f00) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,065 - logic_logger - INFO
..Customer[None] {Insert - client} id: None, name: Bob 1760930954064, balance: 0, credit_limit: 3000, email: None, email_opt_out: None  row: 0x10ba32e50  session: 0x10b787f00  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,065 - logic_logger - INFO
..Customer[None] {server aggregate_defaults: balance } id: None, name: Bob 1760930954064, balance: 0, credit_limit: 3000, email: None, email_opt_out: None  row: 0x10ba32e50  session: 0x10b787f00  ins_upd_dlt: ins, initial: ins - 2025-10-19 20:29:14,065 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10b787f00)   										 - 2025-10-19 20:29:14,065 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10b787f00)   										 - 2025-10-19 20:29:14,066 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-19 20:29:14,066 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10b787f00))       	 - 2025-10-19 20:29:14,066 - logic_logger - INFO
Created fresh customer: Bob 1760930954064 (ID: 99) - 2025-10-19 20:29:14,068 - logic_logger - INFO

Logic Phase:		ROW LOGIC		(session=0x10b785ae0) (sqlalchemy before_flush)			 - 2025-10-19 20:29:14,071 - logic_logger - INFO
..Product[2] {Update - client} id: 2, name: Widget, unit_price: 90.0000000000, carbon_neutral: True  row: 0x10ba2da90  session: 0x10b785ae0  ins_upd_dlt: upd, initial: upd - 2025-10-19 20:29:14,071 - logic_logger - INFO
Logic Phase:		COMMIT LOGIC		(session=0x10b785ae0)   										 - 2025-10-19 20:29:14,071 - logic_logger - INFO
Logic Phase:		AFTER_FLUSH LOGIC	(session=0x10b785ae0)   										 - 2025-10-19 20:29:14,071 - logic_logger - INFO

These Rules Fired (see Logic Phases, above, for actual order):		## - 2025-10-19 20:29:14,072 - logic_logger - INFO

Logic Phase:		COMPLETE(session=0x10b785ae0))       	 - 2025-10-19 20:29:14,072 - logic_logger - INFO
Product Widget set as carbon neutral - 2025-10-19 20:29:14,073 - logic_logger - INFO
