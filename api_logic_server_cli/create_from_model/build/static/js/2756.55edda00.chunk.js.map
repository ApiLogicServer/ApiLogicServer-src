{"version":3,"file":"static/js/2756.55edda00.chunk.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  constructor(_modeId, _defaults) {\n    this._modeId = _modeId;\n    this._defaults = _defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(() => this._updateExtraLibs());\n  }\n  _configChangeListener;\n  _updateExtraLibsToken;\n  _extraLibsChangeListener;\n  _worker;\n  _client;\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._client = (async () => {\n        this._worker = monaco_editor_core_exports.editor.createWebWorker({\n          moduleId: \"vs/language/typescript/tsWorker\",\n          label: this._modeId,\n          keepIdleModels: true,\n          createData: {\n            compilerOptions: this._defaults.getCompilerOptions(),\n            extraLibs: this._defaults.getExtraLibs(),\n            customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n            inlayHintsOptions: this._defaults.inlayHintsOptions\n          }\n        });\n        if (this._defaults.getEagerModelSync()) {\n          return await this._worker.withSyncedResources(monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri));\n        }\n        return await this._worker.getProxy();\n      })();\n    }\n    return this._client;\n  }\n  async getLanguageServiceWorker(...resources) {\n    const client = await this._getClient();\n    if (this._worker) {\n      await this._worker.withSyncedResources(resources);\n    }\n    return client;\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.decorators.d.ts\"] = true;\nlibFileSet[\"lib.decorators.legacy.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.date.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.number.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es2022.array.d.ts\"] = true;\nlibFileSet[\"lib.es2022.d.ts\"] = true;\nlibFileSet[\"lib.es2022.error.d.ts\"] = true;\nlibFileSet[\"lib.es2022.full.d.ts\"] = true;\nlibFileSet[\"lib.es2022.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2022.object.d.ts\"] = true;\nlibFileSet[\"lib.es2022.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2022.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2022.string.d.ts\"] = true;\nlibFileSet[\"lib.es2023.array.d.ts\"] = true;\nlibFileSet[\"lib.es2023.d.ts\"] = true;\nlibFileSet[\"lib.es2023.full.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  _libFiles;\n  _hasFetchedLibFiles;\n  _fetchLibFilesPromise;\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model)));\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  _disposables = [];\n  _listener = /* @__PURE__ */ Object.create(null);\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter((d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1);\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map((relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null);\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, diagnostics.map((d) => this._convertDiagnostics(model, d)));\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(diagStart + diagLength);\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(infoStart + infoLength);\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers !== void 0 && entry.kindModifiers.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(resource.toString(), offset, myItem.label);\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class extends Adapter {\n  signatureHelpTriggerCharacters = [\"(\", \",\"];\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar DocumentHighlightAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDocumentHighlights(resource.toString(), offset, [\n      resource.toString()\n    ]);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.flatMap((entry) => {\n      return entry.highlightSpans.map((highlightSpans) => {\n        return {\n          range: this._textSpanToRange(model, highlightSpans.textSpan),\n          kind: highlightSpans.kind === \"writtenReference\" ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n        };\n      });\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const root = await worker.getNavigationTree(resource.toString());\n    if (!root || model.isDisposed()) {\n      return;\n    }\n    const convert = (item, containerLabel) => {\n      const result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: [],\n        children: item.childItems?.map((child) => convert(child, item.text)),\n        containerName: containerLabel\n      };\n      return result2;\n    };\n    const result = root.childItems ? root.childItems.map((item) => convert(item)) : [];\n    return result;\n  }\n};\nvar Kind = class {\n};\n__publicField(Kind, \"unknown\", \"\");\n__publicField(Kind, \"keyword\", \"keyword\");\n__publicField(Kind, \"script\", \"script\");\n__publicField(Kind, \"module\", \"module\");\n__publicField(Kind, \"class\", \"class\");\n__publicField(Kind, \"interface\", \"interface\");\n__publicField(Kind, \"type\", \"type\");\n__publicField(Kind, \"enum\", \"enum\");\n__publicField(Kind, \"variable\", \"var\");\n__publicField(Kind, \"localVariable\", \"local var\");\n__publicField(Kind, \"function\", \"function\");\n__publicField(Kind, \"localFunction\", \"local function\");\n__publicField(Kind, \"memberFunction\", \"method\");\n__publicField(Kind, \"memberGetAccessor\", \"getter\");\n__publicField(Kind, \"memberSetAccessor\", \"setter\");\n__publicField(Kind, \"memberVariable\", \"property\");\n__publicField(Kind, \"constructorImplementation\", \"constructor\");\n__publicField(Kind, \"callSignature\", \"call\");\n__publicField(Kind, \"indexSignature\", \"index\");\n__publicField(Kind, \"constructSignature\", \"construct\");\n__publicField(Kind, \"parameter\", \"parameter\");\n__publicField(Kind, \"typeParameter\", \"type parameter\");\n__publicField(Kind, \"primitiveType\", \"primitive type\");\n__publicField(Kind, \"label\", \"label\");\n__publicField(Kind, \"alias\", \"alias\");\n__publicField(Kind, \"const\", \"const\");\n__publicField(Kind, \"let\", \"let\");\n__publicField(Kind, \"warning\", \"warning\");\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  canFormatMultipleRanges = false;\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(resource.toString(), startOffset, endOffset, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(resource.toString(), offset, ch, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(resource.toString(), start, end, errorCodes, formatOptions);\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(fileName, offset, false, false, false);\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const disposables = [];\n  const providers = [];\n  const client = new WorkerManager(modeId, defaults);\n  disposables.push(client);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  function registerProviders() {\n    const { modeConfiguration } = defaults;\n    disposeAll(providers);\n    if (modeConfiguration.completionItems) {\n      providers.push(monaco_editor_core_exports.languages.registerCompletionItemProvider(modeId, new SuggestAdapter(worker)));\n    }\n    if (modeConfiguration.signatureHelp) {\n      providers.push(monaco_editor_core_exports.languages.registerSignatureHelpProvider(modeId, new SignatureHelpAdapter(worker)));\n    }\n    if (modeConfiguration.hovers) {\n      providers.push(monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker)));\n    }\n    if (modeConfiguration.documentHighlights) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentHighlightProvider(modeId, new DocumentHighlightAdapter(worker)));\n    }\n    if (modeConfiguration.definitions) {\n      providers.push(monaco_editor_core_exports.languages.registerDefinitionProvider(modeId, new DefinitionAdapter(libFiles, worker)));\n    }\n    if (modeConfiguration.references) {\n      providers.push(monaco_editor_core_exports.languages.registerReferenceProvider(modeId, new ReferenceAdapter(libFiles, worker)));\n    }\n    if (modeConfiguration.documentSymbols) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentSymbolProvider(modeId, new OutlineAdapter(worker)));\n    }\n    if (modeConfiguration.rename) {\n      providers.push(monaco_editor_core_exports.languages.registerRenameProvider(modeId, new RenameAdapter(libFiles, worker)));\n    }\n    if (modeConfiguration.documentRangeFormattingEdits) {\n      providers.push(monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(modeId, new FormatAdapter(worker)));\n    }\n    if (modeConfiguration.onTypeFormattingEdits) {\n      providers.push(monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(modeId, new FormatOnTypeAdapter(worker)));\n    }\n    if (modeConfiguration.codeActions) {\n      providers.push(monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker)));\n    }\n    if (modeConfiguration.inlayHints) {\n      providers.push(monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker)));\n    }\n    if (modeConfiguration.diagnostics) {\n      providers.push(new DiagnosticsAdapter(libFiles, defaults, modeId, worker));\n    }\n  }\n  registerProviders();\n  disposables.push(asDisposable(providers));\n  return worker;\n}\nfunction asDisposable(disposables) {\n  return { dispose: () => disposeAll(disposables) };\n}\nfunction disposeAll(disposables) {\n  while (disposables.length) {\n    disposables.pop().dispose();\n  }\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  DocumentHighlightAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"],"names":["mod","secondTarget","__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","__defNormalProp","configurable","writable","monaco_editor_core_exports","monaco_editor_core_star","WorkerManager","constructor","_modeId","_defaults","_defineProperty","this","_worker","_client","_configChangeListener","onDidChange","_stopWorker","_updateExtraLibsToken","_extraLibsChangeListener","onDidExtraLibsChange","_updateExtraLibs","dispose","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","_getClient","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","getEagerModelSync","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","client","_len","arguments","length","resources","Array","_key","libFileSet","flattenDiagnosticMessageText","diag","newLine","indent","undefined","result","i","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","Adapter","_textSpanToRange","span","p1","getPositionAt","start","p2","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","LibFiles","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","createModel","matchedLibFile","typescriptDefaults","content","_containsLibFile","uris","fetchLibFilesIfNecessary","_fetchLibFiles","then","w","getLibFiles","libFiles","DiagnosticsAdapter","_selector","worker","super","create","onModelAdd","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","_listener","toString","onModelRemoved","_disposables","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","d","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","p","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","SuggestAdapter","triggerCharacters","provideCompletionItems","position","_context","token","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","entry","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","resolveCompletionItem","item","myItem","details","getCompletionEntryDetails","detail","documentation","createDocumentationString","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","module","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","isArray","SignatureHelpAdapter","_toSignatureHelpTriggerReason","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","Invoke","provideSignatureHelp","getSignatureHelpItems","triggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","provideHover","getQuickInfoAtPosition","contents","textSpan","DocumentHighlightAdapter","provideDocumentHighlights","getDocumentHighlights","flatMap","highlightSpans","DocumentHighlightKind","Write","Text","DefinitionAdapter","provideDefinition","getDefinitionAtPosition","refModel","ReferenceAdapter","provideReferences","getReferencesAtPosition","OutlineAdapter","provideDocumentSymbols","root","getNavigationTree","convert","containerLabel","_item$childItems","outlineTypeTable","SymbolKind","spans","selectionRange","children","childItems","child","containerName","Method","const","localFunction","javaScriptWorker","typeScriptWorker","FormatHelper","_convertOptions","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","FormatAdapter","provideDocumentRangeFormattingEdits","startOffset","endOffset","edits","getFormattingEditsForRange","edit","FormatOnTypeAdapter","autoFormatTriggerCharacters","provideOnTypeFormattingEdits","ch","getFormattingEditsAfterKeystroke","CodeActionAdaptor","provideCodeActions","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","versionId","textEdit","title","description","RenameAdapter","provideRenameEdits","newName","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","InlayHintsAdapter","provideInlayHints","hints","hint","_convertHintKind","InlayHintKind","Parameter","Type","setupTypeScript","defaults","setupMode","setupJavaScript","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","modeId","disposables","providers","modeConfiguration","disposeAll","completionItems","registerCompletionItemProvider","signatureHelp","registerSignatureHelpProvider","hovers","registerHoverProvider","documentHighlights","registerDocumentHighlightProvider","definitions","registerDefinitionProvider","references","registerReferenceProvider","documentSymbols","registerDocumentSymbolProvider","rename","registerRenameProvider","documentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","onTypeFormattingEdits","registerOnTypeFormattingEditProvider","codeActions","registerCodeActionProvider","inlayHints","registerInlayHintsProvider","registerProviders","asDisposable","pop"],"sourceRoot":""}