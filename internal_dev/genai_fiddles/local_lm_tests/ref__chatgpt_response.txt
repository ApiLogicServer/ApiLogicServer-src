this is not local, and not trained...

from sqlalchemy import (
    Column, Integer, String, Float, ForeignKey, DateTime, func
)
from sqlalchemy.orm import declarative_base
from datetime import datetime
from typing import List

Base = declarative_base()

class Customer(Base):
    """
    description: Represents a customer with a balance, credit limit, and associated orders.
    """
    __tablename__ = 'customers'

    id = Column(Integer, primary_key=True, autoincrement=True)
    name = Column(String, nullable=False)
    balance = Column(Float, default=0.0)
    credit_limit = Column(Float, nullable=False)

class Order(Base):
    """
    description: Represents an order made by a customer, including a total amount and optional notes.
    """
    __tablename__ = 'orders'

    id = Column(Integer, primary_key=True, autoincrement=True)
    customer_id = Column(Integer, ForeignKey('customers.id'), nullable=False)
    date_created = Column(DateTime, default=datetime.utcnow)
    date_shipped = Column(DateTime, nullable=True)
    amount_total = Column(Float, default=0.0)
    notes = Column(String, nullable=True)

class Product(Base):
    """
    description: Represents a product with a name and unit price.
    """
    __tablename__ = 'products'

    id = Column(Integer, primary_key=True, autoincrement=True)
    name = Column(String, nullable=False)
    unit_price = Column(Float, nullable=False)

class Item(Base):
    """
    description: Represents an item in an order, with quantity, unit price, and calculated amount.
    """
    __tablename__ = 'items'

    id = Column(Integer, primary_key=True, autoincrement=True)
    order_id = Column(Integer, ForeignKey('orders.id'), nullable=False)
    product_id = Column(Integer, ForeignKey('products.id'), nullable=False)
    quantity = Column(Integer, nullable=False)
    unit_price = Column(Float, nullable=False)
    amount = Column(Float, default=0.0)

# LogicBank rules
def declare_logic():
    """
    description: Defines business logic constraints and calculations.
    """
    # Customer.balance <= credit_limit
    # Customer.balance = Sum(Order.amount_total where date_shipped is null)
    # Order.amount_total = Sum(Item.amount)
    # Item.amount = quantity * unit_price
    # Item.unit_price is copied from Product.unit_price
    pass

# Test data (separate entries for each row)
customer_1 = Customer(id=1, name="John Doe", credit_limit=5000.0, balance=1000.0)
customer_2 = Customer(id=2, name="Jane Smith", credit_limit=10000.0, balance=2000.0)

order_1 = Order(id=1, customer_id=1, date_created=datetime(2024, 10, 1), amount_total=200.0, notes="Urgent delivery")
order_2 = Order(id=2, customer_id=1, date_created=datetime(2024, 10, 5), date_shipped=datetime(2024, 10, 10), amount_total=300.0)
order_3 = Order(id=3, customer_id=2, date_created=datetime(2024, 10, 12), amount_total=500.0)

product_1 = Product(id=1, name="Laptop", unit_price=800.0)
product_2 = Product(id=2, name="Phone", unit_price=300.0)
product_3 = Product(id=3, name="Tablet", unit_price=400.0)

item_1 = Item(id=1, order_id=1, product_id=1, quantity=1, unit_price=800.0, amount=800.0)
item_2 = Item(id=2, order_id=2, product_id=2, quantity=2, unit_price=300.0, amount=600.0)
item_3 = Item(id=3, order_id=3, product_id=3, quantity=1, unit_price=400.0, amount=400.0)
item_4 = Item(id=4, order_id=3, product_id=1, quantity=1, unit_price=800.0, amount=800.0)

WGResult(
    models=[
        Customer,
        Order,
        Product,
        Item
    ],
    rules=[
        "Customer.balance <= credit_limit",
        "Customer.balance = Sum(Order.amount_total where date_shipped is null)",
        "Order.amount_total = Sum(Item.amount)",
        "Item.amount = quantity * unit_price",
        "Item.unit_price is copied from Product.unit_price"
    ],
    test_data="""
customer_1 = Customer(id=1, name="John Doe", credit_limit=5000.0, balance=1000.0)
customer_2 = Customer(id=2, name="Jane Smith", credit_limit=10000.0, balance=2000.0)

order_1 = Order(id=1, customer_id=1, date_created=datetime(2024, 10, 1), amount_total=200.0, notes="Urgent delivery")
order_2 = Order(id=2, customer_id=1, date_created=datetime(2024, 10, 5), date_shipped=datetime(2024, 10, 10), amount_total=300.0)
order_3 = Order(id=3, customer_id=2, date_created=datetime(2024, 10, 12), amount_total=500.0)

product_1 = Product(id=1, name="Laptop", unit_price=800.0)
product_2 = Product(id=2, name="Phone", unit_price=300.0)
product_3 = Product(id=3, name="Tablet", unit_price=400.0)

item_1 = Item(id=1, order_id=1, product_id=1, quantity=1, unit_price=800.0, amount=800.0)
item_2 = Item(id=2, order_id=2, product_id=2, quantity=2, unit_price=300.0, amount=600.0)
item_3 = Item(id=3, order_id=3, product_id=3, quantity=1, unit_price=400.0, amount=400.0)
item_4 = Item(id=4, order_id=3, product_id=1, quantity=1, unit_price=800.0, amount=800.0)
"""
)