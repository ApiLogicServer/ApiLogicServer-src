# use Run Config 0, or... (e.g., to test)
#
#    cd ApiLogicServer-src
#    delete the build & dist directories
#    $ python3 -m build
#
#    cd ApiLogicServer  # with venv
#    python3 -m pip install /Users/val/dev/ApiLogicServer/ApiLogicServer-dev/org_git/ApiLogicServer-src

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "api_logic_server_cli.api_logic_server.__version__"}

# this solves the dup-subdirs-at-root problem
[tool.setuptools]
package-dir = {"api_logic_server" = "api_logic_server"}
# find_namespace_packages(...)
packages=['api_logic_server_cli',
            'api_logic_server_cli.sqlacodegen_wrapper',
            'api_logic_server_cli.sqlacodegen_wrapper.sqlacodegen',
            'api_logic_server_cli.sqlacodegen_wrapper.sqlacodegen.sqlacodegen',
            'api_logic_server_cli.prototypes.base',
            'api_logic_server_cli.prototypes.base.api',
            'api_logic_server_cli.prototypes.base.database',
            'api_logic_server_cli.prototypes.base.logic',
            'api_logic_server_cli.prototypes.base.test',
            'api_logic_server_cli.prototypes.base.ui',
            'api_logic_server_cli.prototypes.sqlite.devops',
            'api_logic_server_cli.prototypes.shipping.logic',
            'api_logic_server_cli.create_from_model',
            'api_logic_server_cli.prototypes.stress_mysql.test.api_logic_server_behave.features',
            'api_logic_server_cli.templates',
            'api_logic_server_cli.sqlacodegen_wrapper.sqlacodegen.tests',
            'api_logic_server_cli.sqlacodegen_wrapper.sqlacodegen.sqlacodegen.als_safrs_310.compare_gen_vs_rc2',
            'api_logic_server_cli.sqlacodegen_wrapper.sqlacodegen.sqlacodegen.als_safrs_310.codegen',
            'api_logic_server_cli.sqlacodegen_wrapper.sqlacodegen.sqlacodegen.als_safrs_310.classic_models',
            'api_logic_server_cli.sqlacodegen_wrapper.sqlacodegen.sqlacodegen.als_safrs_310',
            'api_logic_server_cli.prototypes.tutorial',
            'api_logic_server_cli.prototypes.stress_postgres.test.api_logic_server_behave.features.steps',
            'api_logic_server_cli.prototypes.stress_postgres.test.api_logic_server_behave.features',
            'api_logic_server_cli.prototypes.stress_mysql.test.api_logic_server_behave.features.steps',
            'api_logic_server_cli.prototypes.shipping.integration.row_dict_maps',
            'api_logic_server_cli.prototypes.shipping.integration.kafka',
            'api_logic_server_cli.prototypes.shipping.config',
            'api_logic_server_cli.prototypes.shipping',
            'api_logic_server_cli.prototypes.sample_ai_iteration.ui.admin',
            'api_logic_server_cli.prototypes.sample_ai_iteration.logic',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.assets.icons',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.assets.images',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.assets.js',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.environments',
            'api_logic_server_cli.prototypes.ont_app.prototype.api',
            'api_logic_server_cli.prototypes.ont_app.prototype.api.system',
            'api_logic_server_cli.prototypes.ont_app.prototype.security',
            'api_logic_server_cli.prototypes.ont_app.prototype.security.system',
            'api_logic_server_cli.prototypes.ont_app.prototype.ui.admin',
            'api_logic_server_cli.prototypes.ont_app.templates',
            'api_logic_server_cli.prototypes.oracle.database.db_debug',
            'api_logic_server_cli.prototypes.postgres.devops',
            'api_logic_server_cli.prototypes.sample_ai.database.chatgpt',
            'api_logic_server_cli.prototypes.sample_ai.logic',
            'api_logic_server_cli.prototypes.sample_ai.security',
            'api_logic_server_cli.prototypes.sample_ai_iteration.api',
            'api_logic_server_cli.prototypes.sample_ai_iteration.database',
            'api_logic_server_cli.prototypes.sample_ai_iteration.integration.row_dict_maps',
            'api_logic_server_cli.prototypes.nw_no_cust.venv_setup',
            'api_logic_server_cli.prototypes.nw_pa',
            'api_logic_server_cli.prototypes.nw_plus',
            'api_logic_server_cli.prototypes.nw_plus.venv_setup',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.e2e',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.e2e.src',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.app',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.app.login',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.app.main',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.app.main.about',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.app.main.home',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.app.main.settings',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.app.shared',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.assets',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.assets.css',
            'api_logic_server_cli.prototypes.ont_app.ontimize_seed.src.assets.i18n',
            'api_logic_server_cli.prototypes.nginx_exp',
            'api_logic_server_cli.prototypes.nw',
            'api_logic_server_cli.prototypes.nw.api',
            'api_logic_server_cli.prototypes.nw.database',
            'api_logic_server_cli.prototypes.nw.integration',
            'api_logic_server_cli.prototypes.nw.integration.kafka',
            'api_logic_server_cli.prototypes.nw.integration.row_dict_maps',
            'api_logic_server_cli.prototypes.nw.logic',
            'api_logic_server_cli.prototypes.nw.security',
            'api_logic_server_cli.prototypes.nw.test',
            'api_logic_server_cli.prototypes.nw.test.api_logic_server_behave',
            'api_logic_server_cli.prototypes.nw.test.api_logic_server_behave.features',
            'api_logic_server_cli.prototypes.nw.test.api_logic_server_behave.features.steps',
            'api_logic_server_cli.prototypes.nw.test.basic',
            'api_logic_server_cli.prototypes.nw.test.basic.results',
            'api_logic_server_cli.prototypes.nw.ui.admin',
            'api_logic_server_cli.prototypes.nw.ui.images.Category',
            'api_logic_server_cli.prototypes.nw.ui.images.Employee',
            'api_logic_server_cli.prototypes.nw_no_cust',

            ]


[project]
dependencies = [
        "PyJWT==2.6.0",
        "python-dateutil==2.8.2",
        "SQLAlchemy-Utils==0.38.2",
        "logicbankutils==0.6.0",
        "inflect==5.0.2",

        # from safrs, but stipulate version#s
         "Flask==2.3.2",
         "Flask-Cors==3.0.10",
         "Flask-RESTful>=0.3.9",
         "flask-restful-swagger-2>=0.35",
         "Flask-SQLAlchemy==3.0.3",
         "flask-swagger-ui>=4.11.1",
         "flask_bcrypt==1.0.1",
         "itsdangerous==2.1.2",
         "Jinja2==3.1.2",
         "MarkupSafe==2.1.3",
        #  "pyodbc==4.0.34",
         "six==1.16.0",
         "SQLAlchemy==2.0.15",
         "Werkzeug==2.3.3",

        "safrs>=3.1.3",
        "Flask-Admin==1.5.7",
        "Flask-JWT-Extended==4.4.4",
        "Flask-Login==0.6.2",
        "Flask-OpenID==1.3.0",
        "python-dotenv==0.15.0",
        "email-validator==1.1.1",
        "LogicBank>=1.20.4",
        # https://stackoverflow.com/questions/71354710/cryptography-package-is-required-for-sha256-password-or-caching-sha2-password
        # "PyMySQL==1.0.3[rsa]", 
        # "PyMySQL==1.0.3+rsa",
        "cryptography==36.0.1",
        "rsa",
        "PyMySQL==1.0.3", 
        "oracledb==2.1.2",
        "requests==2.31.0",
        "gunicorn==20.1.0",
        # "psycopg2-binary==2.9.5",
        "psycopg2-binary==2.9.9",
        "dotmap==1.3.25",
        "WTForms==2.3.3",
        "behave==1.2.6",
        "alembic==1.7.7",
        "GeoAlchemy2==0.12.5",
        "confluent-kafka==2.3.0"
]
name = "ApiLogicServer"
authors = [
    {name = "Val Huber", email = "apilogicserver@gmail.com"},
]
dynamic = ["version"]
keywords = ["Flask", "SQLAlchemy", "Rules", "WebApp", "Microservice", "ReactAdmin", "Angular"]
requires-python = ">=3.8"
# zip_safe=False
# platforms="any"
readme = "README.md"
license = {text = "BSD-3-Clause"}
classifiers=[
"Development Status :: 5 - Production/Stable",
"Environment :: Web Environment",
"Intended Audience :: Developers",
"License :: OSI Approved :: BSD License",
"Operating System :: OS Independent",
"Programming Language :: Python :: 3.12",
"Programming Language :: Python :: 3.11",
"Programming Language :: Python :: 3.10",
"Programming Language :: Python :: 3.9",
"Programming Language :: Python :: 3.8",
"Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://apilogicserver.github.io/Docs/"
Source = "https://github.com/ApiLogicServer/ApiLogicServer-src"
Issues = "https://github.com/ApiLogicServer/ApiLogicServer-src/issues"

# comment tmb
# define CLI entry points
[project.scripts]
ApiLogicServer = "api_logic_server_cli.cli:start"
als = "api_logic_server_cli.cli:start" 



