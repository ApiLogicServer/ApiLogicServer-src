# create a mysql that stores data in the container, not a volume

# docker build -t apilogicserver/mysql --file Dockerfile-MySQL --rm .
# docker run --name mysql-container --net dev-network -p 3306:3306 -d -e MYSQL_ROOT_PASSWORD=p apilogicserver/mysql


# Now set up your mysql database.

# docker exec -it mysql-container /bin/bash
# cd home
# mkdir mysql_samples
# cd mysql_data
# curl -o Chinook_MySql.sql https://raw.githubusercontent.com/valhuber/ApiLogicServer/main/tests/mysql_test_databases/Chinook_MySql.sql"  # get sample
# cd /var/lib/mysql
# mysql -p  # open mysql command line, then enter your super-secret password, `p`
# mysql> source home/mysql_samples/Chinook_MySql.sql
# mysql> show databases;
# mysql> exit  # repeat for other databases (e.g., sakalia)
# exit       # return to local

# Now convert container to image, and push to docker hub

# docker commit mysql-container mysql-image
# docker tag mysql-image apilogicserver/mysql8.0:version1.0.7
# docker push apilogicserver/mysql8.0:version1.0.7

# thanks - https://medium.com/@stevenlandow/persist-share-dev-mysql-data-in-a-docker-image-with-commit-f9aa9910be0a

FROM mysql:8.0

RUN mkdir /var/lib/mysql-no-volume
CMD ["--datadir", "/var/lib/mysql-no-volume"]