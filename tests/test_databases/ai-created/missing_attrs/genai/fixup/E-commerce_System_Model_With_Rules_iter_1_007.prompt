[
    {
        "code": "Rule.constraint(validate=Customer,\n                    as_condition=lambda row: row.balance <= row.credit_limit,\n                    error_msg=\"Customer balance ({row.balance}) exceeds credit limit ({row.credit_limit})\")",
        "description": "Check that Customer's balance does not exceed the credit limit",
        "name": "Customer Balance Constraint",
        "use_case": "To ensure customers manage their accounts responsibly and do not exceed their credit limit."
    },
    {
        "code": "Rule.sum(derive=Customer.unpaid_order_total,\n    as_sum_of=Order.amount_total,\n    where=lambda row: row.date_shipped is None) ",
        "description": "Calculate total unpaid orders for each customer",
        "name": "Unpaid Orders Sum",
        "use_case": "To provide insights on customer debts and manage receivables."
    },
    {
        "code": "Rule.sum(derive=Order.amount_total,\n    as_sum_of=Item.amount) ",
        "description": "Calculate total amount for each order based on items",
        "name": "Order Amount Total Calculation",
        "use_case": "To keep track of the total revenue generated by orders."
    },
    {
        "code": "Rule.formula(derive=Item.amount,\n    as_expression=lambda row: row.quantity * row.unit_price) ",
        "description": "Calculate item amount based on quantity and unit price",
        "name": "Item Amount Calculation",
        "use_case": "To ensure that the item amount accurately reflects the quantity purchased and price."
    },
    {
        "code": "Rule.copy(derive=Item.unit_price, from_parent=Product.price)",
        "description": "The Item's unit_price is a copy from the Product's price.",
        "name": "Copy item price from product price",
        "use_case": "To ensure the item price is always reflective of the current product price."
    }
]