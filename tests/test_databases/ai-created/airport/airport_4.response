{
    "models": [
        {
            "classname": "Airport",
            "code": "class Airport(Base):\n    \"\"\"description: Stores information about airports.\"\"\"\n    __tablename__ = 'airport'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String(100))\n    location = Column(String(100))\n    country = Column(String(100))\n    total_flights = Column(Integer, default=0)",
            "description": "Stores information about airports.",
            "name": "Airport"
        },
        {
            "classname": "Flight",
            "code": "class Flight(Base):\n    \"\"\"description: Stores information about flights.\"\"\"\n    __tablename__ = 'flight'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    flight_number = Column(String(50), nullable=False)\n    departure_time = Column(DateTime, nullable=False)\n    arrival_time = Column(DateTime, nullable=False)\n    origin_airport_id = Column(Integer, ForeignKey('airport.id'), nullable=False)\n    destination_airport_id = Column(Integer, ForeignKey('airport.id'), nullable=False)\n    passenger_count = Column(Integer, default=0)",
            "description": "Stores information about flights.",
            "name": "Flight"
        },
        {
            "classname": "Passenger",
            "code": "class Passenger(Base):\n    \"\"\"description: Stores information about passengers.\"\"\"\n    __tablename__ = 'passenger'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    first_name = Column(String(50), nullable=False)\n    last_name = Column(String(50), nullable=False)\n    nationality = Column(String(50))",
            "description": "Stores information about passengers.",
            "name": "Passenger"
        },
        {
            "classname": "Booking",
            "code": "class Booking(Base):\n    \"\"\"description: Stores information about bookings.\"\"\"\n    __tablename__ = 'booking'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    flight_id = Column(Integer, ForeignKey('flight.id'), nullable=False)\n    passenger_id = Column(Integer, ForeignKey('passenger.id'), nullable=False)\n    booking_date = Column(DateTime, nullable=False)",
            "description": "Stores information about bookings.",
            "name": "Booking"
        }
    ],
    "rules": [
        {
            "name": "Sum Total Flights",
            "description": "Calculate the total number of flights for each airport.",
            "code": "Rule.sum(derive=Airport.total_flights, as_sum_of=Flight.id, child_role_name='flights')"
        },
        {
            "name": "Count Passenger on Flight",
            "description": "Track the number of passengers on each flight.",
            "code": "Rule.count(derive=Flight.passenger_count, as_count_of=Booking)"
        }
    ],
    "test_data": "# Create test data\nfrom datetime import datetime, date\n\nairport1 = Airport(id=1, name='Airport One', location='City One', country='Country A', total_flights=2)\nairport2 = Airport(id=2, name='Airport Two', location='City Two', country='Country B', total_flights=1)\n\nairport3 = Airport(id=3, name='Airport Three', location='City Three', country='Country C', total_flights=1)\n\nflight1 = Flight(id=1, flight_number='FL001', departure_time=datetime(2023, 10, 1, 6, 0), arrival_time=datetime(2023, 10, 1, 8, 0), origin_airport_id=1, destination_airport_id=2, passenger_count=2)\nflight2 = Flight(id=2, flight_number='FL002', departure_time=datetime(2023, 10, 1, 9, 0), arrival_time=datetime(2023, 10, 1, 11, 0), origin_airport_id=2, destination_airport_id=3, passenger_count=1)\n\nflight3 = Flight(id=3, flight_number='FL003', departure_time=datetime(2023, 10, 1, 12, 0), arrival_time=datetime(2023, 10, 1, 14, 0), origin_airport_id=1, destination_airport_id=3, passenger_count=0)\n\npassenger1 = Passenger(id=1, first_name='John', last_name='Doe', nationality='Country A')\npassenger2 = Passenger(id=2, first_name='Jane', last_name='Smith', nationality='Country B')\n\nbooking1 = Booking(id=1, flight_id=1, passenger_id=1, booking_date=date(2023, 9, 20))\nbooking2 = Booking(id=2, flight_id=1, passenger_id=2, booking_date=date(2023, 9, 21))\n\nbooking3 = Booking(id=3, flight_id=2, passenger_id=2, booking_date=date(2023, 9, 22))",
    "name": "AirportManagement"
}