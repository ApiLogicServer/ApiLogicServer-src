-- Test each of the datatypes
-- DROP DATABASE stress;
create database `stress`;
--
-- STRESS_BIGINT_UNSIGNED.table
drop table if exists `stress`.STRESS_BIGINT_UNSIGNED;

create table `stress`.STRESS_BIGINT_UNSIGNED (  id int auto_increment primary key ,description varchar(100) ,a_bigint_unsigned_default bigint unsigned ,a_bigint_unsigned_1 bigint(1) unsigned ,a_bigint_unsigned_2 bigint(2) unsigned ,a_bigint_unsigned_3 bigint(3) unsigned ,a_bigint_unsigned_4 bigint(4) unsigned ,a_bigint_unsigned_5 bigint(5) unsigned ,a_bigint_unsigned_6 bigint(6) unsigned ,a_bigint_unsigned_7 bigint(7) unsigned ,a_bigint_unsigned_8 bigint(8) unsigned ,a_bigint_unsigned_9 bigint(9) unsigned)ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all zeroes', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all ones', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 127', 127, 127, 127, 127, 127, 127, 127, 127, 127, 127);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 32767', 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 32768', 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 65534', 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 65535', 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 8388607', 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 8388608', 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 16777215', 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 9223372036854775807', 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807);
insert into `stress`.STRESS_BIGINT_UNSIGNED values (0, 'all 18446744073709551615', 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615);


-- STRESS_TIMESTAMP.table
drop table if exists `stress`.STRESS_TIMESTAMP;

create table `stress`.STRESS_TIMESTAMP (  id int auto_increment not null ,description varchar(100) ,a_timestamp_default timestamp ,a_timestamp_0 timestamp(0) null ,a_timestamp_1 timestamp(1) null ,a_timestamp_2 timestamp(2) null ,a_timestamp_3 timestamp(3) null ,a_timestamp_4 timestamp(4) null ,a_timestamp_5 timestamp(5) null ,a_timestamp_6 timestamp(6) null ,constraint PK_STRESS_TIMESTAMP primary key(id))ENGINE=InnoDB DEFAULT CHARSET=utf8;

set time_zone = '+00:00';
insert into `stress`.STRESS_TIMESTAMP values (0, 'now(6)', now(6), now(6), now(6), now(6), now(6), now(6), now(6), now(6));
--insert into `stress`.STRESS_TIMESTAMP values (0, 'now not valid', now, now, now, now, now, now, now, now);
insert into `stress`.STRESS_TIMESTAMP values (0, 'null', null, null, null, null, null, null, null, null);
insert into `stress`.STRESS_TIMESTAMP values (0, 'localtime', localtime, localtime, localtime, localtime, localtime, localtime, localtime, localtime);
insert into `stress`.STRESS_TIMESTAMP values (0, 'localtime(6)', localtime(6), localtime(6), localtime(6), localtime(6), localtime(6), localtime(6), localtime(6), localtime(6));
insert into `stress`.STRESS_TIMESTAMP values (0, '''1970-01-01 00:00:01.000000''', '1970-01-01 00:00:01.000000', '1970-01-01 00:00:01.000000', '1970-01-01 00:00:01.000000', '1970-01-01 00:00:01.000000', '1970-01-01 00:00:01.000000', '1970-01-01 00:00:01.000000', '1970-01-01 00:00:01.000000', '1970-01-01 00:00:01.000000');
insert into `stress`.STRESS_TIMESTAMP values (0, '''2038-01-19 03:14:07.999999''\n with extra removed', '2038-01-19 03:14:07', '2038-01-19 03:14:07', '2038-01-19 03:14:07.9', '2038-01-19 03:14:07.99', '2038-01-19 03:14:07.999', '2038-01-19 03:14:07.9999', '2038-01-19 03:14:07.99999', '2038-01-19 03:14:07.999999');
-- will not insert - too large
-- insert into `stress`.STRESS_TIMESTAMP values (0, 'TIMESTAMP ''2038-01-19 03:14:07.999999''\nwill not inserts as rounded to number too large for 0..5 fract seconds', TIMESTAMP '2038-01-19 03:14:07.999999', TIMESTAMP '2038-01-19 03:14:07.999999', TIMESTAMP '2038-01-19 03:14:07.999999', TIMESTAMP '2038-01-19 03:14:07.999999', TIMESTAMP '2038-01-19 03:14:07.999999', TIMESTAMP '2038-01-19 03:14:07.999999', TIMESTAMP '2038-01-19 03:14:07.999999', TIMESTAMP '2038-01-19 03:14:07.999999');
insert into `stress`.STRESS_TIMESTAMP values (0, 'TIMESTAMP ''2038-01-01 03:14:07.999999''\ninserts as rounded to number', TIMESTAMP '2038-01-01 03:14:07.999999', TIMESTAMP '2038-01-01 03:14:07.999999', TIMESTAMP '2038-01-01 03:14:07.999999', TIMESTAMP '2038-01-01 03:14:07.999999', TIMESTAMP '2038-01-01 03:14:07.999999', TIMESTAMP '2038-01-01 03:14:07.999999', TIMESTAMP '2038-01-01 03:14:07.999999', TIMESTAMP '2038-01-01 03:14:07.999999');
-- will not insert for some setups depending on @@atat@@session.SQL_MODE setting
-- insert into `stress`.STRESS_TIMESTAMP values (0, 'TIMESTAMP ''0000-00-00 00:00:00.000000''', TIMESTAMP '0000-00-00 00:00:00.000000', TIMESTAMP '0000-00-00 00:00:00.000000', TIMESTAMP '0000-00-00 00:00:00.000000', TIMESTAMP '0000-00-00 00:00:00.000000', TIMESTAMP '0000-00-00 00:00:00.000000', TIMESTAMP '0000-00-00 00:00:00.000000', TIMESTAMP '0000-00-00 00:00:00.000000', TIMESTAMP '0000-00-00 00:00:00.000000');

-- ['This assumes that MySQL 5.6.4 or later so that fractional seconds are supported', '-- Phase Setup']
-- STRESS_YEAR.table
drop table if exists `stress`.STRESS_YEAR;

create table `stress`.STRESS_YEAR (  id int auto_increment primary key ,description varchar(50) ,`year` year ,`year(4)` year(4))ENGINE=InnoDB DEFAULT CHARSET=latin1;

insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (1, '0', 0, 0);
insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (2, '0000', 0000, 0000);
insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (3, '1901', 1901, 1901);
insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (4, '1902', 1902, 1902);
insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (5, '1999', 1999, 1999);
insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (6, '2000', 2000, 2000);
insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (7, '2001', 2001, 2001);
insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (8, '2154', 2154, 2154);
insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (9, '2155', 2155, 2155);
insert into `stress`.STRESS_YEAR(id, description, `year`, `year(4)`) values (10, 'null', null, null);


-- STRESS_BIT.table
drop table if exists `stress`.STRESS_BIT;

create table `stress`.STRESS_BIT (  `id` int auto_increment primary key ,`description` varchar(100) ,`bit(1)` bit(1) ,`bit(2)` bit(2) ,`bit(3)` bit(3) ,`bit(4)` bit(4) ,`bit(5)` bit(5) ,`bit(6)` bit(6) ,`bit(7)` bit(7) ,`bit(8)` bit(8) ,`bit(9)` bit(9) ,`bit(10)` bit(10) ,`bit(11)` bit(11) ,`bit(12)` bit(12) ,`bit(13)` bit(13) ,`bit(14)` bit(14) ,`bit(15)` bit(15) ,`bit(16)` bit(16) ,`bit(17)` bit(17) ,`bit(18)` bit(18) ,`bit(19)` bit(19) ,`bit(20)` bit(20) ,`bit(21)` bit(21) ,`bit(22)` bit(22) ,`bit(23)` bit(23) ,`bit(24)` bit(24) ,`bit(25)` bit(25) ,`bit(26)` bit(26) ,`bit(27)` bit(27) ,`bit(28)` bit(28) ,`bit(29)` bit(29) ,`bit(30)` bit(30) ,`bit(31)` bit(31) ,`bit(32)` bit(32) ,`bit(33)` bit(33) ,`bit(34)` bit(34) ,`bit(35)` bit(35) ,`bit(36)` bit(36) ,`bit(37)` bit(37) ,`bit(38)` bit(38) ,`bit(39)` bit(39) ,`bit(40)` bit(40) ,`bit(41)` bit(41) ,`bit(42)` bit(42) ,`bit(43)` bit(43) ,`bit(44)` bit(44) ,`bit(45)` bit(45) ,`bit(46)` bit(46) ,`bit(47)` bit(47) ,`bit(48)` bit(48) ,`bit(49)` bit(49) ,`bit(50)` bit(50) ,`bit(51)` bit(51) ,`bit(52)` bit(52) ,`bit(53)` bit(53) ,`bit(54)` bit(54) ,`bit(55)` bit(55) ,`bit(56)` bit(56) ,`bit(57)` bit(57) ,`bit(58)` bit(58) ,`bit(59)` bit(59) ,`bit(60)` bit(60) ,`bit(61)` bit(61) ,`bit(62)` bit(62) ,`bit(63)` bit(63) ,`bit(64)` bit(64))ENGINE=InnoDB DEFAULT CHARSET=latin1;

insert into `stress`.STRESS_BIT values ( 0 ,'all ones' ,b'1' ,b'11' ,b'111' ,b'1111' ,b'11111' ,b'111111' ,b'1111111' ,b'11111111' ,b'111111111' ,b'1111111111' ,b'11111111111' ,b'111111111111' ,b'1111111111111' ,b'11111111111111' ,b'111111111111111' ,b'1111111111111111' ,b'11111111111111111' ,b'111111111111111111' ,b'1111111111111111111' ,b'11111111111111111111' ,b'111111111111111111111' ,b'1111111111111111111111' ,b'11111111111111111111111' ,b'111111111111111111111111' ,b'1111111111111111111111111' ,b'11111111111111111111111111' ,b'111111111111111111111111111' ,b'1111111111111111111111111111' ,b'11111111111111111111111111111' ,b'111111111111111111111111111111' ,b'1111111111111111111111111111111' ,b'11111111111111111111111111111111' ,b'111111111111111111111111111111111' ,b'1111111111111111111111111111111111' ,b'11111111111111111111111111111111111' ,b'111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111111111111');
insert into `stress`.STRESS_BIT values ( 0 ,'all zeroes' ,b'0' ,b'00' ,b'000' ,b'0000' ,b'00000' ,b'000000' ,b'0000000' ,b'00000000' ,b'000000000' ,b'0000000000' ,b'00000000000' ,b'000000000000' ,b'0000000000000' ,b'00000000000000' ,b'000000000000000' ,b'0000000000000000' ,b'00000000000000000' ,b'000000000000000000' ,b'0000000000000000000' ,b'00000000000000000000' ,b'000000000000000000000' ,b'0000000000000000000000' ,b'00000000000000000000000' ,b'000000000000000000000000' ,b'0000000000000000000000000' ,b'00000000000000000000000000' ,b'000000000000000000000000000' ,b'0000000000000000000000000000' ,b'00000000000000000000000000000' ,b'000000000000000000000000000000' ,b'0000000000000000000000000000000' ,b'00000000000000000000000000000000' ,b'000000000000000000000000000000000' ,b'0000000000000000000000000000000000' ,b'00000000000000000000000000000000000' ,b'000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000000000000');
insert into `stress`.STRESS_BIT values ( 0 ,'one/off' ,b'1' ,b'10' ,b'101' ,b'1010' ,b'10101' ,b'101010' ,b'1010101' ,b'10101010' ,b'101010101' ,b'1010101010' ,b'10101010101' ,b'101010101010' ,b'1010101010101' ,b'10101010101010' ,b'101010101010101' ,b'1010101010101010' ,b'10101010101010101' ,b'101010101010101010' ,b'1010101010101010101' ,b'10101010101010101010' ,b'101010101010101010101' ,b'1010101010101010101010' ,b'10101010101010101010101' ,b'101010101010101010101010' ,b'1010101010101010101010101' ,b'10101010101010101010101010' ,b'101010101010101010101010101' ,b'1010101010101010101010101010' ,b'10101010101010101010101010101' ,b'101010101010101010101010101010' ,b'1010101010101010101010101010101' ,b'10101010101010101010101010101010' ,b'101010101010101010101010101010101' ,b'1010101010101010101010101010101010' ,b'10101010101010101010101010101010101' ,b'101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010101010101010101010');
insert into `stress`.STRESS_BIT values ( 0 ,'high bit 1 only' ,b'1' ,b'10' ,b'100' ,b'1000' ,b'10000' ,b'100000' ,b'1000000' ,b'10000000' ,b'100000000' ,b'1000000000' ,b'10000000000' ,b'100000000000' ,b'1000000000000' ,b'10000000000000' ,b'100000000000000' ,b'1000000000000000' ,b'10000000000000000' ,b'100000000000000000' ,b'1000000000000000000' ,b'10000000000000000000' ,b'100000000000000000000' ,b'1000000000000000000000' ,b'10000000000000000000000' ,b'100000000000000000000000' ,b'1000000000000000000000000' ,b'10000000000000000000000000' ,b'100000000000000000000000000' ,b'1000000000000000000000000000' ,b'10000000000000000000000000000' ,b'100000000000000000000000000000' ,b'1000000000000000000000000000000' ,b'10000000000000000000000000000000' ,b'100000000000000000000000000000000' ,b'1000000000000000000000000000000000' ,b'10000000000000000000000000000000000' ,b'100000000000000000000000000000000000' ,b'1000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000000000000');


-- STRESS_DATE.table
drop table if exists `stress`.`STRESS_DATE`;

create table `stress`.`STRESS_DATE` (  `id` int auto_increment ,`description` varchar(100) ,`date` date ,constraint `PK_STRESS_DATE` primary key(`id`))ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

insert into `stress`.`STRESS_DATE` values (0, 'now()', now());
insert into `stress`.`STRESS_DATE` values (0, 'null', null);
insert into `stress`.`STRESS_DATE` values (0, 'localtime', localtime);
insert into `stress`.`STRESS_DATE` values (0, 'localtime()', localtime());

set time_zone='+12:00';

insert into `stress`.`STRESS_DATE` values (0, 'TIMESTAMP ''1999-12-13 23:59:59'' stores as ?', TIMESTAMP '1999-12-13 23:59:59');

set time_zone='+00:00';
-- will not insert for some setups depending on @@atat@@session.SQL_MODE settings
-- insert into `stress`.`STRESS_DATE` values (0, '''0000-00-00''', '0000-00-00');
insert into `stress`.`STRESS_DATE` values (0, '''0001-01-01''', '0001-01-01');
insert into `stress`.`STRESS_DATE` values (0, '''1582-10-05''', '1582-10-05');
insert into `stress`.`STRESS_DATE` values (0, '''1582-10-06''', '1582-10-06');
insert into `stress`.`STRESS_DATE` values (0, '''1582-10-15''', '1582-10-15');
insert into `stress`.`STRESS_DATE` values (0, '''1999-12-31''', '1999-12-31');
insert into `stress`.`STRESS_DATE` values (0, '''2000-01-01''', '2000-01-01');
insert into `stress`.`STRESS_DATE` values (0, '''9999-12-31''', '9999-12-31');

-- ['MySQL supports', 'partial dates such as 1970-00-00 (unless NO_ZERO_IN_DATE SQL mode is enabled)', 'and zero dates such as 0000-00-00 (unless NO_ZERO_DATE SQL mode is enabled)', 'and invalid dates such as 1970-11-31 (when ALLOW_INVALID_DATES SQL mode is enabled)']
-- STRESS_CHAR.table
drop table if exists `stress`.`STRESS_CHAR`;

create table `stress`.`STRESS_CHAR` (  `id` int auto_increment primary key ,`description` varchar(100) ,`char(0)` char(0) ,`char(1)` char(1) ,`char(2)` char(2) ,`char(10)` char(10) ,`char(100)` char(100) ,`char(255)` char(255) character set latin1)ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

insert into `stress`.`STRESS_CHAR` values (0 ,'null' ,null ,null ,null ,null ,null ,null);
insert into `stress`.`STRESS_CHAR` values (0 ,'''A''' ,'' ,'A' ,'A' ,'A' ,'A' ,'A');
insert into `stress`.`STRESS_CHAR` values (0 ,'''0123456789....'' truncated' ,'' ,'0' ,'12' ,'0123456789' ,'0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789' ,'012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234');


-- STRESS_NUMS.table
drop table if exists `stress`.STRESS_NUMS;

create table `stress`.STRESS_NUMS (  id int auto_increment primary key ,u_tinyint tinyint unsigned ,u_smallint smallint unsigned ,u_mediumint mediumint unsigned ,u_int int unsigned ,u_bigint bigint unsigned ,s_tinyint tinyint unsigned ,s_smallint smallint unsigned ,s_mediumint mediumint unsigned ,s_int int unsigned ,s_bigint bigint unsigned ,s_boolean tinyint(1) ,u_boolean tinyint(1) unsigned ,a_year year(4))ENGINE=InnoDB DEFAULT CHARSET=latin1;


-- STRESS_TINYINT.table
drop table if exists `stress`.`STRESS_TINYINT`;

create table `stress`.`STRESS_TINYINT` (  `id` int auto_increment primary key ,`description` varchar(100) ,`tinyint` tinyint ,`tinyint(1)` tinyint(1) ,`tinyint(2)` tinyint(2) ,`tinyint(3)` tinyint(3))ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

insert into `stress`.STRESS_TINYINT values (0, 'null', null, null, null, null);
insert into `stress`.STRESS_TINYINT values (0, 'all zeroes', 0, 0, 0, 0);
insert into `stress`.STRESS_TINYINT values (0, 'all ones', 1, 1, 1, 1);
insert into `stress`.STRESS_TINYINT values (0, 'all -1', -1, -1, -1, -1);
insert into `stress`.STRESS_TINYINT values (0, 'all 127', 127, 127, 127, 127);
insert into `stress`.STRESS_TINYINT values (0, 'all -127', -127, -127, -127, -127);
insert into `stress`.STRESS_TINYINT values (0, 'all -128', -128, -128, -128, -128);


-- STRESS_VARCHAR.table
drop table if exists `stress`.`STRESS_VARCHAR`;

create table `stress`.`STRESS_VARCHAR` (  `id` int auto_increment primary key ,`description` varchar(100) ,`varchar(0)` varchar(0) ,`varchar(1)` varchar(1) ,`varchar(2)` varchar(2) ,`varchar(2000)` varchar(2000) ,`varchar(4000)` varchar(4000))ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

insert into `stress`.`STRESS_VARCHAR` values (0 ,'null' ,null ,null ,null ,null ,null);
insert into `stress`.`STRESS_VARCHAR` values (0 ,'''A''' ,'' ,'A' ,'A' ,'A' ,'A');
insert into `stress`.`STRESS_VARCHAR` values (0 ,'Sample record' ,'' ,'A' ,'AA' ,'0000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE' ,'0000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '0900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '1900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '2900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '3000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '3100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '3200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '3300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '3400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '3600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '3700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '3800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  '3900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE');


-- STRESS_JSON.table
drop table if exists `stress`.`STRESS_JSON`;

create table `stress`.`STRESS_JSON` (  `id` int auto_increment primary key ,`description` varchar(100) ,`json` json)ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.`STRESS_JSON` values (0,'["foo", "bar", "baz"]','["foo", "bar", "baz"]');
insert into `stress`.`STRESS_JSON` values (0,'{"foo": {"bar": "baz"}}','{"foo": {"bar": "baz"}}');
insert into `stress`.`STRESS_JSON` values (0,'a large json object','[  {    "employee_id": 1,    "login": "sam",    "name": "Sam Yosemite",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/1",      "checksum": "A:4d83d7140396ac3c",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:1)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:1)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 2,    "login": "mlittlelamb",    "name": "Mary Little-Lamb",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/2",      "checksum": "A:aaab832d468f4e67",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:2)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:2)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 3,    "login": "sconnor",    "name": "Sarah Connor",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/3",      "checksum": "A:b842dc8b73dfdc5e",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:3)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:3)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 4,    "login": "jkim",    "name": "John Kim",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/4",      "checksum": "A:3ed29188014675ec",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:4)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:4)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 5,    "login": "bmcmanus",    "name": "Becky McManus",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/5",      "checksum": "A:706faff602cf1bc4",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:5)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:5)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 6,    "login": "ferikson",    "name": "Frank Erikson",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/6",      "checksum": "A:c9057d11b1b8c41f",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:6)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:6)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 7,    "login": "pjaveri",    "name": "Peggy Javeri",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/7",      "checksum": "A:17d26ccae5408948",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:7)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:7)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 8,    "login": "sfarmer",    "name": "Samantha Farmer",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/8",      "checksum": "A:03590b37656d8045",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:8)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:8)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 9,    "login": "jclark",    "name": "Josh Clark",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/9",      "checksum": "A:f8389cf68c2bbefd",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:9)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:9)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 10,    "login": "rgupta",    "name": "Rose Gupta",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/10",      "checksum": "A:c3bfc994031b0704",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:10)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:10)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 11,    "login": "dcolman",    "name": "Daniel Colman",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/11",      "checksum": "A:3a882f9a375aca89",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:11)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:11)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 12,    "login": "vjordanoski",    "name": "Vladimir Jordanoski",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/12",      "checksum": "A:2412e4b3c43f87e3",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:12)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:12)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 13,    "login": "hchamas",    "name": "Hillary Chamas",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/13",      "checksum": "A:7db292c43e63e1f2",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:13)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:13)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 14,    "login": "ptowers",    "name": "Paul Towers",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/14",      "checksum": "A:52ea9ad80396de0b",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:14)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:14)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 15,    "login": "vglass",    "name": "Val Glass",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/15",      "checksum": "A:ebfad4ecddd23d10",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:15)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:15)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 16,    "login": "mvahora",    "name": "Max Vahora",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/16",      "checksum": "A:6d8dbc48b1fe2533",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:16)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:16)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 17,    "login": "dhansen",    "name": "David Hansen",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/17",      "checksum": "A:ff6f315470bdf7bf",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:17)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:17)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 18,    "login": "kbrignoli",    "name": "Katrina Brignoli",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/18",      "checksum": "A:926e22f30d819380",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:18)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:18)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 19,    "login": "honeill",    "name": "Harvey O''Neill",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/19",      "checksum": "A:9501b3a05f929582",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:19)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:19)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 20,    "login": "sputin",    "name": "Sasaha Putin",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/20",      "checksum": "A:1c0447412b1b4c11",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:20)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:20)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "@metadata": {      "next_batch": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee?pagesize=20&offset=20"    }  }]');


-- STRESS_FLOAT.table
drop table if exists `stress`.STRESS_FLOAT;

create table `stress`.STRESS_FLOAT (  id integer auto_increment ,description varchar(100) ,float_default float ,float_1 float(1) ,float_23 float(23) ,float_24 float(24) ,float_25 float(25) ,float_53 float(53) ,float_1_0 float(1,0) ,float_1_1 float(1,1) ,float_255_30 float(255,30) ,float_255_0 float(255,0) ,constraint PK_STRESS_FLOAT primary key (id));

insert into `stress`.STRESS_FLOAT values (null, 'null', null, null, null, null, null, null, null, null, null, null);
insert into `stress`.STRESS_FLOAT values (null, 'zero', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
insert into `stress`.STRESS_FLOAT values (null, '0.1', 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1);
insert into `stress`.STRESS_FLOAT values (null, 'one', 1, 1, 1, 1, 1, 1, 1, null, 1, 1);
insert into `stress`.STRESS_FLOAT values (null, '1.1', 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, null, 1.1, 1.1);
insert into `stress`.STRESS_FLOAT values (null, '-1.1', -1.1, -1.1, -1.1, -1.1, -1.1, -1.1, -1.1, null, -1.1, -1.1);


-- STRESS_SMALLINT.table
drop table if exists `stress`.STRESS_SMALLINT;

create table `stress`.STRESS_SMALLINT (  id int auto_increment primary key ,description varchar(100) ,a_smallint_default smallint ,a_smallint_1 smallint(1) ,a_smallint_2 smallint(2) ,a_smallint_3 smallint(3) ,a_smallint_4 smallint(4) ,a_smallint_5 smallint(5) ,a_smallint_6 smallint(6))ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_SMALLINT values (0, 'all zeroes', 0, 0, 0, 0, 0, 0, 0);
insert into `stress`.STRESS_SMALLINT values (0, 'all ones', 1, 1, 1, 1, 1, 1, 1);
insert into `stress`.STRESS_SMALLINT values (0, 'all 127', 127, 127, 127, 127, 127, 127, 127);
insert into `stress`.STRESS_SMALLINT values (0, 'all 32767', 32767, 32767, 32767, 32767, 32767, 32767, 32767);
insert into `stress`.STRESS_SMALLINT values (0, 'all -1', -1, -1, -1, -1, -1, -1, -1);
insert into `stress`.STRESS_SMALLINT values (0, 'all -32767', -32767, -32767, -32767, -32767, -32767, -32767, -32767);
insert into `stress`.STRESS_SMALLINT values (0, 'all -32768', -32768, -32768, -32768, -32768, -32768, -32768, -32768);


-- STRESS_DECIMAL.table
drop table if exists `stress`.STRESS_DECIMAL;

create table `stress`.STRESS_DECIMAL (  id int auto_increment ,description varchar(100) ,a_decimal_default decimal ,a_decimal_1 decimal(1) ,a_decimal_1_0 decimal(1, 0) ,a_decimal_1_1 decimal(1, 1) ,a_decimal_2 decimal(2) ,a_decimal_2_0 decimal(2, 0) ,a_decimal_2_1 decimal(2, 1) ,a_decimal_2_2 decimal(2, 2) ,a_decimal_3 decimal(3) ,a_decimal_3_0 decimal(3, 0) ,a_decimal_3_1 decimal(3, 1) ,a_decimal_3_2 decimal(3, 2) ,a_decimal_3_3 decimal(3, 3) ,a_decimal_4 decimal(4) ,a_decimal_4_0 decimal(4, 0) ,a_decimal_4_1 decimal(4, 1) ,a_decimal_4_2 decimal(4, 2) ,a_decimal_4_3 decimal(4, 3) ,a_decimal_4_4 decimal(4, 4) ,a_decimal_5 decimal(5) ,a_decimal_5_0 decimal(5, 0) ,a_decimal_5_1 decimal(5, 1) ,a_decimal_5_2 decimal(5, 2) ,a_decimal_5_3 decimal(5, 3) ,a_decimal_5_4 decimal(5, 4) ,a_decimal_5_5 decimal(5, 5) ,a_decimal_6 decimal(6) ,a_decimal_6_0 decimal(6, 0) ,a_decimal_6_1 decimal(6, 1) ,a_decimal_6_2 decimal(6, 2) ,a_decimal_6_4 decimal(6, 4) ,a_decimal_6_5 decimal(6, 5) ,a_decimal_6_6 decimal(6, 6) ,a_decimal_7 decimal(7) ,a_decimal_7_0 decimal(7, 0) ,a_decimal_7_1 decimal(7, 1) ,a_decimal_7_2 decimal(7, 2) ,a_decimal_7_5 decimal(7, 5) ,a_decimal_7_6 decimal(7, 6) ,a_decimal_7_7 decimal(7, 7) ,a_decimal_8 decimal(8) ,a_decimal_8_0 decimal(8, 0) ,a_decimal_8_1 decimal(8, 1) ,a_decimal_8_2 decimal(8, 2) ,a_decimal_8_6 decimal(8, 6) ,a_decimal_8_7 decimal(8, 7) ,a_decimal_8_8 decimal(8, 8) ,a_decimal_9 decimal(9) ,a_decimal_9_0 decimal(9, 0) ,a_decimal_9_1 decimal(9, 1) ,a_decimal_9_2 decimal(9, 2) ,a_decimal_9_7 decimal(9, 7) ,a_decimal_9_8 decimal(9, 8) ,a_decimal_9_9 decimal(9, 9) ,a_decimal_10 decimal(10) ,a_decimal_10_0 decimal(10, 0) ,a_decimal_10_1 decimal(10, 1) ,a_decimal_10_2 decimal(10, 2) ,a_decimal_10_8 decimal(10, 8) ,a_decimal_10_9 decimal(10, 9) ,a_decimal_10_10 decimal(10, 10) ,a_decimal_11 decimal(11) ,a_decimal_11_0 decimal(11, 0) ,a_decimal_11_1 decimal(11, 1) ,a_decimal_11_2 decimal(11, 2) ,a_decimal_11_9 decimal(11, 9) ,a_decimal_11_10 decimal(11, 10) ,a_decimal_11_11 decimal(11, 11) ,a_decimal_12 decimal(12) ,a_decimal_12_0 decimal(12, 0) ,a_decimal_12_1 decimal(12, 1) ,a_decimal_12_2 decimal(12, 2) ,a_decimal_12_10 decimal(12, 10) ,a_decimal_12_11 decimal(12, 11) ,a_decimal_12_12 decimal(12, 12) ,a_decimal_13 decimal(13) ,a_decimal_13_0 decimal(13, 0) ,a_decimal_13_1 decimal(13, 1) ,a_decimal_13_2 decimal(13, 2) ,a_decimal_13_11 decimal(13, 11) ,a_decimal_13_12 decimal(13, 12) ,a_decimal_13_13 decimal(13, 13) ,a_decimal_14 decimal(14) ,a_decimal_14_0 decimal(14, 0) ,a_decimal_14_1 decimal(14, 1) ,a_decimal_14_2 decimal(14, 2) ,a_decimal_14_12 decimal(14, 12) ,a_decimal_14_13 decimal(14, 13) ,a_decimal_14_14 decimal(14, 14) ,a_decimal_15 decimal(15) ,a_decimal_15_0 decimal(15, 0) ,a_decimal_15_1 decimal(15, 1) ,a_decimal_15_2 decimal(15, 2) ,a_decimal_15_13 decimal(15, 13) ,a_decimal_15_14 decimal(15, 14) ,a_decimal_15_15 decimal(15, 15) ,a_decimal_16 decimal(16) ,a_decimal_16_0 decimal(16, 0) ,a_decimal_16_1 decimal(16, 1) ,a_decimal_16_2 decimal(16, 2) ,a_decimal_16_14 decimal(16, 14) ,a_decimal_16_15 decimal(16, 15) ,a_decimal_16_16 decimal(16, 16) ,a_decimal_17 decimal(17) ,a_decimal_17_0 decimal(17, 0) ,a_decimal_17_1 decimal(17, 1) ,a_decimal_17_2 decimal(17, 2) ,a_decimal_17_15 decimal(17, 15) ,a_decimal_17_16 decimal(17, 16) ,a_decimal_17_17 decimal(17, 17) ,a_decimal_18 decimal(18) ,a_decimal_18_0 decimal(18, 0) ,a_decimal_18_1 decimal(18, 1) ,a_decimal_18_2 decimal(18, 2) ,a_decimal_18_16 decimal(18, 16) ,a_decimal_18_17 decimal(18, 17) ,a_decimal_18_18 decimal(18, 18) ,a_decimal_19 decimal(19) ,a_decimal_19_0 decimal(19, 0) ,a_decimal_19_1 decimal(19, 1) ,a_decimal_19_2 decimal(19, 2) ,a_decimal_19_17 decimal(19, 17) ,a_decimal_19_18 decimal(19, 18) ,a_decimal_19_19 decimal(19, 19) ,a_decimal_20 decimal(20) ,a_decimal_20_0 decimal(20, 0) ,a_decimal_20_1 decimal(20, 1) ,a_decimal_20_2 decimal(20, 2) ,a_decimal_20_18 decimal(20, 18) ,a_decimal_20_19 decimal(20, 19) ,a_decimal_20_20 decimal(20, 20) ,a_decimal_21 decimal(21) ,a_decimal_21_0 decimal(21, 0) ,a_decimal_21_1 decimal(21, 1) ,a_decimal_21_2 decimal(21, 2) ,a_decimal_21_19 decimal(21, 19) ,a_decimal_21_20 decimal(21, 20) ,a_decimal_21_21 decimal(21, 21) ,a_decimal_22 decimal(22) ,a_decimal_22_0 decimal(22, 0) ,a_decimal_22_1 decimal(22, 1) ,a_decimal_22_2 decimal(22, 2) ,a_decimal_22_20 decimal(22, 20) ,a_decimal_22_21 decimal(22, 21) ,a_decimal_22_22 decimal(22, 22) ,a_decimal_23 decimal(23) ,a_decimal_23_0 decimal(23, 0) ,a_decimal_23_1 decimal(23, 1) ,a_decimal_23_2 decimal(23, 2) ,a_decimal_23_21 decimal(23, 21) ,a_decimal_23_22 decimal(23, 22) ,a_decimal_23_23 decimal(23, 23) ,a_decimal_24 decimal(24) ,a_decimal_24_0 decimal(24, 0) ,a_decimal_24_1 decimal(24, 1) ,a_decimal_24_2 decimal(24, 2) ,a_decimal_24_22 decimal(24, 22) ,a_decimal_24_23 decimal(24, 23) ,a_decimal_24_24 decimal(24, 24) ,a_decimal_25 decimal(25) ,a_decimal_25_0 decimal(25, 0) ,a_decimal_25_1 decimal(25, 1) ,a_decimal_25_2 decimal(25, 2) ,a_decimal_25_23 decimal(25, 23) ,a_decimal_25_24 decimal(25, 24) ,a_decimal_25_25 decimal(25, 25) ,a_decimal_26 decimal(26) ,a_decimal_26_0 decimal(26, 0) ,a_decimal_26_1 decimal(26, 1) ,a_decimal_26_2 decimal(26, 2) ,a_decimal_26_24 decimal(26, 24) ,a_decimal_26_25 decimal(26, 25) ,a_decimal_26_26 decimal(26, 26) ,a_decimal_27 decimal(27) ,a_decimal_27_0 decimal(27, 0) ,a_decimal_27_1 decimal(27, 1) ,a_decimal_27_2 decimal(27, 2) ,a_decimal_27_25 decimal(27, 25) ,a_decimal_27_26 decimal(27, 26) ,a_decimal_27_27 decimal(27, 27) ,a_decimal_28 decimal(28) ,a_decimal_28_0 decimal(28, 0) ,a_decimal_28_1 decimal(28, 1) ,a_decimal_28_2 decimal(28, 2) ,a_decimal_28_26 decimal(28, 26) ,a_decimal_28_27 decimal(28, 27) ,a_decimal_28_28 decimal(28, 28) ,a_decimal_29 decimal(29) ,a_decimal_29_0 decimal(29, 0) ,a_decimal_29_1 decimal(29, 1) ,a_decimal_29_2 decimal(29, 2) ,a_decimal_29_27 decimal(29, 27) ,a_decimal_29_28 decimal(29, 28) ,a_decimal_29_29 decimal(29, 29) ,a_decimal_30 decimal(30) ,a_decimal_30_0 decimal(30, 0) ,a_decimal_30_1 decimal(30, 1) ,a_decimal_30_2 decimal(30, 2) ,a_decimal_30_28 decimal(30, 28) ,a_decimal_30_29 decimal(30, 29) ,a_decimal_30_30 decimal(30, 30) ,a_decimal_31 decimal(31) ,a_decimal_31_0 decimal(31, 0) ,a_decimal_31_1 decimal(31, 1) ,a_decimal_31_2 decimal(31, 2) ,a_decimal_31_28 decimal(31, 28) ,a_decimal_31_29 decimal(31, 29) ,a_decimal_31_30 decimal(31, 30) ,a_decimal_32 decimal(32) ,a_decimal_32_0 decimal(32, 0) ,a_decimal_32_1 decimal(32, 1) ,a_decimal_32_2 decimal(32, 2) ,a_decimal_32_28 decimal(32, 28) ,a_decimal_32_29 decimal(32, 29) ,a_decimal_32_30 decimal(32, 30) ,a_decimal_33 decimal(33) ,a_decimal_33_0 decimal(33, 0) ,a_decimal_33_1 decimal(33, 1) ,a_decimal_33_2 decimal(33, 2) ,a_decimal_33_28 decimal(33, 28) ,a_decimal_33_29 decimal(33, 29) ,a_decimal_33_30 decimal(33, 30) ,a_decimal_34 decimal(34) ,a_decimal_34_0 decimal(34, 0) ,a_decimal_34_1 decimal(34, 1) ,a_decimal_34_2 decimal(34, 2) ,a_decimal_34_28 decimal(34, 28) ,a_decimal_34_29 decimal(34, 29) ,a_decimal_34_30 decimal(34, 30) ,a_decimal_35 decimal(35) ,a_decimal_35_0 decimal(35, 0) ,a_decimal_35_1 decimal(35, 1) ,a_decimal_35_2 decimal(35, 2) ,a_decimal_35_28 decimal(35, 28) ,a_decimal_35_29 decimal(35, 29) ,a_decimal_35_30 decimal(35, 30) ,a_decimal_36 decimal(36) ,a_decimal_36_0 decimal(36, 0) ,a_decimal_36_1 decimal(36, 1) ,a_decimal_36_2 decimal(36, 2) ,a_decimal_36_28 decimal(36, 28) ,a_decimal_36_29 decimal(36, 29) ,a_decimal_36_30 decimal(36, 30) ,a_decimal_37 decimal(37) ,a_decimal_37_0 decimal(37, 0) ,a_decimal_37_1 decimal(37, 1) ,a_decimal_37_2 decimal(37, 2) ,a_decimal_37_28 decimal(37, 28) ,a_decimal_37_29 decimal(37, 29) ,a_decimal_37_30 decimal(37, 30) ,a_decimal_38 decimal(38) ,a_decimal_38_0 decimal(38, 0) ,a_decimal_38_1 decimal(38, 1) ,a_decimal_38_2 decimal(38, 2) ,a_decimal_38_28 decimal(38, 28) ,a_decimal_38_29 decimal(38, 29) ,a_decimal_38_30 decimal(38, 30) ,a_decimal_39 decimal(39) ,a_decimal_39_0 decimal(39, 0) ,a_decimal_39_1 decimal(39, 1) ,a_decimal_39_2 decimal(39, 2) ,a_decimal_39_28 decimal(39, 28) ,a_decimal_39_29 decimal(39, 29) ,a_decimal_39_30 decimal(39, 30) ,a_decimal_40 decimal(40) ,a_decimal_40_0 decimal(40, 0) ,a_decimal_40_1 decimal(40, 1) ,a_decimal_40_2 decimal(40, 2) ,a_decimal_40_28 decimal(40, 28) ,a_decimal_40_29 decimal(40, 29) ,a_decimal_40_30 decimal(40, 30) ,a_decimal_41 decimal(41) ,a_decimal_41_0 decimal(41, 0) ,a_decimal_41_1 decimal(41, 1) ,a_decimal_41_2 decimal(41, 2) ,a_decimal_41_28 decimal(41, 28) ,a_decimal_41_29 decimal(41, 29) ,a_decimal_41_30 decimal(41, 30) ,a_decimal_42 decimal(42) ,a_decimal_42_0 decimal(42, 0) ,a_decimal_42_1 decimal(42, 1) ,a_decimal_42_2 decimal(42, 2) ,a_decimal_42_28 decimal(42, 28) ,a_decimal_42_29 decimal(42, 29) ,a_decimal_42_30 decimal(42, 30) ,a_decimal_43 decimal(43) ,a_decimal_43_0 decimal(43, 0) ,a_decimal_43_1 decimal(43, 1) ,a_decimal_43_2 decimal(43, 2) ,a_decimal_43_28 decimal(43, 28) ,a_decimal_43_29 decimal(43, 29) ,a_decimal_43_30 decimal(43, 30) ,a_decimal_44 decimal(44) ,a_decimal_44_0 decimal(44, 0) ,a_decimal_44_1 decimal(44, 1) ,a_decimal_44_2 decimal(44, 2) ,a_decimal_44_28 decimal(44, 28) ,a_decimal_44_29 decimal(44, 29) ,a_decimal_44_30 decimal(44, 30) ,a_decimal_45 decimal(45) ,a_decimal_45_0 decimal(45, 0) ,a_decimal_45_1 decimal(45, 1) ,a_decimal_45_2 decimal(45, 2) ,a_decimal_45_28 decimal(45, 28) ,a_decimal_45_29 decimal(45, 29) ,a_decimal_45_30 decimal(45, 30) ,a_decimal_46 decimal(46) ,a_decimal_46_0 decimal(46, 0) ,a_decimal_46_1 decimal(46, 1) ,a_decimal_46_2 decimal(46, 2) ,a_decimal_46_28 decimal(46, 28) ,a_decimal_46_29 decimal(46, 29) ,a_decimal_46_30 decimal(46, 30) ,a_decimal_47 decimal(47) ,a_decimal_47_0 decimal(47, 0) ,a_decimal_47_1 decimal(47, 1) ,a_decimal_47_2 decimal(47, 2) ,a_decimal_47_28 decimal(47, 28) ,a_decimal_47_29 decimal(47, 29) ,a_decimal_47_30 decimal(47, 30) ,a_decimal_48 decimal(48) ,a_decimal_48_0 decimal(48, 0) ,a_decimal_48_1 decimal(48, 1) ,a_decimal_48_2 decimal(48, 2) ,a_decimal_48_28 decimal(48, 28) ,a_decimal_48_29 decimal(48, 29) ,a_decimal_48_30 decimal(48, 30) ,a_decimal_49 decimal(49) ,a_decimal_49_0 decimal(49, 0) ,a_decimal_49_1 decimal(49, 1) ,a_decimal_49_2 decimal(49, 2) ,a_decimal_49_28 decimal(49, 28) ,a_decimal_49_29 decimal(49, 29) ,a_decimal_49_30 decimal(49, 30) ,a_decimal_50 decimal(50) ,a_decimal_50_0 decimal(50, 0) ,a_decimal_50_1 decimal(50, 1) ,a_decimal_50_2 decimal(50, 2) ,a_decimal_50_28 decimal(50, 28) ,a_decimal_50_29 decimal(50, 29) ,a_decimal_50_30 decimal(50, 30) ,a_decimal_51 decimal(51) ,a_decimal_51_0 decimal(51, 0) ,a_decimal_51_1 decimal(51, 1) ,a_decimal_51_2 decimal(51, 2) ,a_decimal_51_28 decimal(51, 28) ,a_decimal_51_29 decimal(51, 29) ,a_decimal_51_30 decimal(51, 30) ,a_decimal_52 decimal(52) ,a_decimal_52_0 decimal(52, 0) ,a_decimal_52_1 decimal(52, 1) ,a_decimal_52_2 decimal(52, 2) ,a_decimal_52_28 decimal(52, 28) ,a_decimal_52_29 decimal(52, 29) ,a_decimal_52_30 decimal(52, 30) ,a_decimal_53 decimal(53) ,a_decimal_53_0 decimal(53, 0) ,a_decimal_53_1 decimal(53, 1) ,a_decimal_53_2 decimal(53, 2) ,a_decimal_53_28 decimal(53, 28) ,a_decimal_53_29 decimal(53, 29) ,a_decimal_53_30 decimal(53, 30) ,a_decimal_54 decimal(54) ,a_decimal_54_0 decimal(54, 0) ,a_decimal_54_1 decimal(54, 1) ,a_decimal_54_2 decimal(54, 2) ,a_decimal_54_28 decimal(54, 28) ,a_decimal_54_29 decimal(54, 29) ,a_decimal_54_30 decimal(54, 30) ,a_decimal_55 decimal(55) ,a_decimal_55_0 decimal(55, 0) ,a_decimal_55_1 decimal(55, 1) ,a_decimal_55_2 decimal(55, 2) ,a_decimal_55_28 decimal(55, 28) ,a_decimal_55_29 decimal(55, 29) ,a_decimal_55_30 decimal(55, 30) ,a_decimal_56 decimal(56) ,a_decimal_56_0 decimal(56, 0) ,a_decimal_56_1 decimal(56, 1) ,a_decimal_56_2 decimal(56, 2) ,a_decimal_56_28 decimal(56, 28) ,a_decimal_56_29 decimal(56, 29) ,a_decimal_56_30 decimal(56, 30) ,a_decimal_57 decimal(57) ,a_decimal_57_0 decimal(57, 0) ,a_decimal_57_1 decimal(57, 1) ,a_decimal_57_2 decimal(57, 2) ,a_decimal_57_28 decimal(57, 28) ,a_decimal_57_29 decimal(57, 29) ,a_decimal_57_30 decimal(57, 30) ,a_decimal_58 decimal(58) ,a_decimal_58_0 decimal(58, 0) ,a_decimal_58_1 decimal(58, 1) ,a_decimal_58_2 decimal(58, 2) ,a_decimal_58_28 decimal(58, 28) ,a_decimal_58_29 decimal(58, 29) ,a_decimal_58_30 decimal(58, 30) ,a_decimal_59 decimal(59) ,a_decimal_59_0 decimal(59, 0) ,a_decimal_59_1 decimal(59, 1) ,a_decimal_59_2 decimal(59, 2) ,a_decimal_59_28 decimal(59, 28) ,a_decimal_59_29 decimal(59, 29) ,a_decimal_59_30 decimal(59, 30) ,a_decimal_60 decimal(60) ,a_decimal_60_0 decimal(60, 0) ,a_decimal_60_1 decimal(60, 1) ,a_decimal_60_2 decimal(60, 2) ,a_decimal_60_28 decimal(60, 28) ,a_decimal_60_29 decimal(60, 29) ,a_decimal_60_30 decimal(60, 30) ,a_decimal_61 decimal(61) ,a_decimal_61_0 decimal(61, 0) ,a_decimal_61_1 decimal(61, 1) ,a_decimal_61_2 decimal(61, 2) ,a_decimal_61_28 decimal(61, 28) ,a_decimal_61_29 decimal(61, 29) ,a_decimal_61_30 decimal(61, 30) ,a_decimal_62 decimal(62) ,a_decimal_62_0 decimal(62, 0) ,a_decimal_62_1 decimal(62, 1) ,a_decimal_62_2 decimal(62, 2) ,a_decimal_62_28 decimal(62, 28) ,a_decimal_62_29 decimal(62, 29) ,a_decimal_62_30 decimal(62, 30) ,a_decimal_63 decimal(63) ,a_decimal_63_0 decimal(63, 0) ,a_decimal_63_1 decimal(63, 1) ,a_decimal_63_2 decimal(63, 2) ,a_decimal_63_28 decimal(63, 28) ,a_decimal_63_29 decimal(63, 29) ,a_decimal_63_30 decimal(63, 30) ,a_decimal_64 decimal(64) ,a_decimal_64_0 decimal(64, 0) ,a_decimal_64_1 decimal(64, 1) ,a_decimal_64_2 decimal(64, 2) ,a_decimal_64_28 decimal(64, 28) ,a_decimal_64_29 decimal(64, 29) ,a_decimal_64_30 decimal(64, 30) ,a_decimal_65 decimal(65) ,a_decimal_65_0 decimal(65, 0) ,a_decimal_65_1 decimal(65, 1) ,a_decimal_65_2 decimal(65, 2) ,a_decimal_65_28 decimal(65, 28) ,a_decimal_65_29 decimal(65, 29) ,a_decimal_65_30 decimal(65, 30) ,constraint PK_STRESS_DECIMAL primary key (id))ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_DECIMAL values ( null,'all zeros',0000000000, 0, 0., .0, 00, 00., 0.0, .00, 000, 000., 00.0, 0.00, .000, 0000, 0000., 000.0, 00.00, 0.000, .0000, 00000, 00000., 0000.0, 000.00, 00.000, 0.0000, .00000, 000000, 000000., 00000.0, 0000.00, 00.0000, 0.00000, .000000, 0000000, 0000000., 000000.0, 00000.00, 00.00000, 0.000000, .0000000, 00000000, 00000000., 0000000.0, 000000.00, 00.000000, 0.0000000, .00000000, 000000000, 000000000., 00000000.0, 0000000.00, 00.0000000, 0.00000000, .000000000, 0000000000, 0000000000., 000000000.0, 00000000.00, 00.00000000, 0.000000000, .0000000000, 00000000000, 00000000000., 0000000000.0, 000000000.00, 00.000000000, 0.0000000000, .00000000000, 000000000000, 000000000000., 00000000000.0, 0000000000.00, 00.0000000000, 0.00000000000, .000000000000, 0000000000000, 0000000000000., 000000000000.0, 00000000000.00, 00.00000000000, 0.000000000000, .0000000000000, 00000000000000, 00000000000000., 0000000000000.0, 000000000000.00, 00.000000000000, 0.0000000000000, .00000000000000, 000000000000000, 000000000000000., 00000000000000.0, 0000000000000.00, 00.0000000000000, 0.00000000000000, .000000000000000, 0000000000000000, 0000000000000000., 000000000000000.0, 00000000000000.00, 00.00000000000000, 0.000000000000000, .0000000000000000, 00000000000000000, 00000000000000000., 0000000000000000.0, 000000000000000.00, 00.000000000000000, 0.0000000000000000, .00000000000000000, 000000000000000000, 000000000000000000., 00000000000000000.0, 0000000000000000.00, 00.0000000000000000, 0.00000000000000000, .000000000000000000, 0000000000000000000, 0000000000000000000., 000000000000000000.0, 00000000000000000.00, 00.00000000000000000, 0.000000000000000000, .0000000000000000000, 00000000000000000000, 00000000000000000000., 0000000000000000000.0, 000000000000000000.00, 00.000000000000000000, 0.0000000000000000000, .00000000000000000000, 000000000000000000000, 000000000000000000000., 00000000000000000000.0, 0000000000000000000.00, 00.0000000000000000000, 0.00000000000000000000, .000000000000000000000, 0000000000000000000000, 0000000000000000000000., 000000000000000000000.0, 00000000000000000000.00, 00.00000000000000000000, 0.000000000000000000000, .0000000000000000000000, 00000000000000000000000, 00000000000000000000000., 0000000000000000000000.0, 000000000000000000000.00, 00.000000000000000000000, 0.0000000000000000000000, .00000000000000000000000, 000000000000000000000000, 000000000000000000000000., 00000000000000000000000.0, 0000000000000000000000.00, 00.0000000000000000000000, 0.00000000000000000000000, .000000000000000000000000, 0000000000000000000000000, 0000000000000000000000000., 000000000000000000000000.0, 00000000000000000000000.00, 00.00000000000000000000000, 0.000000000000000000000000, .0000000000000000000000000, 00000000000000000000000000, 00000000000000000000000000., 0000000000000000000000000.0, 000000000000000000000000.00, 00.000000000000000000000000, 0.0000000000000000000000000, .00000000000000000000000000, 000000000000000000000000000, 000000000000000000000000000., 00000000000000000000000000.0, 0000000000000000000000000.00, 00.0000000000000000000000000, 0.00000000000000000000000000, .000000000000000000000000000, 0000000000000000000000000000, 0000000000000000000000000000., 000000000000000000000000000.0, 00000000000000000000000000.00, 00.00000000000000000000000000, 0.000000000000000000000000000, .0000000000000000000000000000, 00000000000000000000000000000, 00000000000000000000000000000., 0000000000000000000000000000.0, 000000000000000000000000000.00, 00.000000000000000000000000000, 0.0000000000000000000000000000, .00000000000000000000000000000, 000000000000000000000000000000, 000000000000000000000000000000., 00000000000000000000000000000.0, 0000000000000000000000000000.00, 00.0000000000000000000000000000, 0.00000000000000000000000000000, .000000000000000000000000000000, 0000000000000000000000000000000, 0000000000000000000000000000000., 000000000000000000000000000000.0, 00000000000000000000000000000.00, 000.0000000000000000000000000000, 00.00000000000000000000000000000, 0.000000000000000000000000000000, 00000000000000000000000000000000, 00000000000000000000000000000000., 0000000000000000000000000000000.0, 000000000000000000000000000000.00, 0000.0000000000000000000000000000, 000.00000000000000000000000000000, 00.000000000000000000000000000000, 000000000000000000000000000000000, 000000000000000000000000000000000., 00000000000000000000000000000000.0, 0000000000000000000000000000000.00, 00000.0000000000000000000000000000, 0000.00000000000000000000000000000, 000.000000000000000000000000000000, 0000000000000000000000000000000000, 0000000000000000000000000000000000., 000000000000000000000000000000000.0, 00000000000000000000000000000000.00, 000000.0000000000000000000000000000, 00000.00000000000000000000000000000, 0000.000000000000000000000000000000, 00000000000000000000000000000000000, 00000000000000000000000000000000000., 0000000000000000000000000000000000.0, 000000000000000000000000000000000.00, 0000000.0000000000000000000000000000, 000000.00000000000000000000000000000, 00000.000000000000000000000000000000, 000000000000000000000000000000000000, 000000000000000000000000000000000000., 00000000000000000000000000000000000.0, 0000000000000000000000000000000000.00, 00000000.0000000000000000000000000000, 0000000.00000000000000000000000000000, 000000.000000000000000000000000000000, 0000000000000000000000000000000000000, 0000000000000000000000000000000000000., 000000000000000000000000000000000000.0, 00000000000000000000000000000000000.00, 000000000.0000000000000000000000000000, 00000000.00000000000000000000000000000, 0000000.000000000000000000000000000000, 00000000000000000000000000000000000000, 00000000000000000000000000000000000000., 0000000000000000000000000000000000000.0, 000000000000000000000000000000000000.00, 0000000000.0000000000000000000000000000, 000000000.00000000000000000000000000000, 00000000.000000000000000000000000000000, 000000000000000000000000000000000000000, 000000000000000000000000000000000000000., 00000000000000000000000000000000000000.0, 0000000000000000000000000000000000000.00, 00000000000.0000000000000000000000000000, 0000000000.00000000000000000000000000000, 000000000.000000000000000000000000000000, 0000000000000000000000000000000000000000, 0000000000000000000000000000000000000000., 000000000000000000000000000000000000000.0, 00000000000000000000000000000000000000.00, 000000000000.0000000000000000000000000000, 00000000000.00000000000000000000000000000, 0000000000.000000000000000000000000000000, 00000000000000000000000000000000000000000, 00000000000000000000000000000000000000000., 0000000000000000000000000000000000000000.0, 000000000000000000000000000000000000000.00, 0000000000000.0000000000000000000000000000, 000000000000.00000000000000000000000000000, 00000000000.000000000000000000000000000000, 000000000000000000000000000000000000000000, 000000000000000000000000000000000000000000., 00000000000000000000000000000000000000000.0, 0000000000000000000000000000000000000000.00, 00000000000000.0000000000000000000000000000, 0000000000000.00000000000000000000000000000, 000000000000.000000000000000000000000000000, 0000000000000000000000000000000000000000000, 0000000000000000000000000000000000000000000., 000000000000000000000000000000000000000000.0, 00000000000000000000000000000000000000000.00, 000000000000000.0000000000000000000000000000, 00000000000000.00000000000000000000000000000, 0000000000000.000000000000000000000000000000, 00000000000000000000000000000000000000000000, 00000000000000000000000000000000000000000000., 0000000000000000000000000000000000000000000.0, 000000000000000000000000000000000000000000.00, 0000000000000000.0000000000000000000000000000, 000000000000000.00000000000000000000000000000, 00000000000000.000000000000000000000000000000, 000000000000000000000000000000000000000000000, 000000000000000000000000000000000000000000000., 00000000000000000000000000000000000000000000.0, 0000000000000000000000000000000000000000000.00, 00000000000000000.0000000000000000000000000000, 0000000000000000.00000000000000000000000000000, 000000000000000.000000000000000000000000000000, 0000000000000000000000000000000000000000000000, 0000000000000000000000000000000000000000000000., 000000000000000000000000000000000000000000000.0, 00000000000000000000000000000000000000000000.00, 000000000000000000.0000000000000000000000000000, 00000000000000000.00000000000000000000000000000, 0000000000000000.000000000000000000000000000000, 00000000000000000000000000000000000000000000000, 00000000000000000000000000000000000000000000000., 0000000000000000000000000000000000000000000000.0, 000000000000000000000000000000000000000000000.00, 0000000000000000000.0000000000000000000000000000, 000000000000000000.00000000000000000000000000000, 00000000000000000.000000000000000000000000000000, 000000000000000000000000000000000000000000000000, 000000000000000000000000000000000000000000000000., 00000000000000000000000000000000000000000000000.0, 0000000000000000000000000000000000000000000000.00, 00000000000000000000.0000000000000000000000000000, 0000000000000000000.00000000000000000000000000000, 000000000000000000.000000000000000000000000000000, 0000000000000000000000000000000000000000000000000, 0000000000000000000000000000000000000000000000000., 000000000000000000000000000000000000000000000000.0, 00000000000000000000000000000000000000000000000.00, 000000000000000000000.0000000000000000000000000000, 00000000000000000000.00000000000000000000000000000, 0000000000000000000.000000000000000000000000000000, 00000000000000000000000000000000000000000000000000, 00000000000000000000000000000000000000000000000000., 0000000000000000000000000000000000000000000000000.0, 000000000000000000000000000000000000000000000000.00, 0000000000000000000000.0000000000000000000000000000, 000000000000000000000.00000000000000000000000000000, 00000000000000000000.000000000000000000000000000000, 000000000000000000000000000000000000000000000000000, 000000000000000000000000000000000000000000000000000., 00000000000000000000000000000000000000000000000000.0, 0000000000000000000000000000000000000000000000000.00, 00000000000000000000000.0000000000000000000000000000, 0000000000000000000000.00000000000000000000000000000, 000000000000000000000.000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000., 000000000000000000000000000000000000000000000000000.0, 00000000000000000000000000000000000000000000000000.00, 000000000000000000000000.0000000000000000000000000000, 00000000000000000000000.00000000000000000000000000000, 0000000000000000000000.000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000., 0000000000000000000000000000000000000000000000000000.0, 000000000000000000000000000000000000000000000000000.00, 0000000000000000000000000.0000000000000000000000000000, 000000000000000000000000.00000000000000000000000000000, 00000000000000000000000.000000000000000000000000000000, 000000000000000000000000000000000000000000000000000000, 000000000000000000000000000000000000000000000000000000., 00000000000000000000000000000000000000000000000000000.0, 0000000000000000000000000000000000000000000000000000.00, 00000000000000000000000000.0000000000000000000000000000, 0000000000000000000000000.00000000000000000000000000000, 000000000000000000000000.000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000000., 000000000000000000000000000000000000000000000000000000.0, 00000000000000000000000000000000000000000000000000000.00, 000000000000000000000000000.0000000000000000000000000000, 00000000000000000000000000.00000000000000000000000000000, 0000000000000000000000000.000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000000., 0000000000000000000000000000000000000000000000000000000.0, 000000000000000000000000000000000000000000000000000000.00, 0000000000000000000000000000.0000000000000000000000000000, 000000000000000000000000000.00000000000000000000000000000, 00000000000000000000000000.000000000000000000000000000000, 000000000000000000000000000000000000000000000000000000000, 000000000000000000000000000000000000000000000000000000000., 00000000000000000000000000000000000000000000000000000000.0, 0000000000000000000000000000000000000000000000000000000.00, 00000000000000000000000000000.0000000000000000000000000000, 0000000000000000000000000000.00000000000000000000000000000, 000000000000000000000000000.000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000000000., 000000000000000000000000000000000000000000000000000000000.0, 00000000000000000000000000000000000000000000000000000000.00, 000000000000000000000000000000.0000000000000000000000000000, 00000000000000000000000000000.00000000000000000000000000000, 0000000000000000000000000000.000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000000000., 0000000000000000000000000000000000000000000000000000000000.0, 000000000000000000000000000000000000000000000000000000000.00, 0000000000000000000000000000000.0000000000000000000000000000, 000000000000000000000000000000.00000000000000000000000000000, 00000000000000000000000000000.000000000000000000000000000000, 000000000000000000000000000000000000000000000000000000000000, 000000000000000000000000000000000000000000000000000000000000., 00000000000000000000000000000000000000000000000000000000000.0, 0000000000000000000000000000000000000000000000000000000000.00, 00000000000000000000000000000000.0000000000000000000000000000, 0000000000000000000000000000000.00000000000000000000000000000, 000000000000000000000000000000.000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000000000000., 000000000000000000000000000000000000000000000000000000000000.0, 00000000000000000000000000000000000000000000000000000000000.00, 000000000000000000000000000000000.0000000000000000000000000000, 00000000000000000000000000000000.00000000000000000000000000000, 0000000000000000000000000000000.000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000000000000., 0000000000000000000000000000000000000000000000000000000000000.0, 000000000000000000000000000000000000000000000000000000000000.00, 0000000000000000000000000000000000.0000000000000000000000000000, 000000000000000000000000000000000.00000000000000000000000000000, 00000000000000000000000000000000.000000000000000000000000000000, 000000000000000000000000000000000000000000000000000000000000000, 000000000000000000000000000000000000000000000000000000000000000., 00000000000000000000000000000000000000000000000000000000000000.0, 0000000000000000000000000000000000000000000000000000000000000.00, 00000000000000000000000000000000000.0000000000000000000000000000, 0000000000000000000000000000000000.00000000000000000000000000000, 000000000000000000000000000000000.000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000000000000000, 0000000000000000000000000000000000000000000000000000000000000000., 000000000000000000000000000000000000000000000000000000000000000.0, 00000000000000000000000000000000000000000000000000000000000000.00, 000000000000000000000000000000000000.0000000000000000000000000000, 00000000000000000000000000000000000.00000000000000000000000000000, 0000000000000000000000000000000000.000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000000000000000, 00000000000000000000000000000000000000000000000000000000000000000., 0000000000000000000000000000000000000000000000000000000000000000.0, 000000000000000000000000000000000000000000000000000000000000000.00, 0000000000000000000000000000000000000.0000000000000000000000000000, 000000000000000000000000000000000000.00000000000000000000000000000, 00000000000000000000000000000000000.000000000000000000000000000000);
insert into `stress`.STRESS_DECIMAL values ( null,'all ones',1111111111, 1, 1., .1, 11, 11., 1.1, .11, 111, 111., 11.1, 1.11, .111, 1111, 1111., 111.1, 11.11, 1.111, .1111, 11111, 11111., 1111.1, 111.11, 11.111, 1.1111, .11111, 111111, 111111., 11111.1, 1111.11, 11.1111, 1.11111, .111111, 1111111, 1111111., 111111.1, 11111.11, 11.11111, 1.111111, .1111111, 11111111, 11111111., 1111111.1, 111111.11, 11.111111, 1.1111111, .11111111, 111111111, 111111111., 11111111.1, 1111111.11, 11.1111111, 1.11111111, .111111111, 1111111111, 1111111111., 111111111.1, 11111111.11, 11.11111111, 1.111111111, .1111111111, 11111111111, 11111111111., 1111111111.1, 111111111.11, 11.111111111, 1.1111111111, .11111111111, 111111111111, 111111111111., 11111111111.1, 1111111111.11, 11.1111111111, 1.11111111111, .111111111111, 1111111111111, 1111111111111., 111111111111.1, 11111111111.11, 11.11111111111, 1.111111111111, .1111111111111, 11111111111111, 11111111111111., 1111111111111.1, 111111111111.11, 11.111111111111, 1.1111111111111, .11111111111111, 111111111111111, 111111111111111., 11111111111111.1, 1111111111111.11, 11.1111111111111, 1.11111111111111, .111111111111111, 1111111111111111, 1111111111111111., 111111111111111.1, 11111111111111.11, 11.11111111111111, 1.111111111111111, .1111111111111111, 11111111111111111, 11111111111111111., 1111111111111111.1, 111111111111111.11, 11.111111111111111, 1.1111111111111111, .11111111111111111, 111111111111111111, 111111111111111111., 11111111111111111.1, 1111111111111111.11, 11.1111111111111111, 1.11111111111111111, .111111111111111111, 1111111111111111111, 1111111111111111111., 111111111111111111.1, 11111111111111111.11, 11.11111111111111111, 1.111111111111111111, .1111111111111111111, 11111111111111111111, 11111111111111111111., 1111111111111111111.1, 111111111111111111.11, 11.111111111111111111, 1.1111111111111111111, .11111111111111111111, 111111111111111111111, 111111111111111111111., 11111111111111111111.1, 1111111111111111111.11, 11.1111111111111111111, 1.11111111111111111111, .111111111111111111111, 1111111111111111111111, 1111111111111111111111., 111111111111111111111.1, 11111111111111111111.11, 11.11111111111111111111, 1.111111111111111111111, .1111111111111111111111, 11111111111111111111111, 11111111111111111111111., 1111111111111111111111.1, 111111111111111111111.11, 11.111111111111111111111, 1.1111111111111111111111, .11111111111111111111111, 111111111111111111111111, 111111111111111111111111., 11111111111111111111111.1, 1111111111111111111111.11, 11.1111111111111111111111, 1.11111111111111111111111, .111111111111111111111111, 1111111111111111111111111, 1111111111111111111111111., 111111111111111111111111.1, 11111111111111111111111.11, 11.11111111111111111111111, 1.111111111111111111111111, .1111111111111111111111111, 11111111111111111111111111, 11111111111111111111111111., 1111111111111111111111111.1, 111111111111111111111111.11, 11.111111111111111111111111, 1.1111111111111111111111111, .11111111111111111111111111, 111111111111111111111111111, 111111111111111111111111111., 11111111111111111111111111.1, 1111111111111111111111111.11, 11.1111111111111111111111111, 1.11111111111111111111111111, .111111111111111111111111111, 1111111111111111111111111111, 1111111111111111111111111111., 111111111111111111111111111.1, 11111111111111111111111111.11, 11.11111111111111111111111111, 1.111111111111111111111111111, .1111111111111111111111111111, 11111111111111111111111111111, 11111111111111111111111111111., 1111111111111111111111111111.1, 111111111111111111111111111.11, 11.111111111111111111111111111, 1.1111111111111111111111111111, .11111111111111111111111111111, 111111111111111111111111111111, 111111111111111111111111111111., 11111111111111111111111111111.1, 1111111111111111111111111111.11, 11.1111111111111111111111111111, 1.11111111111111111111111111111, .111111111111111111111111111111, 1111111111111111111111111111111, 1111111111111111111111111111111., 111111111111111111111111111111.1, 11111111111111111111111111111.11, 111.1111111111111111111111111111, 11.11111111111111111111111111111, 1.111111111111111111111111111111, 11111111111111111111111111111111, 11111111111111111111111111111111., 1111111111111111111111111111111.1, 111111111111111111111111111111.11, 1111.1111111111111111111111111111, 111.11111111111111111111111111111, 11.111111111111111111111111111111, 111111111111111111111111111111111, 111111111111111111111111111111111., 11111111111111111111111111111111.1, 1111111111111111111111111111111.11, 11111.1111111111111111111111111111, 1111.11111111111111111111111111111, 111.111111111111111111111111111111, 1111111111111111111111111111111111, 1111111111111111111111111111111111., 111111111111111111111111111111111.1, 11111111111111111111111111111111.11, 111111.1111111111111111111111111111, 11111.11111111111111111111111111111, 1111.111111111111111111111111111111, 11111111111111111111111111111111111, 11111111111111111111111111111111111., 1111111111111111111111111111111111.1, 111111111111111111111111111111111.11, 1111111.1111111111111111111111111111, 111111.11111111111111111111111111111, 11111.111111111111111111111111111111, 111111111111111111111111111111111111, 111111111111111111111111111111111111., 11111111111111111111111111111111111.1, 1111111111111111111111111111111111.11, 11111111.1111111111111111111111111111, 1111111.11111111111111111111111111111, 111111.111111111111111111111111111111, 1111111111111111111111111111111111111, 1111111111111111111111111111111111111., 111111111111111111111111111111111111.1, 11111111111111111111111111111111111.11, 111111111.1111111111111111111111111111, 11111111.11111111111111111111111111111, 1111111.111111111111111111111111111111, 11111111111111111111111111111111111111, 11111111111111111111111111111111111111., 1111111111111111111111111111111111111.1, 111111111111111111111111111111111111.11, 1111111111.1111111111111111111111111111, 111111111.11111111111111111111111111111, 11111111.111111111111111111111111111111, 111111111111111111111111111111111111111, 111111111111111111111111111111111111111., 11111111111111111111111111111111111111.1, 1111111111111111111111111111111111111.11, 11111111111.1111111111111111111111111111, 1111111111.11111111111111111111111111111, 111111111.111111111111111111111111111111, 1111111111111111111111111111111111111111, 1111111111111111111111111111111111111111., 111111111111111111111111111111111111111.1, 11111111111111111111111111111111111111.11, 111111111111.1111111111111111111111111111, 11111111111.11111111111111111111111111111, 1111111111.111111111111111111111111111111, 11111111111111111111111111111111111111111, 11111111111111111111111111111111111111111., 1111111111111111111111111111111111111111.1, 111111111111111111111111111111111111111.11, 1111111111111.1111111111111111111111111111, 111111111111.11111111111111111111111111111, 11111111111.111111111111111111111111111111, 111111111111111111111111111111111111111111, 111111111111111111111111111111111111111111., 11111111111111111111111111111111111111111.1, 1111111111111111111111111111111111111111.11, 11111111111111.1111111111111111111111111111, 1111111111111.11111111111111111111111111111, 111111111111.111111111111111111111111111111, 1111111111111111111111111111111111111111111, 1111111111111111111111111111111111111111111., 111111111111111111111111111111111111111111.1, 11111111111111111111111111111111111111111.11, 111111111111111.1111111111111111111111111111, 11111111111111.11111111111111111111111111111, 1111111111111.111111111111111111111111111111, 11111111111111111111111111111111111111111111, 11111111111111111111111111111111111111111111., 1111111111111111111111111111111111111111111.1, 111111111111111111111111111111111111111111.11, 1111111111111111.1111111111111111111111111111, 111111111111111.11111111111111111111111111111, 11111111111111.111111111111111111111111111111, 111111111111111111111111111111111111111111111, 111111111111111111111111111111111111111111111., 11111111111111111111111111111111111111111111.1, 1111111111111111111111111111111111111111111.11, 11111111111111111.1111111111111111111111111111, 1111111111111111.11111111111111111111111111111, 111111111111111.111111111111111111111111111111, 1111111111111111111111111111111111111111111111, 1111111111111111111111111111111111111111111111., 111111111111111111111111111111111111111111111.1, 11111111111111111111111111111111111111111111.11, 111111111111111111.1111111111111111111111111111, 11111111111111111.11111111111111111111111111111, 1111111111111111.111111111111111111111111111111, 11111111111111111111111111111111111111111111111, 11111111111111111111111111111111111111111111111., 1111111111111111111111111111111111111111111111.1, 111111111111111111111111111111111111111111111.11, 1111111111111111111.1111111111111111111111111111, 111111111111111111.11111111111111111111111111111, 11111111111111111.111111111111111111111111111111, 111111111111111111111111111111111111111111111111, 111111111111111111111111111111111111111111111111., 11111111111111111111111111111111111111111111111.1, 1111111111111111111111111111111111111111111111.11, 11111111111111111111.1111111111111111111111111111, 1111111111111111111.11111111111111111111111111111, 111111111111111111.111111111111111111111111111111, 1111111111111111111111111111111111111111111111111, 1111111111111111111111111111111111111111111111111., 111111111111111111111111111111111111111111111111.1, 11111111111111111111111111111111111111111111111.11, 111111111111111111111.1111111111111111111111111111, 11111111111111111111.11111111111111111111111111111, 1111111111111111111.111111111111111111111111111111, 11111111111111111111111111111111111111111111111111, 11111111111111111111111111111111111111111111111111., 1111111111111111111111111111111111111111111111111.1, 111111111111111111111111111111111111111111111111.11, 1111111111111111111111.1111111111111111111111111111, 111111111111111111111.11111111111111111111111111111, 11111111111111111111.111111111111111111111111111111, 111111111111111111111111111111111111111111111111111, 111111111111111111111111111111111111111111111111111., 11111111111111111111111111111111111111111111111111.1, 1111111111111111111111111111111111111111111111111.11, 11111111111111111111111.1111111111111111111111111111, 1111111111111111111111.11111111111111111111111111111, 111111111111111111111.111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111., 111111111111111111111111111111111111111111111111111.1, 11111111111111111111111111111111111111111111111111.11, 111111111111111111111111.1111111111111111111111111111, 11111111111111111111111.11111111111111111111111111111, 1111111111111111111111.111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111., 1111111111111111111111111111111111111111111111111111.1, 111111111111111111111111111111111111111111111111111.11, 1111111111111111111111111.1111111111111111111111111111, 111111111111111111111111.11111111111111111111111111111, 11111111111111111111111.111111111111111111111111111111, 111111111111111111111111111111111111111111111111111111, 111111111111111111111111111111111111111111111111111111., 11111111111111111111111111111111111111111111111111111.1, 1111111111111111111111111111111111111111111111111111.11, 11111111111111111111111111.1111111111111111111111111111, 1111111111111111111111111.11111111111111111111111111111, 111111111111111111111111.111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111111., 111111111111111111111111111111111111111111111111111111.1, 11111111111111111111111111111111111111111111111111111.11, 111111111111111111111111111.1111111111111111111111111111, 11111111111111111111111111.11111111111111111111111111111, 1111111111111111111111111.111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111111., 1111111111111111111111111111111111111111111111111111111.1, 111111111111111111111111111111111111111111111111111111.11, 1111111111111111111111111111.1111111111111111111111111111, 111111111111111111111111111.11111111111111111111111111111, 11111111111111111111111111.111111111111111111111111111111, 111111111111111111111111111111111111111111111111111111111, 111111111111111111111111111111111111111111111111111111111., 11111111111111111111111111111111111111111111111111111111.1, 1111111111111111111111111111111111111111111111111111111.11, 11111111111111111111111111111.1111111111111111111111111111, 1111111111111111111111111111.11111111111111111111111111111, 111111111111111111111111111.111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111111111., 111111111111111111111111111111111111111111111111111111111.1, 11111111111111111111111111111111111111111111111111111111.11, 111111111111111111111111111111.1111111111111111111111111111, 11111111111111111111111111111.11111111111111111111111111111, 1111111111111111111111111111.111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111111111., 1111111111111111111111111111111111111111111111111111111111.1, 111111111111111111111111111111111111111111111111111111111.11, 1111111111111111111111111111111.1111111111111111111111111111, 111111111111111111111111111111.11111111111111111111111111111, 11111111111111111111111111111.111111111111111111111111111111, 111111111111111111111111111111111111111111111111111111111111, 111111111111111111111111111111111111111111111111111111111111., 11111111111111111111111111111111111111111111111111111111111.1, 1111111111111111111111111111111111111111111111111111111111.11, 11111111111111111111111111111111.1111111111111111111111111111, 1111111111111111111111111111111.11111111111111111111111111111, 111111111111111111111111111111.111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111111111111., 111111111111111111111111111111111111111111111111111111111111.1, 11111111111111111111111111111111111111111111111111111111111.11, 111111111111111111111111111111111.1111111111111111111111111111, 11111111111111111111111111111111.11111111111111111111111111111, 1111111111111111111111111111111.111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111111111111., 1111111111111111111111111111111111111111111111111111111111111.1, 111111111111111111111111111111111111111111111111111111111111.11, 1111111111111111111111111111111111.1111111111111111111111111111, 111111111111111111111111111111111.11111111111111111111111111111, 11111111111111111111111111111111.111111111111111111111111111111, 111111111111111111111111111111111111111111111111111111111111111, 111111111111111111111111111111111111111111111111111111111111111., 11111111111111111111111111111111111111111111111111111111111111.1, 1111111111111111111111111111111111111111111111111111111111111.11, 11111111111111111111111111111111111.1111111111111111111111111111, 1111111111111111111111111111111111.11111111111111111111111111111, 111111111111111111111111111111111.111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111111111111111, 1111111111111111111111111111111111111111111111111111111111111111., 111111111111111111111111111111111111111111111111111111111111111.1, 11111111111111111111111111111111111111111111111111111111111111.11, 111111111111111111111111111111111111.1111111111111111111111111111, 11111111111111111111111111111111111.11111111111111111111111111111, 1111111111111111111111111111111111.111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111111111111111, 11111111111111111111111111111111111111111111111111111111111111111., 1111111111111111111111111111111111111111111111111111111111111111.1, 111111111111111111111111111111111111111111111111111111111111111.11, 1111111111111111111111111111111111111.1111111111111111111111111111, 111111111111111111111111111111111111.11111111111111111111111111111, 11111111111111111111111111111111111.111111111111111111111111111111);
insert into `stress`.STRESS_DECIMAL values ( null,'neg all ones',-1111111111, -1, -1., -.1, -11, -11., -1.1, -.11, -111, -111., -11.1, -1.11, -.111, -1111, -1111., -111.1, -11.11, -1.111, -.1111, -11111, -11111., -1111.1, -111.11, -11.111, -1.1111, -.11111, -111111, -111111., -11111.1, -1111.11, -11.1111, -1.11111, -.111111, -1111111, -1111111., -111111.1, -11111.11, -11.11111, -1.111111, -.1111111, -11111111, -11111111., -1111111.1, -111111.11, -11.111111, -1.1111111, -.11111111, -111111111, -111111111., -11111111.1, -1111111.11, -11.1111111, -1.11111111, -.111111111, -1111111111, -1111111111., -111111111.1, -11111111.11, -11.11111111, -1.111111111, -.1111111111, -11111111111, -11111111111., -1111111111.1, -111111111.11, -11.111111111, -1.1111111111, -.11111111111, -111111111111, -111111111111., -11111111111.1, -1111111111.11, -11.1111111111, -1.11111111111, -.111111111111, -1111111111111, -1111111111111., -111111111111.1, -11111111111.11, -11.11111111111, -1.111111111111, -.1111111111111, -11111111111111, -11111111111111., -1111111111111.1, -111111111111.11, -11.111111111111, -1.1111111111111, -.11111111111111, -111111111111111, -111111111111111., -11111111111111.1, -1111111111111.11, -11.1111111111111, -1.11111111111111, -.111111111111111, -1111111111111111, -1111111111111111., -111111111111111.1, -11111111111111.11, -11.11111111111111, -1.111111111111111, -.1111111111111111, -11111111111111111, -11111111111111111., -1111111111111111.1, -111111111111111.11, -11.111111111111111, -1.1111111111111111, -.11111111111111111, -111111111111111111, -111111111111111111., -11111111111111111.1, -1111111111111111.11, -11.1111111111111111, -1.11111111111111111, -.111111111111111111, -1111111111111111111, -1111111111111111111., -111111111111111111.1, -11111111111111111.11, -11.11111111111111111, -1.111111111111111111, -.1111111111111111111, -11111111111111111111, -11111111111111111111., -1111111111111111111.1, -111111111111111111.11, -11.111111111111111111, -1.1111111111111111111, -.11111111111111111111, -111111111111111111111, -111111111111111111111., -11111111111111111111.1, -1111111111111111111.11, -11.1111111111111111111, -1.11111111111111111111, -.111111111111111111111, -1111111111111111111111, -1111111111111111111111., -111111111111111111111.1, -11111111111111111111.11, -11.11111111111111111111, -1.111111111111111111111, -.1111111111111111111111, -11111111111111111111111, -11111111111111111111111., -1111111111111111111111.1, -111111111111111111111.11, -11.111111111111111111111, -1.1111111111111111111111, -.11111111111111111111111, -111111111111111111111111, -111111111111111111111111., -11111111111111111111111.1, -1111111111111111111111.11, -11.1111111111111111111111, -1.11111111111111111111111, -.111111111111111111111111, -1111111111111111111111111, -1111111111111111111111111., -111111111111111111111111.1, -11111111111111111111111.11, -11.11111111111111111111111, -1.111111111111111111111111, -.1111111111111111111111111, -11111111111111111111111111, -11111111111111111111111111., -1111111111111111111111111.1, -111111111111111111111111.11, -11.111111111111111111111111, -1.1111111111111111111111111, -.11111111111111111111111111, -111111111111111111111111111, -111111111111111111111111111., -11111111111111111111111111.1, -1111111111111111111111111.11, -11.1111111111111111111111111, -1.11111111111111111111111111, -.111111111111111111111111111, -1111111111111111111111111111, -1111111111111111111111111111., -111111111111111111111111111.1, -11111111111111111111111111.11, -11.11111111111111111111111111, -1.111111111111111111111111111, -.1111111111111111111111111111, -11111111111111111111111111111, -11111111111111111111111111111., -1111111111111111111111111111.1, -111111111111111111111111111.11, -11.111111111111111111111111111, -1.1111111111111111111111111111, -.11111111111111111111111111111, -111111111111111111111111111111, -111111111111111111111111111111., -11111111111111111111111111111.1, -1111111111111111111111111111.11, -11.1111111111111111111111111111, -1.11111111111111111111111111111, -.111111111111111111111111111111, -1111111111111111111111111111111, -1111111111111111111111111111111., -111111111111111111111111111111.1, -11111111111111111111111111111.11, -111.1111111111111111111111111111, -11.11111111111111111111111111111, -1.111111111111111111111111111111, -11111111111111111111111111111111, -11111111111111111111111111111111., -1111111111111111111111111111111.1, -111111111111111111111111111111.11, -1111.1111111111111111111111111111, -111.11111111111111111111111111111, -11.111111111111111111111111111111, -111111111111111111111111111111111, -111111111111111111111111111111111., -11111111111111111111111111111111.1, -1111111111111111111111111111111.11, -11111.1111111111111111111111111111, -1111.11111111111111111111111111111, -111.111111111111111111111111111111, -1111111111111111111111111111111111, -1111111111111111111111111111111111., -111111111111111111111111111111111.1, -11111111111111111111111111111111.11, -111111.1111111111111111111111111111, -11111.11111111111111111111111111111, -1111.111111111111111111111111111111, -11111111111111111111111111111111111, -11111111111111111111111111111111111., -1111111111111111111111111111111111.1, -111111111111111111111111111111111.11, -1111111.1111111111111111111111111111, -111111.11111111111111111111111111111, -11111.111111111111111111111111111111, -111111111111111111111111111111111111, -111111111111111111111111111111111111., -11111111111111111111111111111111111.1, -1111111111111111111111111111111111.11, -11111111.1111111111111111111111111111, -1111111.11111111111111111111111111111, -111111.111111111111111111111111111111, -1111111111111111111111111111111111111, -1111111111111111111111111111111111111., -111111111111111111111111111111111111.1, -11111111111111111111111111111111111.11, -111111111.1111111111111111111111111111, -11111111.11111111111111111111111111111, -1111111.111111111111111111111111111111, -11111111111111111111111111111111111111, -11111111111111111111111111111111111111., -1111111111111111111111111111111111111.1, -111111111111111111111111111111111111.11, -1111111111.1111111111111111111111111111, -111111111.11111111111111111111111111111, -11111111.111111111111111111111111111111, -111111111111111111111111111111111111111, -111111111111111111111111111111111111111., -11111111111111111111111111111111111111.1, -1111111111111111111111111111111111111.11, -11111111111.1111111111111111111111111111, -1111111111.11111111111111111111111111111, -111111111.111111111111111111111111111111, -1111111111111111111111111111111111111111, -1111111111111111111111111111111111111111., -111111111111111111111111111111111111111.1, -11111111111111111111111111111111111111.11, -111111111111.1111111111111111111111111111, -11111111111.11111111111111111111111111111, -1111111111.111111111111111111111111111111, -11111111111111111111111111111111111111111, -11111111111111111111111111111111111111111., -1111111111111111111111111111111111111111.1, -111111111111111111111111111111111111111.11, -1111111111111.1111111111111111111111111111, -111111111111.11111111111111111111111111111, -11111111111.111111111111111111111111111111, -111111111111111111111111111111111111111111, -111111111111111111111111111111111111111111., -11111111111111111111111111111111111111111.1, -1111111111111111111111111111111111111111.11, -11111111111111.1111111111111111111111111111, -1111111111111.11111111111111111111111111111, -111111111111.111111111111111111111111111111, -1111111111111111111111111111111111111111111, -1111111111111111111111111111111111111111111., -111111111111111111111111111111111111111111.1, -11111111111111111111111111111111111111111.11, -111111111111111.1111111111111111111111111111, -11111111111111.11111111111111111111111111111, -1111111111111.111111111111111111111111111111, -11111111111111111111111111111111111111111111, -11111111111111111111111111111111111111111111., -1111111111111111111111111111111111111111111.1, -111111111111111111111111111111111111111111.11, -1111111111111111.1111111111111111111111111111, -111111111111111.11111111111111111111111111111, -11111111111111.111111111111111111111111111111, -111111111111111111111111111111111111111111111, -111111111111111111111111111111111111111111111., -11111111111111111111111111111111111111111111.1, -1111111111111111111111111111111111111111111.11, -11111111111111111.1111111111111111111111111111, -1111111111111111.11111111111111111111111111111, -111111111111111.111111111111111111111111111111, -1111111111111111111111111111111111111111111111, -1111111111111111111111111111111111111111111111., -111111111111111111111111111111111111111111111.1, -11111111111111111111111111111111111111111111.11, -111111111111111111.1111111111111111111111111111, -11111111111111111.11111111111111111111111111111, -1111111111111111.111111111111111111111111111111, -11111111111111111111111111111111111111111111111, -11111111111111111111111111111111111111111111111., -1111111111111111111111111111111111111111111111.1, -111111111111111111111111111111111111111111111.11, -1111111111111111111.1111111111111111111111111111, -111111111111111111.11111111111111111111111111111, -11111111111111111.111111111111111111111111111111, -111111111111111111111111111111111111111111111111, -111111111111111111111111111111111111111111111111., -11111111111111111111111111111111111111111111111.1, -1111111111111111111111111111111111111111111111.11, -11111111111111111111.1111111111111111111111111111, -1111111111111111111.11111111111111111111111111111, -111111111111111111.111111111111111111111111111111, -1111111111111111111111111111111111111111111111111, -1111111111111111111111111111111111111111111111111., -111111111111111111111111111111111111111111111111.1, -11111111111111111111111111111111111111111111111.11, -111111111111111111111.1111111111111111111111111111, -11111111111111111111.11111111111111111111111111111, -1111111111111111111.111111111111111111111111111111, -11111111111111111111111111111111111111111111111111, -11111111111111111111111111111111111111111111111111., -1111111111111111111111111111111111111111111111111.1, -111111111111111111111111111111111111111111111111.11, -1111111111111111111111.1111111111111111111111111111, -111111111111111111111.11111111111111111111111111111, -11111111111111111111.111111111111111111111111111111, -111111111111111111111111111111111111111111111111111, -111111111111111111111111111111111111111111111111111., -11111111111111111111111111111111111111111111111111.1, -1111111111111111111111111111111111111111111111111.11, -11111111111111111111111.1111111111111111111111111111, -1111111111111111111111.11111111111111111111111111111, -111111111111111111111.111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111., -111111111111111111111111111111111111111111111111111.1, -11111111111111111111111111111111111111111111111111.11, -111111111111111111111111.1111111111111111111111111111, -11111111111111111111111.11111111111111111111111111111, -1111111111111111111111.111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111., -1111111111111111111111111111111111111111111111111111.1, -111111111111111111111111111111111111111111111111111.11, -1111111111111111111111111.1111111111111111111111111111, -111111111111111111111111.11111111111111111111111111111, -11111111111111111111111.111111111111111111111111111111, -111111111111111111111111111111111111111111111111111111, -111111111111111111111111111111111111111111111111111111., -11111111111111111111111111111111111111111111111111111.1, -1111111111111111111111111111111111111111111111111111.11, -11111111111111111111111111.1111111111111111111111111111, -1111111111111111111111111.11111111111111111111111111111, -111111111111111111111111.111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111111., -111111111111111111111111111111111111111111111111111111.1, -11111111111111111111111111111111111111111111111111111.11, -111111111111111111111111111.1111111111111111111111111111, -11111111111111111111111111.11111111111111111111111111111, -1111111111111111111111111.111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111111., -1111111111111111111111111111111111111111111111111111111.1, -111111111111111111111111111111111111111111111111111111.11, -1111111111111111111111111111.1111111111111111111111111111, -111111111111111111111111111.11111111111111111111111111111, -11111111111111111111111111.111111111111111111111111111111, -111111111111111111111111111111111111111111111111111111111, -111111111111111111111111111111111111111111111111111111111., -11111111111111111111111111111111111111111111111111111111.1, -1111111111111111111111111111111111111111111111111111111.11, -11111111111111111111111111111.1111111111111111111111111111, -1111111111111111111111111111.11111111111111111111111111111, -111111111111111111111111111.111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111111111., -111111111111111111111111111111111111111111111111111111111.1, -11111111111111111111111111111111111111111111111111111111.11, -111111111111111111111111111111.1111111111111111111111111111, -11111111111111111111111111111.11111111111111111111111111111, -1111111111111111111111111111.111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111111111., -1111111111111111111111111111111111111111111111111111111111.1, -111111111111111111111111111111111111111111111111111111111.11, -1111111111111111111111111111111.1111111111111111111111111111, -111111111111111111111111111111.11111111111111111111111111111, -11111111111111111111111111111.111111111111111111111111111111, -111111111111111111111111111111111111111111111111111111111111, -111111111111111111111111111111111111111111111111111111111111., -11111111111111111111111111111111111111111111111111111111111.1, -1111111111111111111111111111111111111111111111111111111111.11, -11111111111111111111111111111111.1111111111111111111111111111, -1111111111111111111111111111111.11111111111111111111111111111, -111111111111111111111111111111.111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111111111111., -111111111111111111111111111111111111111111111111111111111111.1, -11111111111111111111111111111111111111111111111111111111111.11, -111111111111111111111111111111111.1111111111111111111111111111, -11111111111111111111111111111111.11111111111111111111111111111, -1111111111111111111111111111111.111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111111111111., -1111111111111111111111111111111111111111111111111111111111111.1, -111111111111111111111111111111111111111111111111111111111111.11, -1111111111111111111111111111111111.1111111111111111111111111111, -111111111111111111111111111111111.11111111111111111111111111111, -11111111111111111111111111111111.111111111111111111111111111111, -111111111111111111111111111111111111111111111111111111111111111, -111111111111111111111111111111111111111111111111111111111111111., -11111111111111111111111111111111111111111111111111111111111111.1, -1111111111111111111111111111111111111111111111111111111111111.11, -11111111111111111111111111111111111.1111111111111111111111111111, -1111111111111111111111111111111111.11111111111111111111111111111, -111111111111111111111111111111111.111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111111111111111, -1111111111111111111111111111111111111111111111111111111111111111., -111111111111111111111111111111111111111111111111111111111111111.1, -11111111111111111111111111111111111111111111111111111111111111.11, -111111111111111111111111111111111111.1111111111111111111111111111, -11111111111111111111111111111111111.11111111111111111111111111111, -1111111111111111111111111111111111.111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111111111111111, -11111111111111111111111111111111111111111111111111111111111111111., -1111111111111111111111111111111111111111111111111111111111111111.1, -111111111111111111111111111111111111111111111111111111111111111.11, -1111111111111111111111111111111111111.1111111111111111111111111111, -111111111111111111111111111111111111.11111111111111111111111111111, -11111111111111111111111111111111111.111111111111111111111111111111);
insert into `stress`.STRESS_DECIMAL values ( null,'all nines',9999999999, 9, 9., .9, 99, 99., 9.9, .99, 999, 999., 99.9, 9.99, .999, 9999, 9999., 999.9, 99.99, 9.999, .9999, 99999, 99999., 9999.9, 999.99, 99.999, 9.9999, .99999, 999999, 999999., 99999.9, 9999.99, 99.9999, 9.99999, .999999, 9999999, 9999999., 999999.9, 99999.99, 99.99999, 9.999999, .9999999, 99999999, 99999999., 9999999.9, 999999.99, 99.999999, 9.9999999, .99999999, 999999999, 999999999., 99999999.9, 9999999.99, 99.9999999, 9.99999999, .999999999, 9999999999, 9999999999., 999999999.9, 99999999.99, 99.99999999, 9.999999999, .9999999999, 99999999999, 99999999999., 9999999999.9, 999999999.99, 99.999999999, 9.9999999999, .99999999999, 999999999999, 999999999999., 99999999999.9, 9999999999.99, 99.9999999999, 9.99999999999, .999999999999, 9999999999999, 9999999999999., 999999999999.9, 99999999999.99, 99.99999999999, 9.999999999999, .9999999999999, 99999999999999, 99999999999999., 9999999999999.9, 999999999999.99, 99.999999999999, 9.9999999999999, .99999999999999, 999999999999999, 999999999999999., 99999999999999.9, 9999999999999.99, 99.9999999999999, 9.99999999999999, .999999999999999, 9999999999999999, 9999999999999999., 999999999999999.9, 99999999999999.99, 99.99999999999999, 9.999999999999999, .9999999999999999, 99999999999999999, 99999999999999999., 9999999999999999.9, 999999999999999.99, 99.999999999999999, 9.9999999999999999, .99999999999999999, 999999999999999999, 999999999999999999., 99999999999999999.9, 9999999999999999.99, 99.9999999999999999, 9.99999999999999999, .999999999999999999, 9999999999999999999, 9999999999999999999., 999999999999999999.9, 99999999999999999.99, 99.99999999999999999, 9.999999999999999999, .9999999999999999999, 99999999999999999999, 99999999999999999999., 9999999999999999999.9, 999999999999999999.99, 99.999999999999999999, 9.9999999999999999999, .99999999999999999999, 999999999999999999999, 999999999999999999999., 99999999999999999999.9, 9999999999999999999.99, 99.9999999999999999999, 9.99999999999999999999, .999999999999999999999, 9999999999999999999999, 9999999999999999999999., 999999999999999999999.9, 99999999999999999999.99, 99.99999999999999999999, 9.999999999999999999999, .9999999999999999999999, 99999999999999999999999, 99999999999999999999999., 9999999999999999999999.9, 999999999999999999999.99, 99.999999999999999999999, 9.9999999999999999999999, .99999999999999999999999, 999999999999999999999999, 999999999999999999999999., 99999999999999999999999.9, 9999999999999999999999.99, 99.9999999999999999999999, 9.99999999999999999999999, .999999999999999999999999, 9999999999999999999999999, 9999999999999999999999999., 999999999999999999999999.9, 99999999999999999999999.99, 99.99999999999999999999999, 9.999999999999999999999999, .9999999999999999999999999, 99999999999999999999999999, 99999999999999999999999999., 9999999999999999999999999.9, 999999999999999999999999.99, 99.999999999999999999999999, 9.9999999999999999999999999, .99999999999999999999999999, 999999999999999999999999999, 999999999999999999999999999., 99999999999999999999999999.9, 9999999999999999999999999.99, 99.9999999999999999999999999, 9.99999999999999999999999999, .999999999999999999999999999, 9999999999999999999999999999, 9999999999999999999999999999., 999999999999999999999999999.9, 99999999999999999999999999.99, 99.99999999999999999999999999, 9.999999999999999999999999999, .9999999999999999999999999999, 99999999999999999999999999999, 99999999999999999999999999999., 9999999999999999999999999999.9, 999999999999999999999999999.99, 99.999999999999999999999999999, 9.9999999999999999999999999999, .99999999999999999999999999999, 999999999999999999999999999999, 999999999999999999999999999999., 99999999999999999999999999999.9, 9999999999999999999999999999.99, 99.9999999999999999999999999999, 9.99999999999999999999999999999, .999999999999999999999999999999, 9999999999999999999999999999999, 9999999999999999999999999999999., 999999999999999999999999999999.9, 99999999999999999999999999999.99, 999.9999999999999999999999999999, 99.99999999999999999999999999999, 9.999999999999999999999999999999, 99999999999999999999999999999999, 99999999999999999999999999999999., 9999999999999999999999999999999.9, 999999999999999999999999999999.99, 9999.9999999999999999999999999999, 999.99999999999999999999999999999, 99.999999999999999999999999999999, 999999999999999999999999999999999, 999999999999999999999999999999999., 99999999999999999999999999999999.9, 9999999999999999999999999999999.99, 99999.9999999999999999999999999999, 9999.99999999999999999999999999999, 999.999999999999999999999999999999, 9999999999999999999999999999999999, 9999999999999999999999999999999999., 999999999999999999999999999999999.9, 99999999999999999999999999999999.99, 999999.9999999999999999999999999999, 99999.99999999999999999999999999999, 9999.999999999999999999999999999999, 99999999999999999999999999999999999, 99999999999999999999999999999999999., 9999999999999999999999999999999999.9, 999999999999999999999999999999999.99, 9999999.9999999999999999999999999999, 999999.99999999999999999999999999999, 99999.999999999999999999999999999999, 999999999999999999999999999999999999, 999999999999999999999999999999999999., 99999999999999999999999999999999999.9, 9999999999999999999999999999999999.99, 99999999.9999999999999999999999999999, 9999999.99999999999999999999999999999, 999999.999999999999999999999999999999, 9999999999999999999999999999999999999, 9999999999999999999999999999999999999., 999999999999999999999999999999999999.9, 99999999999999999999999999999999999.99, 999999999.9999999999999999999999999999, 99999999.99999999999999999999999999999, 9999999.999999999999999999999999999999, 99999999999999999999999999999999999999, 99999999999999999999999999999999999999., 9999999999999999999999999999999999999.9, 999999999999999999999999999999999999.99, 9999999999.9999999999999999999999999999, 999999999.99999999999999999999999999999, 99999999.999999999999999999999999999999, 999999999999999999999999999999999999999, 999999999999999999999999999999999999999., 99999999999999999999999999999999999999.9, 9999999999999999999999999999999999999.99, 99999999999.9999999999999999999999999999, 9999999999.99999999999999999999999999999, 999999999.999999999999999999999999999999, 9999999999999999999999999999999999999999, 9999999999999999999999999999999999999999., 999999999999999999999999999999999999999.9, 99999999999999999999999999999999999999.99, 999999999999.9999999999999999999999999999, 99999999999.99999999999999999999999999999, 9999999999.999999999999999999999999999999, 99999999999999999999999999999999999999999, 99999999999999999999999999999999999999999., 9999999999999999999999999999999999999999.9, 999999999999999999999999999999999999999.99, 9999999999999.9999999999999999999999999999, 999999999999.99999999999999999999999999999, 99999999999.999999999999999999999999999999, 999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999., 99999999999999999999999999999999999999999.9, 9999999999999999999999999999999999999999.99, 99999999999999.9999999999999999999999999999, 9999999999999.99999999999999999999999999999, 999999999999.999999999999999999999999999999, 9999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999., 999999999999999999999999999999999999999999.9, 99999999999999999999999999999999999999999.99, 999999999999999.9999999999999999999999999999, 99999999999999.99999999999999999999999999999, 9999999999999.999999999999999999999999999999, 99999999999999999999999999999999999999999999, 99999999999999999999999999999999999999999999., 9999999999999999999999999999999999999999999.9, 999999999999999999999999999999999999999999.99, 9999999999999999.9999999999999999999999999999, 999999999999999.99999999999999999999999999999, 99999999999999.999999999999999999999999999999, 999999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999999., 99999999999999999999999999999999999999999999.9, 9999999999999999999999999999999999999999999.99, 99999999999999999.9999999999999999999999999999, 9999999999999999.99999999999999999999999999999, 999999999999999.999999999999999999999999999999, 9999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999., 999999999999999999999999999999999999999999999.9, 99999999999999999999999999999999999999999999.99, 999999999999999999.9999999999999999999999999999, 99999999999999999.99999999999999999999999999999, 9999999999999999.999999999999999999999999999999, 99999999999999999999999999999999999999999999999, 99999999999999999999999999999999999999999999999., 9999999999999999999999999999999999999999999999.9, 999999999999999999999999999999999999999999999.99, 9999999999999999999.9999999999999999999999999999, 999999999999999999.99999999999999999999999999999, 99999999999999999.999999999999999999999999999999, 999999999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999999999., 99999999999999999999999999999999999999999999999.9, 9999999999999999999999999999999999999999999999.99, 99999999999999999999.9999999999999999999999999999, 9999999999999999999.99999999999999999999999999999, 999999999999999999.999999999999999999999999999999, 9999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999., 999999999999999999999999999999999999999999999999.9, 99999999999999999999999999999999999999999999999.99, 999999999999999999999.9999999999999999999999999999, 99999999999999999999.99999999999999999999999999999, 9999999999999999999.999999999999999999999999999999, 99999999999999999999999999999999999999999999999999, 99999999999999999999999999999999999999999999999999., 9999999999999999999999999999999999999999999999999.9, 999999999999999999999999999999999999999999999999.99, 9999999999999999999999.9999999999999999999999999999, 999999999999999999999.99999999999999999999999999999, 99999999999999999999.999999999999999999999999999999, 999999999999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999999999999., 99999999999999999999999999999999999999999999999999.9, 9999999999999999999999999999999999999999999999999.99, 99999999999999999999999.9999999999999999999999999999, 9999999999999999999999.99999999999999999999999999999, 999999999999999999999.999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999., 999999999999999999999999999999999999999999999999999.9, 99999999999999999999999999999999999999999999999999.99, 999999999999999999999999.9999999999999999999999999999, 99999999999999999999999.99999999999999999999999999999, 9999999999999999999999.999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999., 9999999999999999999999999999999999999999999999999999.9, 999999999999999999999999999999999999999999999999999.99, 9999999999999999999999999.9999999999999999999999999999, 999999999999999999999999.99999999999999999999999999999, 99999999999999999999999.999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999., 99999999999999999999999999999999999999999999999999999.9, 9999999999999999999999999999999999999999999999999999.99, 99999999999999999999999999.9999999999999999999999999999, 9999999999999999999999999.99999999999999999999999999999, 999999999999999999999999.999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999., 999999999999999999999999999999999999999999999999999999.9, 99999999999999999999999999999999999999999999999999999.99, 999999999999999999999999999.9999999999999999999999999999, 99999999999999999999999999.99999999999999999999999999999, 9999999999999999999999999.999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999999., 9999999999999999999999999999999999999999999999999999999.9, 999999999999999999999999999999999999999999999999999999.99, 9999999999999999999999999999.9999999999999999999999999999, 999999999999999999999999999.99999999999999999999999999999, 99999999999999999999999999.999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999999., 99999999999999999999999999999999999999999999999999999999.9, 9999999999999999999999999999999999999999999999999999999.99, 99999999999999999999999999999.9999999999999999999999999999, 9999999999999999999999999999.99999999999999999999999999999, 999999999999999999999999999.999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999., 999999999999999999999999999999999999999999999999999999999.9, 99999999999999999999999999999999999999999999999999999999.99, 999999999999999999999999999999.9999999999999999999999999999, 99999999999999999999999999999.99999999999999999999999999999, 9999999999999999999999999999.999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999999999., 9999999999999999999999999999999999999999999999999999999999.9, 999999999999999999999999999999999999999999999999999999999.99, 9999999999999999999999999999999.9999999999999999999999999999, 999999999999999999999999999999.99999999999999999999999999999, 99999999999999999999999999999.999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999999999., 99999999999999999999999999999999999999999999999999999999999.9, 9999999999999999999999999999999999999999999999999999999999.99, 99999999999999999999999999999999.9999999999999999999999999999, 9999999999999999999999999999999.99999999999999999999999999999, 999999999999999999999999999999.999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999999., 999999999999999999999999999999999999999999999999999999999999.9, 99999999999999999999999999999999999999999999999999999999999.99, 999999999999999999999999999999999.9999999999999999999999999999, 99999999999999999999999999999999.99999999999999999999999999999, 9999999999999999999999999999999.999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999999999999., 9999999999999999999999999999999999999999999999999999999999999.9, 999999999999999999999999999999999999999999999999999999999999.99, 9999999999999999999999999999999999.9999999999999999999999999999, 999999999999999999999999999999999.99999999999999999999999999999, 99999999999999999999999999999999.999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999999999999., 99999999999999999999999999999999999999999999999999999999999999.9, 9999999999999999999999999999999999999999999999999999999999999.99, 99999999999999999999999999999999999.9999999999999999999999999999, 9999999999999999999999999999999999.99999999999999999999999999999, 999999999999999999999999999999999.999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999999999, 9999999999999999999999999999999999999999999999999999999999999999., 999999999999999999999999999999999999999999999999999999999999999.9, 99999999999999999999999999999999999999999999999999999999999999.99, 999999999999999999999999999999999999.9999999999999999999999999999, 99999999999999999999999999999999999.99999999999999999999999999999, 9999999999999999999999999999999999.999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999999999999999, 99999999999999999999999999999999999999999999999999999999999999999., 9999999999999999999999999999999999999999999999999999999999999999.9, 999999999999999999999999999999999999999999999999999999999999999.99, 9999999999999999999999999999999999999.9999999999999999999999999999, 999999999999999999999999999999999999.99999999999999999999999999999, 99999999999999999999999999999999999.999999999999999999999999999999);
insert into `stress`.STRESS_DECIMAL values ( null,'negt all nines',-9999999999, -9, -9., -.9, -99, -99., -9.9, -.99, -999, -999., -99.9, -9.99, -.999, -9999, -9999., -999.9, -99.99, -9.999, -.9999, -99999, -99999., -9999.9, -999.99, -99.999, -9.9999, -.99999, -999999, -999999., -99999.9, -9999.99, -99.9999, -9.99999, -.999999, -9999999, -9999999., -999999.9, -99999.99, -99.99999, -9.999999, -.9999999, -99999999, -99999999., -9999999.9, -999999.99, -99.999999, -9.9999999, -.99999999, -999999999, -999999999., -99999999.9, -9999999.99, -99.9999999, -9.99999999, -.999999999, -9999999999, -9999999999., -999999999.9, -99999999.99, -99.99999999, -9.999999999, -.9999999999, -99999999999, -99999999999., -9999999999.9, -999999999.99, -99.999999999, -9.9999999999, -.99999999999, -999999999999, -999999999999., -99999999999.9, -9999999999.99, -99.9999999999, -9.99999999999, -.999999999999, -9999999999999, -9999999999999., -999999999999.9, -99999999999.99, -99.99999999999, -9.999999999999, -.9999999999999, -99999999999999, -99999999999999., -9999999999999.9, -999999999999.99, -99.999999999999, -9.9999999999999, -.99999999999999, -999999999999999, -999999999999999., -99999999999999.9, -9999999999999.99, -99.9999999999999, -9.99999999999999, -.999999999999999, -9999999999999999, -9999999999999999., -999999999999999.9, -99999999999999.99, -99.99999999999999, -9.999999999999999, -.9999999999999999, -99999999999999999, -99999999999999999., -9999999999999999.9, -999999999999999.99, -99.999999999999999, -9.9999999999999999, -.99999999999999999, -999999999999999999, -999999999999999999., -99999999999999999.9, -9999999999999999.99, -99.9999999999999999, -9.99999999999999999, -.999999999999999999, -9999999999999999999, -9999999999999999999., -999999999999999999.9, -99999999999999999.99, -99.99999999999999999, -9.999999999999999999, -.9999999999999999999, -99999999999999999999, -99999999999999999999., -9999999999999999999.9, -999999999999999999.99, -99.999999999999999999, -9.9999999999999999999, -.99999999999999999999, -999999999999999999999, -999999999999999999999., -99999999999999999999.9, -9999999999999999999.99, -99.9999999999999999999, -9.99999999999999999999, -.999999999999999999999, -9999999999999999999999, -9999999999999999999999., -999999999999999999999.9, -99999999999999999999.99, -99.99999999999999999999, -9.999999999999999999999, -.9999999999999999999999, -99999999999999999999999, -99999999999999999999999., -9999999999999999999999.9, -999999999999999999999.99, -99.999999999999999999999, -9.9999999999999999999999, -.99999999999999999999999, -999999999999999999999999, -999999999999999999999999., -99999999999999999999999.9, -9999999999999999999999.99, -99.9999999999999999999999, -9.99999999999999999999999, -.999999999999999999999999, -9999999999999999999999999, -9999999999999999999999999., -999999999999999999999999.9, -99999999999999999999999.99, -99.99999999999999999999999, -9.999999999999999999999999, -.9999999999999999999999999, -99999999999999999999999999, -99999999999999999999999999., -9999999999999999999999999.9, -999999999999999999999999.99, -99.999999999999999999999999, -9.9999999999999999999999999, -.99999999999999999999999999, -999999999999999999999999999, -999999999999999999999999999., -99999999999999999999999999.9, -9999999999999999999999999.99, -99.9999999999999999999999999, -9.99999999999999999999999999, -.999999999999999999999999999, -9999999999999999999999999999, -9999999999999999999999999999., -999999999999999999999999999.9, -99999999999999999999999999.99, -99.99999999999999999999999999, -9.999999999999999999999999999, -.9999999999999999999999999999, -99999999999999999999999999999, -99999999999999999999999999999., -9999999999999999999999999999.9, -999999999999999999999999999.99, -99.999999999999999999999999999, -9.9999999999999999999999999999, -.99999999999999999999999999999, -999999999999999999999999999999, -999999999999999999999999999999., -99999999999999999999999999999.9, -9999999999999999999999999999.99, -99.9999999999999999999999999999, -9.99999999999999999999999999999, -.999999999999999999999999999999, -9999999999999999999999999999999, -9999999999999999999999999999999., -999999999999999999999999999999.9, -99999999999999999999999999999.99, -999.9999999999999999999999999999, -99.99999999999999999999999999999, -9.999999999999999999999999999999, -99999999999999999999999999999999, -99999999999999999999999999999999., -9999999999999999999999999999999.9, -999999999999999999999999999999.99, -9999.9999999999999999999999999999, -999.99999999999999999999999999999, -99.999999999999999999999999999999, -999999999999999999999999999999999, -999999999999999999999999999999999., -99999999999999999999999999999999.9, -9999999999999999999999999999999.99, -99999.9999999999999999999999999999, -9999.99999999999999999999999999999, -999.999999999999999999999999999999, -9999999999999999999999999999999999, -9999999999999999999999999999999999., -999999999999999999999999999999999.9, -99999999999999999999999999999999.99, -999999.9999999999999999999999999999, -99999.99999999999999999999999999999, -9999.999999999999999999999999999999, -99999999999999999999999999999999999, -99999999999999999999999999999999999., -9999999999999999999999999999999999.9, -999999999999999999999999999999999.99, -9999999.9999999999999999999999999999, -999999.99999999999999999999999999999, -99999.999999999999999999999999999999, -999999999999999999999999999999999999, -999999999999999999999999999999999999., -99999999999999999999999999999999999.9, -9999999999999999999999999999999999.99, -99999999.9999999999999999999999999999, -9999999.99999999999999999999999999999, -999999.999999999999999999999999999999, -9999999999999999999999999999999999999, -9999999999999999999999999999999999999., -999999999999999999999999999999999999.9, -99999999999999999999999999999999999.99, -999999999.9999999999999999999999999999, -99999999.99999999999999999999999999999, -9999999.999999999999999999999999999999, -99999999999999999999999999999999999999, -99999999999999999999999999999999999999., -9999999999999999999999999999999999999.9, -999999999999999999999999999999999999.99, -9999999999.9999999999999999999999999999, -999999999.99999999999999999999999999999, -99999999.999999999999999999999999999999, -999999999999999999999999999999999999999, -999999999999999999999999999999999999999., -99999999999999999999999999999999999999.9, -9999999999999999999999999999999999999.99, -99999999999.9999999999999999999999999999, -9999999999.99999999999999999999999999999, -999999999.999999999999999999999999999999, -9999999999999999999999999999999999999999, -9999999999999999999999999999999999999999., -999999999999999999999999999999999999999.9, -99999999999999999999999999999999999999.99, -999999999999.9999999999999999999999999999, -99999999999.99999999999999999999999999999, -9999999999.999999999999999999999999999999, -99999999999999999999999999999999999999999, -99999999999999999999999999999999999999999., -9999999999999999999999999999999999999999.9, -999999999999999999999999999999999999999.99, -9999999999999.9999999999999999999999999999, -999999999999.99999999999999999999999999999, -99999999999.999999999999999999999999999999, -999999999999999999999999999999999999999999, -999999999999999999999999999999999999999999., -99999999999999999999999999999999999999999.9, -9999999999999999999999999999999999999999.99, -99999999999999.9999999999999999999999999999, -9999999999999.99999999999999999999999999999, -999999999999.999999999999999999999999999999, -9999999999999999999999999999999999999999999, -9999999999999999999999999999999999999999999., -999999999999999999999999999999999999999999.9, -99999999999999999999999999999999999999999.99, -999999999999999.9999999999999999999999999999, -99999999999999.99999999999999999999999999999, -9999999999999.999999999999999999999999999999, -99999999999999999999999999999999999999999999, -99999999999999999999999999999999999999999999., -9999999999999999999999999999999999999999999.9, -999999999999999999999999999999999999999999.99, -9999999999999999.9999999999999999999999999999, -999999999999999.99999999999999999999999999999, -99999999999999.999999999999999999999999999999, -999999999999999999999999999999999999999999999, -999999999999999999999999999999999999999999999., -99999999999999999999999999999999999999999999.9, -9999999999999999999999999999999999999999999.99, -99999999999999999.9999999999999999999999999999, -9999999999999999.99999999999999999999999999999, -999999999999999.999999999999999999999999999999, -9999999999999999999999999999999999999999999999, -9999999999999999999999999999999999999999999999., -999999999999999999999999999999999999999999999.9, -99999999999999999999999999999999999999999999.99, -999999999999999999.9999999999999999999999999999, -99999999999999999.99999999999999999999999999999, -9999999999999999.999999999999999999999999999999, -99999999999999999999999999999999999999999999999, -99999999999999999999999999999999999999999999999., -9999999999999999999999999999999999999999999999.9, -999999999999999999999999999999999999999999999.99, -9999999999999999999.9999999999999999999999999999, -999999999999999999.99999999999999999999999999999, -99999999999999999.999999999999999999999999999999, -999999999999999999999999999999999999999999999999, -999999999999999999999999999999999999999999999999., -99999999999999999999999999999999999999999999999.9, -9999999999999999999999999999999999999999999999.99, -99999999999999999999.9999999999999999999999999999, -9999999999999999999.99999999999999999999999999999, -999999999999999999.999999999999999999999999999999, -9999999999999999999999999999999999999999999999999, -9999999999999999999999999999999999999999999999999., -999999999999999999999999999999999999999999999999.9, -99999999999999999999999999999999999999999999999.99, -999999999999999999999.9999999999999999999999999999, -99999999999999999999.99999999999999999999999999999, -9999999999999999999.999999999999999999999999999999, -99999999999999999999999999999999999999999999999999, -99999999999999999999999999999999999999999999999999., -9999999999999999999999999999999999999999999999999.9, -999999999999999999999999999999999999999999999999.99, -9999999999999999999999.9999999999999999999999999999, -999999999999999999999.99999999999999999999999999999, -99999999999999999999.999999999999999999999999999999, -999999999999999999999999999999999999999999999999999, -999999999999999999999999999999999999999999999999999., -99999999999999999999999999999999999999999999999999.9, -9999999999999999999999999999999999999999999999999.99, -99999999999999999999999.9999999999999999999999999999, -9999999999999999999999.99999999999999999999999999999, -999999999999999999999.999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999., -999999999999999999999999999999999999999999999999999.9, -99999999999999999999999999999999999999999999999999.99, -999999999999999999999999.9999999999999999999999999999, -99999999999999999999999.99999999999999999999999999999, -9999999999999999999999.999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999., -9999999999999999999999999999999999999999999999999999.9, -999999999999999999999999999999999999999999999999999.99, -9999999999999999999999999.9999999999999999999999999999, -999999999999999999999999.99999999999999999999999999999, -99999999999999999999999.999999999999999999999999999999, -999999999999999999999999999999999999999999999999999999, -999999999999999999999999999999999999999999999999999999., -99999999999999999999999999999999999999999999999999999.9, -9999999999999999999999999999999999999999999999999999.99, -99999999999999999999999999.9999999999999999999999999999, -9999999999999999999999999.99999999999999999999999999999, -999999999999999999999999.999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999999., -999999999999999999999999999999999999999999999999999999.9, -99999999999999999999999999999999999999999999999999999.99, -999999999999999999999999999.9999999999999999999999999999, -99999999999999999999999999.99999999999999999999999999999, -9999999999999999999999999.999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999999., -9999999999999999999999999999999999999999999999999999999.9, -999999999999999999999999999999999999999999999999999999.99, -9999999999999999999999999999.9999999999999999999999999999, -999999999999999999999999999.99999999999999999999999999999, -99999999999999999999999999.999999999999999999999999999999, -999999999999999999999999999999999999999999999999999999999, -999999999999999999999999999999999999999999999999999999999., -99999999999999999999999999999999999999999999999999999999.9, -9999999999999999999999999999999999999999999999999999999.99, -99999999999999999999999999999.9999999999999999999999999999, -9999999999999999999999999999.99999999999999999999999999999, -999999999999999999999999999.999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999999999., -999999999999999999999999999999999999999999999999999999999.9, -99999999999999999999999999999999999999999999999999999999.99, -999999999999999999999999999999.9999999999999999999999999999, -99999999999999999999999999999.99999999999999999999999999999, -9999999999999999999999999999.999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999999999., -9999999999999999999999999999999999999999999999999999999999.9, -999999999999999999999999999999999999999999999999999999999.99, -9999999999999999999999999999999.9999999999999999999999999999, -999999999999999999999999999999.99999999999999999999999999999, -99999999999999999999999999999.999999999999999999999999999999, -999999999999999999999999999999999999999999999999999999999999, -999999999999999999999999999999999999999999999999999999999999., -99999999999999999999999999999999999999999999999999999999999.9, -9999999999999999999999999999999999999999999999999999999999.99, -99999999999999999999999999999999.9999999999999999999999999999, -9999999999999999999999999999999.99999999999999999999999999999, -999999999999999999999999999999.999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999999999999., -999999999999999999999999999999999999999999999999999999999999.9, -99999999999999999999999999999999999999999999999999999999999.99, -999999999999999999999999999999999.9999999999999999999999999999, -99999999999999999999999999999999.99999999999999999999999999999, -9999999999999999999999999999999.999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999999999999., -9999999999999999999999999999999999999999999999999999999999999.9, -999999999999999999999999999999999999999999999999999999999999.99, -9999999999999999999999999999999999.9999999999999999999999999999, -999999999999999999999999999999999.99999999999999999999999999999, -99999999999999999999999999999999.999999999999999999999999999999, -999999999999999999999999999999999999999999999999999999999999999, -999999999999999999999999999999999999999999999999999999999999999., -99999999999999999999999999999999999999999999999999999999999999.9, -9999999999999999999999999999999999999999999999999999999999999.99, -99999999999999999999999999999999999.9999999999999999999999999999, -9999999999999999999999999999999999.99999999999999999999999999999, -999999999999999999999999999999999.999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999999999999999, -9999999999999999999999999999999999999999999999999999999999999999., -999999999999999999999999999999999999999999999999999999999999999.9, -99999999999999999999999999999999999999999999999999999999999999.99, -999999999999999999999999999999999999.9999999999999999999999999999, -99999999999999999999999999999999999.99999999999999999999999999999, -9999999999999999999999999999999999.999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999999999999999, -99999999999999999999999999999999999999999999999999999999999999999., -9999999999999999999999999999999999999999999999999999999999999999.9, -999999999999999999999999999999999999999999999999999999999999999.99, -9999999999999999999999999999999999999.9999999999999999999999999999, -999999999999999999999999999999999999.99999999999999999999999999999, -99999999999999999999999999999999999.999999999999999999999999999999);


-- STRESS_MultiColumnPK.table
drop table if exists `stress`.`STRESS_Multi Column Primary Key`;

create table `stress`.`STRESS_Multi Column Primary Key` (  a varchar(10) NOT NULL ,b varchar(10) NOT NULL ,c varchar(10) NOT NULL ,description varchar(100) ,primary key (a,b,c))ENGINE=InnoDB DEFAULT CHARACTER SET latin1 COLLATE latin1_bin;

insert into `stress`.`STRESS_Multi Column Primary Key`(a, b, c, description) values (char(0), char(0), char(0), 'char(0) char(0) char(0)');
insert into `stress`.`STRESS_Multi Column Primary Key`(a, b, c, description) values (char(1), char(1), char(1), 'char(1) char(1) char(1)');
insert into `stress`.`STRESS_Multi Column Primary Key`(a, b, c, description) values ('', '', '', ''''', '''' ''''');
insert into `stress`.`STRESS_Multi Column Primary Key`(a, b, c, description) values ('a', 'b', 'c', '''a'' ''b'' ''c''');
insert into `stress`.`STRESS_Multi Column Primary Key`(a, b, c, description) values ('a~', 'b~', 'c~', '''a~'' ''b~'' ''c~''');
insert into `stress`.`STRESS_Multi Column Primary Key`(a, b, c, description) values ('a~~', 'b~~', 'c~~', '''a~~'' ''b~~'' ''c~~''');
insert into `stress`.`STRESS_Multi Column Primary Key`(a, b, c, description) values ('a~ ~', 'b~ ~', 'c~ ~', '''a~ ~'' ''b~ ~'' ''c~ ~''');
insert into `stress`.`STRESS_Multi Column Primary Key`(a, b, c, description) values ('a~.~', 'b~.~', 'c~.~', '''a~.~'' ''b~.~'' ''c~.~''');


-- STRESS_TIME.table
drop table if exists `stress`.STRESS_TIME;

create table `stress`.STRESS_TIME (  id int auto_increment ,description varchar(100) ,a_time_default time ,a_time_0 time(0) ,a_time_1 time(1) ,a_time_2 time(2) ,a_time_3 time(3) ,a_time_4 time(4) ,a_time_5 time(5) ,a_time_6 time(6) ,constraint PK_STRESS_TIME primary key(id))ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_TIME values (0, 'now()', now(), now(), now(), now(), now(), now(), now(), now());
insert into `stress`.STRESS_TIME values (0, 'null', null, null, null, null, null, null, null, null);
insert into `stress`.STRESS_TIME values (0, 'localtime', localtime, localtime, localtime, localtime, localtime, localtime, localtime, localtime);
insert into `stress`.STRESS_TIME values (0, 'localtime()', localtime(), localtime(), localtime(), localtime(), localtime(), localtime(), localtime(), localtime());
insert into `stress`.STRESS_TIME values (0, '''00:00:00''', '00:00:00', '00:00:00', '00:00:00', '00:00:00', '00:00:00', '00:00:00', '00:00:00', '00:00:00');
insert into `stress`.STRESS_TIME values (0, '''12''\nstores as 00:00:12', '12', '12', '12', '12', '12', '12', '12', '12');
insert into `stress`.STRESS_TIME values (0, '''12.123456''\nstores as 00:00:12.123456 rounded to precision', '12.123456', '12.123456', '12.123456', '12.123456', '12.123456', '12.123456', '12.123456', '12.123456');
insert into `stress`.STRESS_TIME values (0, '''1112'' stores as 00:11:12', '1112', '1112', '1112', '1112', '1112', '1112', '1112', '1112');
insert into `stress`.STRESS_TIME values (0, '''11:12'' stores as 11:12:00', '11:12', '11:12', '11:12', '11:12', '11:12', '11:12', '11:12', '11:12');
insert into `stress`.STRESS_TIME values (0, '''-23:59:59''', '-23:59:59', '-23:59:59', '-23:59:59', '-23:59:59', '-23:59:59', '-23:59:59', '-23:59:59', '-23:59:59');
insert into `stress`.STRESS_TIME values (0, '''23:59:59''', '23:59:59', '23:59:59', '23:59:59', '23:59:59', '23:59:59', '23:59:59', '23:59:59', '23:59:59');
insert into `stress`.STRESS_TIME values (0, '''24:00:00''', '24:00:00', '24:00:00', '24:00:00', '24:00:00', '24:00:00', '24:00:00', '24:00:00', '24:00:00');
insert into `stress`.STRESS_TIME values (0, '''-24:00:00''', '-24:00:00', '-24:00:00', '-24:00:00', '-24:00:00', '-24:00:00', '-24:00:00', '-24:00:00', '-24:00:00');
insert into `stress`.STRESS_TIME values (0, '''-850:00:00''\nstores as -838:59:58', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58');
insert into `stress`.STRESS_TIME values (0, '''-838:59:58''', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58', '-838:59:58');
insert into `stress`.STRESS_TIME values (0, '''850:00:00''\nstores as 838:59:58', '838:59:58', '838:59:58', '838:59:58', '838:59:58', '838:59:58', '838:59:58', '838:59:58', '838:59:58');
insert into `stress`.STRESS_TIME values (0, '''838:59:58''', '838:59:58', '838:59:58', '838:59:58', '838:59:58', '838:59:58', '838:59:58', '838:59:58', '838:59:58');

-- ['This assumes that MySQL 5.6.4 or later so that fractional seconds are supported', '-- Phase Setup']
-- STRESS_INTEGER.table
drop table if exists `stress`.STRESS_INTEGER;

create table `stress`.STRESS_INTEGER (  id int auto_increment primary key ,description varchar(100) ,a_integer_default integer ,a_integer_1 integer(1) ,a_integer_2 integer(2) ,a_integer_3 integer(3) ,a_integer_4 integer(4) ,a_integer_5 integer(5) ,a_integer_6 integer(6) ,a_integer_7 integer(7) ,a_integer_8 integer(8) ,a_integer_21 integer(21))ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_INTEGER values (0, 'all zeroes', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
insert into `stress`.STRESS_INTEGER values (0, 'all ones', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
insert into `stress`.STRESS_INTEGER values (0, 'all -1', -1, -1, -1, -1, -1, -1, -1, -1, -1, -1);
insert into `stress`.STRESS_INTEGER values (0, 'all 127', 127, 127, 127, 127, 127, 127, 127, 127, 127, 127);
insert into `stress`.STRESS_INTEGER values (0, 'all 32767', 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767);
insert into `stress`.STRESS_INTEGER values (0, 'all 32768', 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768);
insert into `stress`.STRESS_INTEGER values (0, 'all 65534', 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534);
insert into `stress`.STRESS_INTEGER values (0, 'all 65535', 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535);
insert into `stress`.STRESS_INTEGER values (0, 'all 8388607', 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607);
insert into `stress`.STRESS_INTEGER values (0, 'all -8388608', -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608);
insert into `stress`.STRESS_INTEGER values (0, 'all 2147483647', 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647);
insert into `stress`.STRESS_INTEGER values (0, 'all -2147483648', -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648);


-- STRESS_MEDIUMINT.table
drop table if exists `stress`.STRESS_MEDIUMINT;

create table `stress`.STRESS_MEDIUMINT (  id int auto_increment primary key ,description varchar(100) ,a_mediumint_default mediumint ,a_mediumint_1 mediumint(1) ,a_mediumint_2 mediumint(2) ,a_mediumint_3 mediumint(3) ,a_mediumint_4 mediumint(4) ,a_mediumint_5 mediumint(5) ,a_mediumint_6 mediumint(6) ,a_mediumint_7 mediumint(7) ,a_mediumint_8 mediumint(8) ,a_mediumint_9 mediumint(9))ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_MEDIUMINT values (0, 'all zeroes', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
insert into `stress`.STRESS_MEDIUMINT values (0, 'all ones', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
insert into `stress`.STRESS_MEDIUMINT values (0, 'all -1', -1, -1, -1, -1, -1, -1, -1, -1, -1, -1);
insert into `stress`.STRESS_MEDIUMINT values (0, 'all 127', 127, 127, 127, 127, 127, 127, 127, 127, 127, 127);
insert into `stress`.STRESS_MEDIUMINT values (0, 'all 32767', 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767);
insert into `stress`.STRESS_MEDIUMINT values (0, 'all 32768', 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768);
insert into `stress`.STRESS_MEDIUMINT values (0, 'all 65534', 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534);
insert into `stress`.STRESS_MEDIUMINT values (0, 'all 65535', 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535);
insert into `stress`.STRESS_MEDIUMINT values (0, 'all 8388607', 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607);
insert into `stress`.STRESS_MEDIUMINT values (0, 'all -8388608', -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608);


-- STRESS_INTEGER_UNSIGNED.table
drop table if exists `stress`.STRESS_INTEGER_UNSIGNED;

create table `stress`.STRESS_INTEGER_UNSIGNED (  id int auto_increment primary key ,description varchar(100) ,a_integer_unsigned_default integer unsigned ,a_integer_unsigned_1 integer(1) unsigned ,a_integer_unsigned_2 integer(2) unsigned ,a_integer_unsigned_3 integer(3) unsigned ,a_integer_unsigned_4 integer(4) unsigned ,a_integer_unsigned_5 integer(5) unsigned ,a_integer_unsigned_6 integer(6) unsigned ,a_integer_unsigned_7 integer(7) unsigned ,a_integer_unsigned_8 integer(8) unsigned ,a_integer_unsigned_21 integer(21) unsigned)ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all zeroes', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all ones', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all 127', 127, 127, 127, 127, 127, 127, 127, 127, 127, 127);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all 32767', 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all 32768', 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all 65534', 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all 65535', 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all 8388607', 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all 8388608', 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all 16777215', 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215);
insert into `stress`.STRESS_INTEGER_UNSIGNED values (0, 'all 4294967295', 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295);


-- STRESS_DATETIME.table
drop table if exists `stress`.`STRESS_DATETIME`;

create table `stress`.`STRESS_DATETIME` (  `id` int auto_increment ,`description` varchar(100) ,`datetime` datetime ,constraint `PK_STRESS_DATETIME` primary key(`id`))ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.`STRESS_DATETIME` values (0, 'now()', now());
insert into `stress`.`STRESS_DATETIME` values (0, 'null', null);
insert into `stress`.`STRESS_DATETIME` values (0, 'localtime', localtime);
insert into `stress`.`STRESS_DATETIME` values (0, 'localtime()', localtime());
set time_zone='+12:00';
insert into `stress`.`STRESS_DATETIME` values (0, '''1999-12-13 23:59:59'' with timezone +12', convert('1999-12-13 23:59:59', DATETIME));
set time_zone='+00:00';
insert into `stress`.`STRESS_DATETIME` values (0, '''1999-12-13 23:59:59'' with timezone +0', convert('1999-12-13 23:59:59', DATETIME));
-- will not insert for some setups depending on @@atat@@session.SQL_MODE settingsinsert into `stress`.`STRESS_DATETIME` values (0, '''0000-00-00 00:00:00''', convert('0000-00-00 00:00:00', DATETIME));
insert into `stress`.`STRESS_DATETIME` values (0, '''1000-01-01 00:00:00''', convert('1000-01-01 00:00:00', DATETIME));
insert into `stress`.`STRESS_DATETIME` values (0, '''1582-10-05 00:00:00''', convert('1582-10-05 00:00:00', DATETIME));
insert into `stress`.`STRESS_DATETIME` values (0, '''1582-10-06 00:00:00''', convert('1582-10-06 00:00:00', DATETIME));
insert into `stress`.`STRESS_DATETIME` values (0, '''1582-10-15 00:00:00''', convert('1582-10-15 00:00:00', DATETIME));
insert into `stress`.`STRESS_DATETIME` values (0, '''1999-12-31 00:00:00''', convert('1999-12-31 00:00:00', DATETIME));
insert into `stress`.`STRESS_DATETIME` values (0, '''2000-01-01 00:00:00''', convert('2000-01-01 00:00:00', DATETIME));
insert into `stress`.`STRESS_DATETIME` values (0, '''9999-12-31 23:59:59''', convert('9999-12-31 23:59:59', DATETIME));

-- ['MySQL supports', 'datetime type which goes from 1000-01-01 00:00:00 to 9999-12-31 23:59:59', 'and is not tied to any timezone', '-- Phase Setup']
-- STRESS_MEDIUMINT_UNSIGNED.table
drop table if exists `stress`.STRESS_MEDIUMINT_UNSIGNED;

create table `stress`.STRESS_MEDIUMINT_UNSIGNED (  id int auto_increment primary key ,description varchar(100) ,a_mediumint_unsigned_default mediumint unsigned ,a_mediumint_unsigned_1 mediumint(1) unsigned ,a_mediumint_unsigned_2 mediumint(2) unsigned ,a_mediumint_unsigned_3 mediumint(3) unsigned ,a_mediumint_unsigned_4 mediumint(4) unsigned ,a_mediumint_unsigned_5 mediumint(5) unsigned ,a_mediumint_unsigned_6 mediumint(6) unsigned ,a_mediumint_unsigned_7 mediumint(7) unsigned ,a_mediumint_unsigned_8 mediumint(8) unsigned ,a_mediumint_unsigned_9 mediumint(9) unsigned)ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all zeroes', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all ones', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all 127', 127, 127, 127, 127, 127, 127, 127, 127, 127, 127);
insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all 32767', 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767);
insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all 32768', 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768);
insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all 65534', 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534);
insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all 65535', 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535);
insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all 8388607', 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607);
insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all 8388608', 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608, 8388608);
insert into `stress`.STRESS_MEDIUMINT_UNSIGNED values (0, 'all 16777215', 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215);


-- STRESS_ENUM.table
drop table if exists `stress`.STRESS_ENUM;

create table `stress`.STRESS_ENUM (  id int auto_increment primary key ,description varchar(100) ,`enum ('x-small', 'small', 'medium', 'large', 'x-large', '0')` enum ('x-small', 'small', 'medium', 'large', 'x-large', '0'))ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- insert into `stress`.STRESS_ENUM values (0, '0', 0);
insert into `stress`.STRESS_ENUM values (0, '''0''', '0');
insert into `stress`.STRESS_ENUM values (0, '1', 1);
insert into `stress`.STRESS_ENUM values (0, '''1''', '1');
insert into `stress`.STRESS_ENUM values (0, '''x-small''', 'x-small');
insert into `stress`.STRESS_ENUM values (0, '''small''', 'small');
insert into `stress`.STRESS_ENUM values (0, '''medimum''', 'medium');
insert into `stress`.STRESS_ENUM values (0, '''large''', 'large');
insert into `stress`.STRESS_ENUM values (0, '''x-large''', 'x-large');


-- STRESS_BIGINT.table
drop table if exists `stress`.STRESS_BIGINT;

create table `stress`.STRESS_BIGINT (  id int auto_increment primary key ,description varchar(100) ,a_bigint_default bigint ,a_bigint_1 bigint(1) ,a_bigint_2 bigint(2) ,a_bigint_3 bigint(3) ,a_bigint_4 bigint(4) ,a_bigint_5 bigint(5) ,a_bigint_6 bigint(6) ,a_bigint_7 bigint(7) ,a_bigint_8 bigint(8) ,a_bigint_9 bigint(9))ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_BIGINT values (0, 'all zeroes', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
insert into `stress`.STRESS_BIGINT values (0, 'all ones', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
insert into `stress`.STRESS_BIGINT values (0, 'all -1', -1, -1, -1, -1, -1, -1, -1, -1, -1, -1);
insert into `stress`.STRESS_BIGINT values (0, 'all 127', 127, 127, 127, 127, 127, 127, 127, 127, 127, 127);
insert into `stress`.STRESS_BIGINT values (0, 'all 32767', 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767, 32767);
insert into `stress`.STRESS_BIGINT values (0, 'all 32768', 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768);
insert into `stress`.STRESS_BIGINT values (0, 'all 65534', 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534, 65534);
insert into `stress`.STRESS_BIGINT values (0, 'all 65535', 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535);
insert into `stress`.STRESS_BIGINT values (0, 'all 8388607', 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607, 8388607);
insert into `stress`.STRESS_BIGINT values (0, 'all -8388608', -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608, -8388608);
insert into `stress`.STRESS_BIGINT values (0, 'all 2147483647', 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647);
insert into `stress`.STRESS_BIGINT values (0, 'all -2147483648', -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648);
insert into `stress`.STRESS_BIGINT values (0, 'all 9223372036854775807', 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807, 9223372036854775807);
insert into `stress`.STRESS_BIGINT values (0, 'all -9223372036854775808', -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808, -9223372036854775808);


-- STRESS_SET.table
drop table if exists `stress`.STRESS_SET;

create table `stress`.STRESS_SET (  `id` int auto_increment primary key ,`description` varchar(100) ,`set('s', 'm', 'l')` set('s', 'm', 'l'))ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_SET values (0, 'null', null);
insert into `stress`.STRESS_SET values (0, '''''', '');
insert into `stress`.STRESS_SET values (0, '''s''', 's');
insert into `stress`.STRESS_SET values (0, '''s,m''', 's,m');
insert into `stress`.STRESS_SET values (0, '''s,l''', 's,l');
insert into `stress`.STRESS_SET values (0, '''s,l,m''', 's,m,l');
insert into `stress`.STRESS_SET values (0, '''m''', 'm');
insert into `stress`.STRESS_SET values (0, '''m,l''', 'm,l');
insert into `stress`.STRESS_SET values (0, '''l''', 'l');


-- STRESS_TINYINT_UNSIGNED.table
drop table if exists `stress`.`STRESS_TINYINT_UNSIGNED`;

create table `stress`.`STRESS_TINYINT_UNSIGNED` (  `id` int auto_increment primary key ,`description` varchar(100) ,`tinyint unsigned` tinyint unsigned ,`tinyint unsigned(1)` tinyint(1) unsigned ,`tinyint unsigned(2)` tinyint(2) unsigned ,`tinyint unsigned(3)` tinyint(3) unsigned)ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

insert into `stress`.`STRESS_TINYINT_UNSIGNED` values (0, 'null', null, null, null, null);
insert into `stress`.`STRESS_TINYINT_UNSIGNED` values (0, 'all zeroes', 0, 0, 0, 0);
insert into `stress`.`STRESS_TINYINT_UNSIGNED` values (0, 'all ones', 1, 1, 1, 1);
insert into `stress`.`STRESS_TINYINT_UNSIGNED` values (0, 'all 127', 127, 127, 127, 127);
insert into `stress`.`STRESS_TINYINT_UNSIGNED` values (0, 'all 128', 128,  128, 128, 128);
insert into `stress`.`STRESS_TINYINT_UNSIGNED` values (0, 'all 255', 255, 255, 255, 255);


-- STRESS_DEMOGRAPHICS.table
drop table if exists `stress`.`STRESS_demographics`;

create table `stress`.`STRESS_demographics` (  id int auto_increment primary key ,acre_id int not null ,`year` int not null ,population numeric(12,0) ,population_change numeric(9,3) ,population_avg_change numeric(9,3) ,median_income numeric(12,2) ,median_income_change numeric(9,3) ,median_income_avg_change numeric(9,3) ,unemployment double ,unemployment_change numeric(9,3) ,unemployment_avg_change numeric(9,3) ,poverty double ,poverty_change numeric(9,3) ,poverty_avg_change numeric(9,3) ,county_debt_per_resident double ,school_debt_per_student double ,industry_concentration_risk double ,firm_concentration_risk double ,climate_change_air int ,climate_change_water int ,climate_change_sea_level numeric(9,3) ,declarations_disaster_number int ,declarations_disaster_code1 text(20) ,declarations_disaster_code2 text(20) ,declarations_disaster_code3 text(20) ,declarations_disaster_code4 text(20) ,declarations_disaster_code5 text(20) ,drought_conditions_score int ,superfund_sites int ,superfund_sites_score double ,cdc_counties_at_risk int ,safe_drinking_water_violations double ,safe_drinking_water_population double ,diabetes_prevalence double ,home_ownership double ,home_ownership_change numeric(9,3) ,home_ownership_avg_change numeric(9,3) ,vacancy_rate double ,vacancy_rate_change numeric(9,3) ,vacancy_rate_avg_change numeric(9,3) ,median_housing_value double ,median_housing_value_change numeric(9,3) ,median_housing_value_avg_change numeric(9,3) ,median_income_pct_median_housing_value double ,median_income_pct_median_housing_val_chg numeric(9,3) ,real_estate_taxes double ,re_tax_pct_median_housing_value numeric(9,3) ,re_tax_pct_median_housing_value_chg numeric(9,3) ,re_tax_pct_median_housing_value_avg_chg numeric(9,3) ,re_tax_pct_median_income numeric(9,3) ,re_tax_pct_median_income_chg numeric(9,3) ,re_tax_pct_median_income_avg_chg numeric(9,3) ,police_ratio double ,firefighters_ratio double ,teachers_ratio double ,dentists_ratio double ,doctors_ratio double ,bachelors_degree numeric(9,3) ,bachelors_degree_change numeric(9,3) ,bachelors_degree_avg_change numeric(9,3) ,crime_ratio double ,crime_ratio_change numeric(9,3) ,crime_ratio_avg_change numeric(9,3) ,population_crime double ,violent_crime double ,property_crime double ,murder double ,rape double ,robbery double ,aggravated_assault double ,burglary double ,larceny double ,motor_vehicle_theft double ,arson double ,crime_data_source text(30))engine=InnoDB default charset=utf8 auto_increment = 1000;
create unique index demographics_acreid_year_uq on `stress`.STRESS_demographics(`acre_id`, `year`);

insert into `stress`.`STRESS_demographics` (  acre_id ,`year` ,population ,population_change ,population_avg_change ,median_income ,median_income_change ,median_income_avg_change) values (100001, 2015, 13123, -0.026, 0.0002, 24112.12, -2016.12, -0.00836);
insert into `stress`.`STRESS_demographics` (  acre_id ,`year` ,population ,population_change ,population_avg_change ,median_income ,median_income_change ,median_income_avg_change) values (100001, 2016, 12123, -0.026, 0.0002, 22112.12, -20.12, -0.00006);


-- STRESS_VARCHAR(65531).table
drop table if exists `stress`.`STRESS_VARCHAR(65531)`;

create table `stress`.`STRESS_VARCHAR(65531)` (  `varchar(65531)` varchar(65531) CHARACTER SET latin1)ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_bin;

insert into `stress`.`STRESS_VARCHAR(65531)` values (  null);
insert into `stress`.`STRESS_VARCHAR(65531)` values (  'A');

-- ['MySQL specifies that 65535 is max length for varchar - BUT the record itself', 'must also find the Engine - so the limit is somewhat less - this is NOT the absolete max, but close', '-- Phase Setup']
-- STRESS_SMALLINT_UNSIGNED.table
drop table if exists `stress`.STRESS_SMALLINT_UNSIGNED;

create table `stress`.STRESS_SMALLINT_UNSIGNED (  id int auto_increment primary key ,description varchar(100) ,a_smallint_unsigned_default smallint unsigned ,a_smallint_unsigned_1 smallint(1) unsigned ,a_smallint_unsigned_2 smallint(2) unsigned ,a_smallint_unsigned_3 smallint(3) unsigned ,a_smallint_unsigned_4 smallint(4) unsigned ,a_smallint_unsigned_5 smallint(5) unsigned ,a_smallint_unsigned_6 smallint(6) unsigned)ENGINE=InnoDB DEFAULT CHARSET=utf8;

insert into `stress`.STRESS_SMALLINT_UNSIGNED values (0, 'all zeroes', 0, 0, 0, 0, 0, 0, 0);
insert into `stress`.STRESS_SMALLINT_UNSIGNED values (0, 'all ones', 1, 1, 1, 1, 1, 1, 1);
insert into `stress`.STRESS_SMALLINT_UNSIGNED values (0, 'all 127', 127, 127, 127, 127, 127, 127, 127);
insert into `stress`.STRESS_SMALLINT_UNSIGNED values (0, 'all 32767', 32767, 32767, 32767, 32767, 32767, 32767, 32767);
insert into `stress`.STRESS_SMALLINT_UNSIGNED values (0, 'all 32768', 32768, 32768, 32768, 32768, 32768, 32768, 32768);
insert into `stress`.STRESS_SMALLINT_UNSIGNED values (0, 'all 65534', 65534, 65534, 65534, 65534, 65534, 65534, 65534);
insert into `stress`.STRESS_SMALLINT_UNSIGNED values (0, 'all 65535', 65535, 65535, 65535, 65535, 65535, 65535, 65535);


-- STRESS_NO_PRIMARY_KEY.table
drop table if exists `stress`.`STRESS_NO_PRIMARY_KEY`;

create table `stress`.`STRESS_NO_PRIMARY_KEY` (  `id` integer not null ,`desc` varchar(20) not null);

insert into `stress`.`STRESS_NO_PRIMARY_KEY` values (0, 'Zero');
insert into `stress`.`STRESS_NO_PRIMARY_KEY` values (0, 'Zero(copy 2)');
insert into `stress`.`STRESS_NO_PRIMARY_KEY` values (1, 'One');
insert into `stress`.`STRESS_NO_PRIMARY_KEY` values (2, 'Two');