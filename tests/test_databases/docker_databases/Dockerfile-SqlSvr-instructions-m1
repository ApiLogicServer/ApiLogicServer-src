# create a SqlSvr for m1 that stores data in the container, not a volume (not working)

# docker pull mcr.microsoft.com/mssql/server
# docker run --name sqlsvr -e 'HOMEBREW_NO_ENV_FILTERING=1' -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=posey3861' -p 1433:1433 -d mcr.microsoft.com/mssql/server
#    docker run --name sqlsvr-container --net dev-network -p 1433:1433 -d apilogicserver/sqlsvr:version1.0.0

# x86 tests.. 
# ApiLogicServer create --project_name=sqlserver \
    --db_url='mssql+pyodbc://sa:Posey3861@localhost:1433/NORTHWND?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no'

docker exec -it sqlsvr-container bash

# fails - sqlcmd missing; 
sqlcmd -S localhost -U sa -P 'posey3861'
# fails - not root
apt-get update
ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
# so, use this 
docker exec -u 0 -it sqlsvr-container bash
# that didn't work, so try sqlcmd locally:
sqlcmd -S localhost,1433 -U sa -P 'posey3861'

# connect from local terminal
sqlcmd -S localhost,1433 -U sa -P 'Posey3861' -C

# process a sql file
sqlcmd -S localhost,1433 -U sa -P 'Posey3861' -i tests/test_databases/sql_server/OUKashrusSystem/NCRCDashbaord_SCHEMA_AND_DATA.sql

SELECT name FROM sys.databases;


# ref: https://medium.com/geekculture/docker-express-running-a-local-sql-server-on-your-m1-mac-8bbc22c49dc9
# https://www.linkedin.com/in/merken/

# docker run -e "ACCEPT_EULA=1" -e "MSSQL_SA_PASSWORD=MyPass@word" -e "MSSQL_PID=Developer" -e "MSSQL_USER=SA" -p 1433:1433 -d --name=sql mcr.microsoft.com/azure-sql-edge

# ApiLogicServer create --project_name=SqlServer --db_url='mssql+pyodbc://sa:MyPass@word@sql:1433/NORTHWND?driver=ODBC+Driver+17+for+SQL+Server\&trusted_connection=no'

# ApiLogicServer create --project_name=SqlServer --db_url='mssql+pyodbc://sa:MyPass@word@sql:1433/NORTHWND?driver=ODBC+Driver+18+for+SQL+Server\&trusted_connection=no&Encrypt=no'

# docker run -e "ACCEPT_EULA=1" -e "MSSQL_SA_PASSWORD=posey3861" -e "MSSQL_PID=Developer" -e "MSSQL_USER=sa" -p 1433:1433 -d --name=sql mcr.microsoft.com/azure-sql-edge


# ref: https://whodeenie.medium.com/installing-pyodbc-and-unixodbc-for-apple-silicon-8e238ed7f216
# ???

# Now set up your sqlsvr database using Azure Data Studio

#    northwind - thanks, Doug: https://douglaskline.blogspot.com/2020/09/restoring-sql-server-db-backup-to.html
#       paste test data from tests/sql_server/northwind.sql
#    SampleDB
#       from tests/sql_server/SampleDB.sql

# access Azure Data Studio Backups of docker db
# docker cp ~/dev/ApiLogicServer/tests/sql_server/SampDB-Backup sqlsvr-container:/var/opt/mssql/data/SampleDB-Backup.bak


# Now convert container to image

# docker run --name sqlsvr-container --net dev-network -p 1433:1433 -d apilogicserver/sqlsvr-m1

# docker commit sqlsvr-container sqlsvr-m1
# docker tag sqlsvr-m1 apilogicserver/sqlsvr-m1:version1.0.1
# docker push apilogicserver/sqlsvr-m1:version1.0.1

# Upgrade

# docker commit sqlsvr-container sqlsvr-m1
# docker tag sqlsvr-m1 apilogicserver/sqlsvr-m1:version1.0.2
# docker push apilogicserver/sqlsvr-m1:version1.0.2
# repeat for latest
# docker run --name sqlsvr-container --net dev-network -p 1433:1433 -d apilogicserver/sqlsvr-m1:latest
