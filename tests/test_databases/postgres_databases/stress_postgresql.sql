-- STRESS_CHARACTER_VARYING.table
drop table if exists "public"."STRESS_CHARACTER_VARYING";
drop sequence if exists "public"."STRESS_CHARACTER_VARYING_SEQ";

create sequence "public"."STRESS_CHARACTER_VARYING_SEQ" increment by 1 start with 1;
create table "public"."STRESS_CHARACTER_VARYING" (  "id" integer not null ,"description" varchar(100) ,"character_varying" character varying ,"character_varying(1)" character varying(1) ,"character_varying(2)" character varying(2) ,"character_varying(2000)" character varying(2000) ,"character_varying(4000)" character varying(4000));
alter table "public"."STRESS_CHARACTER_VARYING"  add constraint "PK_STRESS_CHARACTER_VARYING"  primary key ("id");

insert into "public"."STRESS_CHARACTER_VARYING" values (nextval('"public"."STRESS_CHARACTER_VARYING_SEQ"') ,'null' ,null ,null ,null ,null ,null);
insert into "public"."STRESS_CHARACTER_VARYING" values (nextval('"public"."STRESS_CHARACTER_VARYING_SEQ"') ,'''A'' and others' ,'A' ,'A' ,'AA' ,   '0000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE' ,   '0000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '0900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '1900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '2900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '3000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '3100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '3200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '3300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '3400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '3600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '3700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '3800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'  || '3900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE');

-- STRESS_INTERVAL_01.table
drop table if exists "public"."STRESS_INTERVAL_01";
drop sequence if exists "public"."STRESS_INTERVAL_01_SEQ";

create sequence "public"."STRESS_INTERVAL_01_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_01" (  "id" integer not null ,"description" varchar(100) ,"interval" interval ,"interval(0)" interval(0) ,"interval(1)" interval(1) ,"interval(2)" interval(2) ,"interval(3)" interval(3) ,"interval(4)" interval(4) ,"interval(5)" interval(5) ,"interval(6)" interval(6));
alter table "public"."STRESS_INTERVAL_01"  add constraint "PK_STRESS_INTERVAL_01"  primary key ("id");
-- -- create function "public"."STRESS_FN_INTERVAL_01_NOARG" ()  returns intervalas $$  select '9 years 9 months 9 days 9 hours 9 minutes 9.999999 seconds'::interval$$ language sql;
-- -- create function "public"."STRESS_PROC_INTERVAL_01" (someval IN interval)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_01" values (nextval('"public"."STRESS_INTERVAL_01_SEQ"'),'interval ''1 years 1 months 1 days 1 hours 1 minutes 1.111111 seconds''',interval '1 years 1 months 1 days 1 hours 1 minutes 1.111111 seconds',interval '1 years 1 months 1 days 1 hours 1 minutes 1 seconds',interval '1 years 1 months 1 days 1 hours 1 minutes 1.1 seconds',interval '1 years 1 months 1 days 1 hours 1 minutes 1.11 seconds',interval '1 years 1 months 1 days 1 hours 1 minutes 1.111 seconds',interval '1 years 1 months 1 days 1 hours 1 minutes 1.1111 seconds',interval '1 years 1 months 1 days 1 hours 1 minutes 1.11111 seconds',interval '1 years 1 months 1 days 1 hours 1 minutes 1.111111 seconds');
insert into "public"."STRESS_INTERVAL_01" values (nextval('"public"."STRESS_INTERVAL_01_SEQ"'),'interval ''-1 years -1 months -1 days -1 hours -1 minutes -1.111111 seconds''',interval '-1 years -1 months -1 days -1 hours -1 minutes -1.111111 seconds',interval '-1 years -1 months -1 days -1 hours -1 minutes -1 seconds',interval '-1 years -1 months -1 days -1 hours -1 minutes -1.1 seconds',interval '-1 years -1 months -1 days -1 hours -1 minutes -1.11 seconds',interval '-1 years -1 months -1 days -1 hours -1 minutes -1.111 seconds',interval '-1 years -1 months -1 days -1 hours -1 minutes -1.1111 seconds',interval '-1 years -1 months -1 days -1 hours -1 minutes -1.11111 seconds',interval '-1 years -1 months -1 days -1 hours -1 minutes -1.111111 seconds');

-- STRESS_SERIAL.table
create sequence "public"."STRESS_SERIAL_SEQ" increment by 1 start with 1000;
create sequence "public"."STRESS_SERIAL_MANUAL1_SEQ" increment by 1 start with 10000;
create sequence "public"."STRESS_SERIAL_MANUAL2_SEQ" increment by -100 start with 20000 maxvalue 100000 minvalue -100000;
create table "public"."STRESS_SERIAL" (  "id" int ,"description" varchar(100) ,"serial_default" serial ,"serial_manual1" int not null default nextval('"public"."STRESS_SERIAL_MANUAL1_SEQ"') ,"serial_manual2" int not null default nextval('"public"."STRESS_SERIAL_MANUAL2_SEQ"'));
alter table "public"."STRESS_SERIAL"  add constraint "PK_STRESS_SERIAL"  primary key ("id");
alter sequence "public"."STRESS_SERIAL_MANUAL1_SEQ"  owned by "public"."STRESS_SERIAL"."serial_manual1";;
alter sequence "public"."STRESS_SERIAL_MANUAL2_SEQ"  owned by "public"."STRESS_SERIAL"."serial_manual2";;

insert into "public"."STRESS_SERIAL" values (nextval('"public"."STRESS_SERIAL_SEQ"') ,'nextval(''"public"."STRESS_SERIAL_SEQ"''),_, default, default, default' , default , default , default);
insert into "public"."STRESS_SERIAL"("id", "description") values (nextval('"public"."STRESS_SERIAL_SEQ"') ,'seq,desc only');

-- ['We have four columns in this stress  table', '1- The  id which is the key.', '2- The serial type ( serial4) that will have an implicit sequence attached to it. ', '3- Integer column with default value from a sequence explicitly created. The sequence is owned by this table. ', '4- Integer column with default value from a sequence explicitly created. The sequence is NOT owned by this table. ', '-- Phase Create']
-- STRESS_INTERVAL_05_HOUR.table
drop table if exists "public"."STRESS_INTERVAL_05_HOUR";
drop sequence if exists "public"."STRESS_INTERVAL_05_HOUR_SEQ";

create sequence "public"."STRESS_INTERVAL_05_HOUR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_05_HOUR" (  "id" integer not null ,"description" varchar(100) ,"interval hour" interval hour);
alter table "public"."STRESS_INTERVAL_05_HOUR"  add constraint "PK_STRESS_INTERVAL_05_HOUR"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_05_HOUR_NOARG" ()  returns interval houras $$  select '9 hours'::interval hour$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_05_HOUR" (someval IN interval hour)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_05_HOUR" values (  nextval('"public"."STRESS_INTERVAL_05_HOUR_SEQ"') ,'interval ''1 hours''' ,interval '1 hours');
insert into "public"."STRESS_INTERVAL_05_HOUR" values (  nextval('"public"."STRESS_INTERVAL_05_HOUR_SEQ"') ,'interval ''-1 hours''' ,interval '-1 hours');

-- STRESS_NUMERIC_ARR.table
drop sequence if exists "public"."STRESS_NUMERIC_ARR_SEQ";
drop table if exists "public"."STRESS_NUMERIC_ARR";

create sequence "public"."STRESS_NUMERIC_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_NUMERIC_ARR" (  "id" integer not null ,"description" character varying(100) ,"numeric[]" numeric[] ,"numeric(1)[]" numeric(1)[] ,"numeric(1,0)[]" numeric(1,0)[] ,"numeric(10,5)[]" numeric(10,5)[] ,"numeric(1000)[]" numeric(1000)[] ,"numeric(1000,0)[]" numeric(1000,0)[]);
alter table "public"."STRESS_NUMERIC_ARR"  add constraint "public"."PK_STRESS_NUMERIC_ARR"  primary key ("id");

insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[]::numeric[]' ,ARRAY[]::numeric[] ,ARRAY[]::numeric[] ,ARRAY[]::numeric[] ,ARRAY[]::numeric[] ,ARRAY[]::numeric[] ,ARRAY[]::numeric[]);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[null]::numeric[]' ,ARRAY[null]::numeric[] ,ARRAY[null]::numeric[] ,ARRAY[null]::numeric[] ,ARRAY[null]::numeric[] ,ARRAY[null]::numeric[] ,ARRAY[null]::numeric[]);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[0]' ,ARRAY[0] ,ARRAY[0] ,ARRAY[0] ,ARRAY[0] ,ARRAY[0] ,ARRAY[0]);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[1]' ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1]);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[1e999]' ,ARRAY[1e999] ,null ,null ,null ,ARRAY[1e999] ,ARRAY[1e999]);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[1e999::numeric+1::numeric]' ,ARRAY[1e999::numeric+1::numeric] ,null ,null ,null ,ARRAY[1e999::numeric+1::numeric] ,ARRAY[1e999::numeric+1::numeric]);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[''1e1000''::numeric+1::numeric]' ,ARRAY['1e1000'::numeric+1::numeric] ,null ,null ,null ,null ,null);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[''nan''::numeric]' ,ARRAY['nan'::numeric] ,ARRAY['nan'::numeric] ,ARRAY['nan'::numeric] ,ARRAY['nan'::numeric] ,ARRAY['nan'::numeric] ,ARRAY['nan'::numeric]);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[''1e131071''::numeric]' ,ARRAY['1e131071'::numeric] ,null ,null ,null ,null ,null);
insert into "public"."STRESS_NUMERIC_ARR" values (nextval('"public"."STRESS_NUMERIC_ARR_SEQ"') ,'ARRAY[''1e-16382''::numeric]' ,ARRAY['1e-16382'::numeric] ,null ,null ,null ,null ,null);

-- STRESS_TIMESTAMP.table
drop table if exists "public"."STRESS_TIMESTAMP";
drop sequence if exists "public"."STRESS_TIMESTAMP_SEQ";

create sequence "public"."STRESS_TIMESTAMP_SEQ" increment by 1 start with 1;
create table "public"."STRESS_TIMESTAMP" (  "id" integer not null ,"description" varchar(100) ,"timestamp" timestamp ,"timestamp(0)" timestamp(0) ,"timestamp(1)" timestamp(1) ,"timestamp(2)" timestamp(2) ,"timestamp(3)" timestamp(3) ,"timestamp(4)" timestamp(4) ,"timestamp(5)" timestamp(5) ,"timestamp(6)" timestamp(6));
alter table "public"."STRESS_TIMESTAMP"  add constraint "PK_STRESS_TIMESTAMP"  primary key ("id");
-- create function "public"."STRESS_FN_TIMESTAMP_NOARG" ()  returns timestampas $$  select TIMESTAMP '1999-12-31 23:59:59.123456'::timestamp$$ language sql;

insert into "public"."STRESS_TIMESTAMP" values (nextval('"public"."STRESS_TIMESTAMP_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_TIMESTAMP" values (nextval('"public"."STRESS_TIMESTAMP_SEQ"') ,'current_timestamp' ,current_timestamp ,current_timestamp(0) ,current_timestamp(1) ,current_timestamp(2) ,current_timestamp(3) ,current_timestamp(4) ,current_timestamp(5) ,current_timestamp(6));
insert into "public"."STRESS_TIMESTAMP" values (nextval('"public"."STRESS_TIMESTAMP_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456''' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456');
insert into "public"."STRESS_TIMESTAMP" values (nextval('"public"."STRESS_TIMESTAMP_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456 BC''' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC');
insert into "public"."STRESS_TIMESTAMP" values (nextval('"public"."STRESS_TIMESTAMP_SEQ"') ,'TIMESTAMP ''Infinity''' ,TIMESTAMP 'Infinity' ,TIMESTAMP 'Infinity' ,TIMESTAMP 'Infinity' ,TIMESTAMP 'Infinity' ,TIMESTAMP 'Infinity' ,TIMESTAMP 'Infinity' ,TIMESTAMP 'Infinity' ,TIMESTAMP 'Infinity');
insert into "public"."STRESS_TIMESTAMP" values (nextval('"public"."STRESS_TIMESTAMP_SEQ"') ,'TIMESTAMP ''-Infinity''' ,TIMESTAMP '-Infinity' ,TIMESTAMP '-Infinity' ,TIMESTAMP '-Infinity' ,TIMESTAMP '-Infinity' ,TIMESTAMP '-Infinity' ,TIMESTAMP '-Infinity' ,TIMESTAMP '-Infinity' ,TIMESTAMP '-Infinity');

-- STRESS_TIMESTAMP_ARR.table
drop table if exists "public"."STRESS_TIMESTAMP_ARR";
drop sequence if exists "public"."STRESS_TIMESTAMP_ARR_SEQ";

create sequence "public"."STRESS_TIMESTAMP_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_TIMESTAMP_ARR" (  "id" integer not null ,"description" varchar(100) ,"timestamp[]" timestamp[] ,"timestamp(0)[]" timestamp(0)[] ,"timestamp(1)[]" timestamp(1)[] ,"timestamp(2)[]" timestamp(2)[] ,"timestamp(3)[]" timestamp(3)[] ,"timestamp(4)[]" timestamp(4)[] ,"timestamp(5)[]" timestamp(5)[] ,"timestamp(6)[]" timestamp(6)[]);
alter table "public"."STRESS_TIMESTAMP_ARR"  add constraint "public"."PK_STRESS_TIMESTAMP_ARR"  primary key ("id");
-- create function "public"."STRESS_FN_TIMESTAMP[]_NOARG" ()  returns timestamp[]as $$  select ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'::timestamp]$$ language sql;

insert into "public"."STRESS_TIMESTAMP_ARR" values (nextval('"public"."STRESS_TIMESTAMP_ARR_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_TIMESTAMP_ARR" values (nextval('"public"."STRESS_TIMESTAMP_ARR_SEQ"') ,'ARRAY[]::timestamp[n]' ,ARRAY[]::timestamp[] ,ARRAY[]::timestamp[0] ,ARRAY[]::timestamp[1] ,ARRAY[]::timestamp[2] ,ARRAY[]::timestamp[3] ,ARRAY[]::timestamp[4] ,ARRAY[]::timestamp[5] ,ARRAY[]::timestamp[6]);
insert into "public"."STRESS_TIMESTAMP_ARR" values (nextval('"public"."STRESS_TIMESTAMP_ARR_SEQ"') ,'ARRAY[current_timestamp]' ,ARRAY[current_timestamp] ,ARRAY[current_timestamp(0)] ,ARRAY[current_timestamp(1)] ,ARRAY[current_timestamp(2)] ,ARRAY[current_timestamp(3)] ,ARRAY[current_timestamp(4)] ,ARRAY[current_timestamp(5)] ,ARRAY[current_timestamp(6)]);
insert into "public"."STRESS_TIMESTAMP_ARR" values (nextval('"public"."STRESS_TIMESTAMP_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456']);
insert into "public"."STRESS_TIMESTAMP_ARR" values (nextval('"public"."STRESS_TIMESTAMP_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456 BC'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC']);
insert into "public"."STRESS_TIMESTAMP_ARR" values (nextval('"public"."STRESS_TIMESTAMP_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''Infinity'']' ,ARRAY[TIMESTAMP 'Infinity'] ,ARRAY[TIMESTAMP 'Infinity'] ,ARRAY[TIMESTAMP 'Infinity'] ,ARRAY[TIMESTAMP 'Infinity'] ,ARRAY[TIMESTAMP 'Infinity'] ,ARRAY[TIMESTAMP 'Infinity'] ,ARRAY[TIMESTAMP 'Infinity'] ,ARRAY[TIMESTAMP 'Infinity']);
insert into "public"."STRESS_TIMESTAMP_ARR" values (nextval('"public"."STRESS_TIMESTAMP_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''-Infinity'']' ,ARRAY[TIMESTAMP '-Infinity'] ,ARRAY[TIMESTAMP '-Infinity'] ,ARRAY[TIMESTAMP '-Infinity'] ,ARRAY[TIMESTAMP '-Infinity'] ,ARRAY[TIMESTAMP '-Infinity'] ,ARRAY[TIMESTAMP '-Infinity'] ,ARRAY[TIMESTAMP '-Infinity'] ,ARRAY[TIMESTAMP '-Infinity']);

-- STRESS_INTEGER_ARR.table
drop table if exists "public"."STRESS_INTEGER_ARR";
drop sequence if exists "public"."STRESS_INTEGER_ARR_SEQ";

create sequence "public"."STRESS_INTEGER_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTEGER_ARR" (  "id" int ,"description" varchar(100) ,"integer[]" integer[]);
alter table "public"."STRESS_INTEGER_ARR"  add constraint "public"."PK_STRESS_INTEGER_ARR"  primary key ("id");

insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'null' ,null);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[]::integer[]' ,ARRAY[]::integer[]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[null]::integer[]' ,ARRAY[null]::integer[]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[0]' ,ARRAY[0]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[1]' ,ARRAY[1]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[-1]' ,ARRAY[-1]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[127]' ,ARRAY[127]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[-127]' ,ARRAY[-127]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[32767]' ,ARRAY[32767]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[-32767]' ,ARRAY[-32767]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[-65534]' ,ARRAY[-65534]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[65534]' ,ARRAY[65534]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[8388607]' ,ARRAY[8388607]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[-8388607]' ,ARRAY[-8388607]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[2147483647]' ,ARRAY[2147483647]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[-2147483647]' ,ARRAY[-2147483647]);
insert into "public"."STRESS_INTEGER_ARR" values (nextval('"public"."STRESS_INTEGER_ARR_SEQ"') ,'ARRAY[-2147483648]' ,ARRAY[-2147483648]);

-- STRESS_BIT.table
drop table if exists "public"."STRESS_BIT";
drop sequence if exists "public"."STRESS_BIT_SEQ";

create sequence "public"."STRESS_BIT_SEQ" increment by 1 start with 1;
create table "public"."STRESS_BIT" (  "id" int ,"description" varchar(100) ,"bit" bit ,"bit(1)" bit(1) ,"bit(2)" bit(2) ,"bit(3)" bit(3) ,"bit(4)" bit(4) ,"bit(5)" bit(5) ,"bit(6)" bit(6) ,"bit(7)" bit(7) ,"bit(8)" bit(8) ,"bit(9)" bit(9) ,"bit(10)" bit(10) ,"bit(11)" bit(11) ,"bit(12)" bit(12) ,"bit(13)" bit(13) ,"bit(14)" bit(14) ,"bit(15)" bit(15) ,"bit(16)" bit(16) ,"bit(17)" bit(17) ,"bit(18)" bit(18) ,"bit(19)" bit(19) ,"bit(20)" bit(20) ,"bit(21)" bit(21) ,"bit(22)" bit(22) ,"bit(23)" bit(23) ,"bit(24)" bit(24) ,"bit(25)" bit(25) ,"bit(26)" bit(26) ,"bit(27)" bit(27) ,"bit(28)" bit(28) ,"bit(29)" bit(29) ,"bit(30)" bit(30) ,"bit(31)" bit(31) ,"bit(32)" bit(32) ,"bit(33)" bit(33) ,"bit(34)" bit(34) ,"bit(35)" bit(35) ,"bit(36)" bit(36) ,"bit(37)" bit(37) ,"bit(38)" bit(38) ,"bit(39)" bit(39) ,"bit(40)" bit(40) ,"bit(41)" bit(41) ,"bit(42)" bit(42) ,"bit(43)" bit(43) ,"bit(44)" bit(44) ,"bit(45)" bit(45) ,"bit(46)" bit(46) ,"bit(47)" bit(47) ,"bit(48)" bit(48) ,"bit(49)" bit(49) ,"bit(50)" bit(50) ,"bit(51)" bit(51) ,"bit(52)" bit(52) ,"bit(53)" bit(53) ,"bit(54)" bit(54) ,"bit(55)" bit(55) ,"bit(56)" bit(56) ,"bit(57)" bit(57) ,"bit(58)" bit(58) ,"bit(59)" bit(59) ,"bit(60)" bit(60) ,"bit(61)" bit(61) ,"bit(62)" bit(62) ,"bit(63)" bit(63) ,"bit(64)" bit(64) ,"bit(1000)" bit(1000));
alter table "public"."STRESS_BIT"  add constraint "PK_STRESS_BIT"  primary key ("id");

insert into "public"."STRESS_BIT" values (nextval('"public"."STRESS_BIT_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_BIT" values (nextval('"public"."STRESS_BIT_SEQ"') ,'all ones' ,b'1' ,b'1' ,b'11' ,b'111' ,b'1111' ,b'11111' ,b'111111' ,b'1111111' ,b'11111111' ,b'111111111' ,b'1111111111' ,b'11111111111' ,b'111111111111' ,b'1111111111111' ,b'11111111111111' ,b'111111111111111' ,b'1111111111111111' ,b'11111111111111111' ,b'111111111111111111' ,b'1111111111111111111' ,b'11111111111111111111' ,b'111111111111111111111' ,b'1111111111111111111111' ,b'11111111111111111111111' ,b'111111111111111111111111' ,b'1111111111111111111111111' ,b'11111111111111111111111111' ,b'111111111111111111111111111' ,b'1111111111111111111111111111' ,b'11111111111111111111111111111' ,b'111111111111111111111111111111' ,b'1111111111111111111111111111111' ,b'11111111111111111111111111111111' ,b'111111111111111111111111111111111' ,b'1111111111111111111111111111111111' ,b'11111111111111111111111111111111111' ,b'111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111111111111' ,bbit(1000));
insert into "public"."STRESS_BIT" values (nextval('"public"."STRESS_BIT_SEQ"') ,'all zeroes' ,b'0' ,b'0' ,b'00' ,b'000' ,b'0000' ,b'00000' ,b'000000' ,b'0000000' ,b'00000000' ,b'000000000' ,b'0000000000' ,b'00000000000' ,b'000000000000' ,b'0000000000000' ,b'00000000000000' ,b'000000000000000' ,b'0000000000000000' ,b'00000000000000000' ,b'000000000000000000' ,b'0000000000000000000' ,b'00000000000000000000' ,b'000000000000000000000' ,b'0000000000000000000000' ,b'00000000000000000000000' ,b'000000000000000000000000' ,b'0000000000000000000000000' ,b'00000000000000000000000000' ,b'000000000000000000000000000' ,b'0000000000000000000000000000' ,b'00000000000000000000000000000' ,b'000000000000000000000000000000' ,b'0000000000000000000000000000000' ,b'00000000000000000000000000000000' ,b'000000000000000000000000000000000' ,b'0000000000000000000000000000000000' ,b'00000000000000000000000000000000000' ,b'000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000000000000' ,bbit(1000));
insert into "public"."STRESS_BIT" values (nextval('"public"."STRESS_BIT_SEQ"') ,'one/off' ,b'1' ,b'1' ,b'10' ,b'101' ,b'1010' ,b'10101' ,b'101010' ,b'1010101' ,b'10101010' ,b'101010101' ,b'1010101010' ,b'10101010101' ,b'101010101010' ,b'1010101010101' ,b'10101010101010' ,b'101010101010101' ,b'1010101010101010' ,b'10101010101010101' ,b'101010101010101010' ,b'1010101010101010101' ,b'10101010101010101010' ,b'101010101010101010101' ,b'1010101010101010101010' ,b'10101010101010101010101' ,b'101010101010101010101010' ,b'1010101010101010101010101' ,b'10101010101010101010101010' ,b'101010101010101010101010101' ,b'1010101010101010101010101010' ,b'10101010101010101010101010101' ,b'101010101010101010101010101010' ,b'1010101010101010101010101010101' ,b'10101010101010101010101010101010' ,b'101010101010101010101010101010101' ,b'1010101010101010101010101010101010' ,b'10101010101010101010101010101010101' ,b'101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101010101010101010101' ,bbit(1000));
insert into "public"."STRESS_BIT" values (nextval('"public"."STRESS_BIT_SEQ"') ,'high bit 1 only' ,b'1' ,b'1' ,b'10' ,b'100' ,b'1000' ,b'10000' ,b'100000' ,b'1000000' ,b'10000000' ,b'100000000' ,b'1000000000' ,b'10000000000' ,b'100000000000' ,b'1000000000000' ,b'10000000000000' ,b'100000000000000' ,b'1000000000000000' ,b'10000000000000000' ,b'100000000000000000' ,b'1000000000000000000' ,b'10000000000000000000' ,b'100000000000000000000' ,b'1000000000000000000000' ,b'10000000000000000000000' ,b'100000000000000000000000' ,b'1000000000000000000000000' ,b'10000000000000000000000000' ,b'100000000000000000000000000' ,b'1000000000000000000000000000' ,b'10000000000000000000000000000' ,b'100000000000000000000000000000' ,b'1000000000000000000000000000000' ,b'10000000000000000000000000000000' ,b'100000000000000000000000000000000' ,b'1000000000000000000000000000000000' ,b'10000000000000000000000000000000000' ,b'100000000000000000000000000000000000' ,b'1000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000000000000' ,'1'::bit(1000));

-- STRESS_DATE.table
drop table if exists "public"."STRESS_DATE";
drop sequence if exists "public"."STRESS_DATE_SEQ";

create sequence "public"."STRESS_DATE_SEQ" increment by 1 start with 1;
create table "public"."STRESS_DATE" (  "id" integer not null ,"description" varchar(100) ,"date" date);
alter table "public"."STRESS_DATE"  add constraint "PK_STRESS_DATE"  primary key ("id");

insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'null' ,null);
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'current_timestamp' ,current_timestamp);
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456789''' ,TIMESTAMP '1999-12-31 23:59:59.123456789');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456789 -01:12''' ,TIMESTAMP '1999-12-31 23:59:59.123456789 -01:12');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''9999-12-31''' ,DATE '9999-12-31');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''9999-12-31''' ,DATE '9999-12-31');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''0001-01-01''' ,DATE '0001-01-01');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''5874897-12-31''' ,DATE '5874897-12-31');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''0001-01-01 BC''' ,DATE '0001-01-01 BC');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''TODAY''' ,DATE 'TODAY');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''4713-01-01 BC''' ,DATE '4713-01-01 BC');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''TODAY''' ,DATE 'TODAY');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''TOMORROW''' ,DATE 'TOMORROW');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''YESTERDAY''' ,DATE 'YESTERDAY');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''EPOCH''' ,DATE 'EPOCH');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''NOW''' ,DATE 'NOW');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''-INFINITY''' ,DATE '-INFINITY');
insert into "public"."STRESS_DATE" values (nextval('"public"."STRESS_DATE_SEQ"') ,'DATE ''INFINITY''' ,DATE 'INFINITY');

-- STRESS_DATE_ARR.table
drop table if exists "public"."STRESS_DATE_ARR";
drop sequence if exists "public"."STRESS_DATE_ARR_SEQ";

create sequence "public"."STRESS_DATE_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_DATE_ARR" (  "id" integer not null ,"description" varchar(100) ,"date[]" date[]);
alter table "public"."STRESS_DATE_ARR"  add constraint "PK_STRESS_DATE_ARR"  primary key ("id");

insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'null' ,null);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[]::date[]' ,ARRAY[]::date[]);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[null]::date[]' ,ARRAY[null]::date[]);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[current_timestamp]' ,ARRAY[current_timestamp]);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456789'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456789']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456789 -01:12'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456789 -01:12']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''9999-12-31'']' ,ARRAY[DATE '9999-12-31']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''9999-12-31'']' ,ARRAY[DATE '9999-12-31']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''0001-01-01'']' ,ARRAY[DATE '0001-01-01']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''5874897-12-31'']' ,ARRAY[DATE '5874897-12-31']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''0001-01-01 BC'']' ,ARRAY[DATE '0001-01-01 BC']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''TODAY'']' ,ARRAY[DATE 'TODAY']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''4713-01-01 BC'']' ,ARRAY[DATE '4713-01-01 BC']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''TODAY'']' ,ARRAY[DATE 'TODAY']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''TOMORROW'']' ,ARRAY[DATE 'TOMORROW']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''YESTERDAY'']' ,ARRAY[DATE 'YESTERDAY']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''EPOCH'']' ,ARRAY[DATE 'EPOCH']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''NOW'']' ,ARRAY[DATE 'NOW']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''-INFINITY'']' ,ARRAY[DATE '-INFINITY']);
insert into "public"."STRESS_DATE_ARR" values (nextval('"public"."STRESS_DATE_ARR_SEQ"') ,'ARRAY[DATE ''INFINITY'']' ,ARRAY[DATE 'INFINITY']);

-- STRESS_MONEY.table
drop sequence if exists "public"."STRESS_MONEY_SEQ";
drop table if exists "public"."STRESS_MONEY";
create sequence "public"."STRESS_MONEY_SEQ" increment by 1 start with 1;
create table "public"."STRESS_MONEY" (  "id" integer not null ,"description" varchar(100) ,"money" money);
alter table "public"."STRESS_MONEY"  add constraint "PK_STRESS_MONEY"  primary key ("id");

insert into "public"."STRESS_MONEY" values (nextval('"public"."STRESS_MONEY_SEQ"') ,'''12.34''::float8::numeric::money' ,'12.34'::float8::numeric::money);
insert into "public"."STRESS_MONEY" values (nextval('"public"."STRESS_MONEY_SEQ"') ,'0' ,0);
insert into "public"."STRESS_MONEY" values (nextval('"public"."STRESS_MONEY_SEQ"') ,'0.123' ,0.123);
insert into "public"."STRESS_MONEY" values (nextval('"public"."STRESS_MONEY_SEQ"') ,'92233720368547758.07\nthe maximum value' ,92233720368547758.07);
insert into "public"."STRESS_MONEY" values (nextval('"public"."STRESS_MONEY_SEQ"') ,'-92233720368547758.08money\nthe minimum value' ,-92233720368547758.08);

-- STRESS_JSONB.table
drop table if exists "public"."STRESS_JSONB";
drop sequence if exists "public"."STRESS_JSONB_SEQ";

create sequence "public"."STRESS_JSONB_SEQ" increment by 1 start with 1;
create table "public"."STRESS_JSONB" (  id integer NOT NULL ,description text ,default_jsonb jsonb);
alter table "public"."STRESS_JSONB"  add constraint "PK_STRESS_JSONB"  primary key (id);

insert into "public"."STRESS_JSONB" values (nextval('"public"."STRESS_JSONB_SEQ"'),'["foo", "bar", "baz"]','["foo", "bar", "baz"]');
insert into "public"."STRESS_JSONB" values (nextval('"public"."STRESS_JSONB_SEQ"'),'{"foo": {"bar": "baz"}}','{"foo": {"bar": "baz"}}');
insert into "public"."STRESS_JSONB" values (nextval('"public"."STRESS_JSONB_SEQ"'),'[  {    "employee_id": 1,    "login": "sam",    "name": "Sam Yosemite",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/1",      "checksum": "A:4d83d7140396ac3c",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:1)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:1)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 2,    "login": "mlittlelamb",    "name": "Mary Little-Lamb",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/2",      "checksum": "A:aaab832d468f4e67",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:2)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:2)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 3,    "login": "sconnor",    "name": "Sarah Connor",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/3",      "checksum": "A:b842dc8b73dfdc5e",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:3)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:3)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 4,    "login": "jkim",    "name": "John Kim",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/4",      "checksum": "A:3ed29188014675ec",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:4)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:4)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 5,    "login": "bmcmanus",    "name": "Becky McManus",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/5",      "checksum": "A:706faff602cf1bc4",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:5)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:5)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 6,    "login": "ferikson",    "name": "Frank Erikson",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/6",      "checksum": "A:c9057d11b1b8c41f",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:6)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:6)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 7,    "login": "pjaveri",    "name": "Peggy Javeri",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/7",      "checksum": "A:17d26ccae5408948",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:7)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:7)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 8,    "login": "sfarmer",    "name": "Samantha Farmer",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/8",      "checksum": "A:03590b37656d8045",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:8)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:8)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 9,    "login": "jclark",    "name": "Josh Clark",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/9",      "checksum": "A:f8389cf68c2bbefd",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:9)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:9)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 10,    "login": "rgupta",    "name": "Rose Gupta",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/10",      "checksum": "A:c3bfc994031b0704",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:10)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:10)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 11,    "login": "dcolman",    "name": "Daniel Colman",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/11",      "checksum": "A:3a882f9a375aca89",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:11)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:11)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 12,    "login": "vjordanoski",    "name": "Vladimir Jordanoski",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/12",      "checksum": "A:2412e4b3c43f87e3",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:12)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:12)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 13,    "login": "hchamas",    "name": "Hillary Chamas",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/13",      "checksum": "A:7db292c43e63e1f2",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:13)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:13)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 14,    "login": "ptowers",    "name": "Paul Towers",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/14",      "checksum": "A:52ea9ad80396de0b",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:14)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:14)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 15,    "login": "vglass",    "name": "Val Glass",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/15",      "checksum": "A:ebfad4ecddd23d10",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:15)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:15)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 16,    "login": "mvahora",    "name": "Max Vahora",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/16",      "checksum": "A:6d8dbc48b1fe2533",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:16)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:16)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 17,    "login": "dhansen",    "name": "David Hansen",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/17",      "checksum": "A:ff6f315470bdf7bf",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:17)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:17)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 18,    "login": "kbrignoli",    "name": "Katrina Brignoli",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/18",      "checksum": "A:926e22f30d819380",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:18)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:18)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 19,    "login": "honeill",    "name": "Harvey O''Neill",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/19",      "checksum": "A:9501b3a05f929582",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:19)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:19)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 20,    "login": "sputin",    "name": "Sasaha Putin",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/20",      "checksum": "A:1c0447412b1b4c11",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:20)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:20)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "@metadata": {      "next_batch": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee?pagesize=20&offset=20"    }  }]','[  {    "employee_id": 1,    "login": "sam",    "name": "Sam Yosemite",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/1",      "checksum": "A:4d83d7140396ac3c",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:1)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:1)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 2,    "login": "mlittlelamb",    "name": "Mary Little-Lamb",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/2",      "checksum": "A:aaab832d468f4e67",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:2)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:2)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 3,    "login": "sconnor",    "name": "Sarah Connor",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/3",      "checksum": "A:b842dc8b73dfdc5e",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:3)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:3)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 4,    "login": "jkim",    "name": "John Kim",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/4",      "checksum": "A:3ed29188014675ec",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:4)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:4)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 5,    "login": "bmcmanus",    "name": "Becky McManus",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/5",      "checksum": "A:706faff602cf1bc4",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:5)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:5)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 6,    "login": "ferikson",    "name": "Frank Erikson",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/6",      "checksum": "A:c9057d11b1b8c41f",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:6)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:6)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 7,    "login": "pjaveri",    "name": "Peggy Javeri",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/7",      "checksum": "A:17d26ccae5408948",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:7)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:7)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 8,    "login": "sfarmer",    "name": "Samantha Farmer",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/8",      "checksum": "A:03590b37656d8045",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:8)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:8)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 9,    "login": "jclark",    "name": "Josh Clark",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/9",      "checksum": "A:f8389cf68c2bbefd",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:9)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:9)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 10,    "login": "rgupta",    "name": "Rose Gupta",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/10",      "checksum": "A:c3bfc994031b0704",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:10)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:10)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 11,    "login": "dcolman",    "name": "Daniel Colman",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/11",      "checksum": "A:3a882f9a375aca89",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:11)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:11)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 12,    "login": "vjordanoski",    "name": "Vladimir Jordanoski",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/12",      "checksum": "A:2412e4b3c43f87e3",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:12)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:12)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 13,    "login": "hchamas",    "name": "Hillary Chamas",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/13",      "checksum": "A:7db292c43e63e1f2",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:13)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:13)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 14,    "login": "ptowers",    "name": "Paul Towers",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/14",      "checksum": "A:52ea9ad80396de0b",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:14)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:14)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 15,    "login": "vglass",    "name": "Val Glass",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/15",      "checksum": "A:ebfad4ecddd23d10",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:15)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:15)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 16,    "login": "mvahora",    "name": "Max Vahora",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/16",      "checksum": "A:6d8dbc48b1fe2533",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:16)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:16)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 17,    "login": "dhansen",    "name": "David Hansen",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/17",      "checksum": "A:ff6f315470bdf7bf",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:17)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:17)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 18,    "login": "kbrignoli",    "name": "Katrina Brignoli",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/18",      "checksum": "A:926e22f30d819380",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:18)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:18)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 19,    "login": "honeill",    "name": "Harvey O''Neill",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/19",      "checksum": "A:9501b3a05f929582",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:19)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:19)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 20,    "login": "sputin",    "name": "Sasaha Putin",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/20",      "checksum": "A:1c0447412b1b4c11",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:20)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:20)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "@metadata": {      "next_batch": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee?pagesize=20&offset=20"    }  }]');

-- STRESS_ENUM_ARR.table
drop table if exists "public"."STRESS_ENUM_ARR";
drop sequence if exists "public"."STRESS_ENUM_ARR_SEQ";
drop type if exists "public"."t-shirt size#2";

create sequence "public"."STRESS_ENUM_ARR_SEQ" increment by 1 start with 1;
create type "public"."t-shirt size#2" AS enum ('x-small', 'small', 'medium', 'large', 'x-large');
create table "public"."STRESS_ENUM_ARR" (  "id" int ,"description" varchar(100) ,"t-shirt size#2[]" "public"."t-shirt size#2"[]);
alter table "public"."STRESS_ENUM_ARR"  add constraint "PK_STRESS_ENUM_ARR"  primary key ("id");

insert into "public"."STRESS_ENUM_ARR" values (nextval('"public"."STRESS_ENUM_ARR_SEQ"') ,'null' ,null);
insert into "public"."STRESS_ENUM_ARR" values (nextval('"public"."STRESS_ENUM_ARR_SEQ"') ,'ARRAY[]::"public"."t-shirt size#2"[]' ,ARRAY[]::"public"."t-shirt size#2"[]);
insert into "public"."STRESS_ENUM_ARR" values (nextval('"public"."STRESS_ENUM_ARR_SEQ"') ,'ARRAY[null]::"public"."t-shirt size#2"[]' ,ARRAY[null]::"public"."t-shirt size#2"[]);
insert into "public"."STRESS_ENUM_ARR" values (nextval('"public"."STRESS_ENUM_ARR_SEQ"') ,'ARRAY[''x-small'']::"public"."t-shirt size#2"[]' ,ARRAY['x-small']::"public"."t-shirt size#2"[]);
insert into "public"."STRESS_ENUM_ARR" values (nextval('"public"."STRESS_ENUM_ARR_SEQ"') ,'ARRAY[''small'']::"public"."t-shirt size#2"[]' ,ARRAY['small']::"public"."t-shirt size#2"[]);
insert into "public"."STRESS_ENUM_ARR" values (nextval('"public"."STRESS_ENUM_ARR_SEQ"') ,'ARRAY[''medium'']::"public"."t-shirt size#2"[]' ,ARRAY['medium']::"public"."t-shirt size#2"[]);
insert into "public"."STRESS_ENUM_ARR" values (nextval('"public"."STRESS_ENUM_ARR_SEQ"') ,'ARRAY[''large'']::"public"."t-shirt size#2"[]' ,ARRAY['large']::"public"."t-shirt size#2"[]);
insert into "public"."STRESS_ENUM_ARR" values (nextval('"public"."STRESS_ENUM_ARR_SEQ"') ,'ARRAY[''x-large'']::"public"."t-shirt size#2"[]' ,ARRAY['x-large']::"public"."t-shirt size#2"[]);

-- STRESS_CHAR.table
drop table if exists "public"."STRESS_CHAR";
drop sequence if exists "public"."STRESS_CHAR_SEQ";

create sequence "public"."STRESS_CHAR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_CHAR" (  "id" integer not null ,"description" varchar(100) ,"char" char ,"character" character ,"char(1)" char(1) ,"character(1)" character(1) ,"char(2)" char(2) ,"char(2000)" char(2000) ,"character(500000)" character(500000));
alter table "public"."STRESS_CHAR"  add constraint "PK_STRESS_CHAR"  primary key ("id");

insert into "public"."STRESS_CHAR" values (nextval('"public"."STRESS_CHAR_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_CHAR" values (nextval('"public"."STRESS_CHAR_SEQ"') ,'''A''' ,'A' ,'A' ,'A' ,'A' ,'AA' ,    '0000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '0100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '0200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '0300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '0400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '0500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '0600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '0700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '0800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '0900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '1000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '1100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '1200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '1300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '1400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '1600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '1700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '1800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   || '1900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE' ,null);

-- STRESS_UUID.table
drop table if exists "public"."STRESS_UUID";
drop sequence if exists "public"."STRESS_UUID_SEQ";

create sequence "public"."STRESS_UUID_SEQ" increment by 1 start with 1;
create table "public"."STRESS_UUID" (  "id" int ,"description" varchar(100) ,"uuid" uuid);
alter table "public"."STRESS_UUID"  add constraint "PK_STRESS_UUID"  primary key ("id");

insert into "public"."STRESS_UUID" values (nextval('"public"."STRESS_UUID_SEQ"') ,'''a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11''' ,'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11');
insert into "public"."STRESS_UUID" values (nextval('"public"."STRESS_UUID_SEQ"') ,'''uuid_generate_v4()''' ,uuid_generate_v4());
insert into "public"."STRESS_UUID" values (nextval('"public"."STRESS_UUID_SEQ"') ,'null' ,null);

-- ['To use uuid_generate_v4() generator function, we need to explicitly load the extension uuid-ossp ', '-- Phase Setup']
-- STRESS_INTERVAL_12_HOUR_TO_MINUTE.table
drop table if exists "public"."STRESS_INTERVAL_12_HOUR_TO_MINUTE";
drop sequence if exists "public"."STRESS_INTERVAL_12_HOUR_TO_MINUTE_SEQ";

create sequence "public"."STRESS_INTERVAL_12_HOUR_TO_MINUTE_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_12_HOUR_TO_MINUTE" (  "id" integer not null ,"description" varchar(100) ,"interval hour to minute" interval hour to minute);
alter table "public"."STRESS_INTERVAL_12_HOUR_TO_MINUTE"  add constraint "PK_STRESS_INTERVAL_12_HOUR_TO_MINUTE"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_12_HOUR_TO_MINUTE_NOARG" ()  returns interval hour to minuteas $$  select '9 hours 8 minutes'::interval hour to minute$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_12_HOUR_TO_MINUTE" (someval IN interval hour to minute)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_12_HOUR_TO_MINUTE" values (  nextval('"public"."STRESS_INTERVAL_12_HOUR_TO_MINUTE_SEQ"') ,'interval ''1 hours 1 minutes''' ,interval '1 hours 1 minutes');
insert into "public"."STRESS_INTERVAL_12_HOUR_TO_MINUTE" values (  nextval('"public"."STRESS_INTERVAL_12_HOUR_TO_MINUTE_SEQ"') ,'interval ''-1 hours -1 minutes''' ,interval '-1 hours -1 minutes');

-- STRESS_INTERVAL_03_MONTH.table
drop table if exists "public"."STRESS_INTERVAL_03_MONTH";
drop sequence if exists "public"."STRESS_INTERVAL_03_MONTH_SEQ";

create sequence "public"."STRESS_INTERVAL_03_MONTH_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_03_MONTH" (  "id" integer not null ,"description" varchar(100) ,"interval month" interval month);
alter table "public"."STRESS_INTERVAL_03_MONTH"  add constraint "PK_STRESS_INTERVAL_03_MONTH"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_03_MONTH_NOARG" ()  returns interval monthas $$  select '8 months'::interval month$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_03_MONTH" (someval IN interval month)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_03_MONTH" values (  nextval('"public"."STRESS_INTERVAL_03_MONTH_SEQ"') ,'interval ''1 months''' ,interval '1 months');
insert into "public"."STRESS_INTERVAL_03_MONTH" values (  nextval('"public"."STRESS_INTERVAL_03_MONTH_SEQ"') ,'interval ''-1 months''' ,interval '-1 months');

-- STRESS_OID.table
create sequence "public"."STRESS_OID_SEQ" increment by 1 start with 1;
create table "public"."STRESS_OID" (  "id" int ,"description" varchar(100) ,"an_oid" oid ,"a_regproc" regproc ,"a_regprocedure" regprocedure ,"a_regoper" regoper ,"a_regoperator" regoperator ,"a_regclass" regclass ,"a_regtype" regtype ,"a_regconfig" regconfig ,"a_regdictionary" regdictionary)WITH OIDS;
alter table "public"."STRESS_OID"  add constraint "PK_STRESS_OID"  primary key ("id");

insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'oid(0)' ,oid(0) ,oid(0) ,oid(0) ,oid(0) ,oid(0) ,oid(0) ,oid(0) ,oid(0));
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'0::oid' ,0::oid ,0::oid ,0::oid ,0::oid ,0::oid ,0::oid ,0::oid ,0::oid);
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'1::oid' ,1::oid ,1::oid ,1::oid ,1::oid ,1::oid ,1::oid ,1::oid ,1::oid);
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'regprocedure(''pg_catalog.avg(int4)'')' ,null ,regprocedure('pg_catalog.avg(int4)') ,regprocedure('pg_catalog.avg(int4)') ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'''pg_catalog.avg(int4)''::regprocedure' ,null ,'pg_catalog.avg(int4)'::regprocedure ,'pg_catalog.avg(int4)'::regprocedure ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'regproc(''pi'')' ,null ,regproc('pi') ,regproc('pi') ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'regoperator(''+(int4, int4)'')' ,null ,null ,null ,regoperator('+(int4, int4)') ,regoperator('+(int4, int4)') ,null ,null ,null ,null);
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'regclass(''"@@demoDatabaseDatabase@@"."public"."STRESS_OID"'')' ,null ,null ,null ,null ,null ,regclass('"@@demoDatabaseDatabase@@"."public"."STRESS_OID"') ,null ,null ,null);
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'regtype(''int4'')' ,null ,null ,null ,null ,null ,null ,regtype('int4') ,null ,null);
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'regconfig(''english'')' ,null ,null ,null ,null ,null ,null ,null ,regconfig('english') ,null);
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'regdictionary(''simple'')' ,null ,null ,null ,null ,null ,null ,null ,null ,regdictionary('simple'));
insert into "public"."STRESS_OID" values (nextval('"public"."STRESS_OID_SEQ"') ,'''simple''::regdictionary' ,null ,null ,null ,null ,null ,null ,null ,null ,'simple'::regdictionary);

-- ['demonstrate each of the various oid sub-types', '-- Phase Create']
-- STRESS_JSON.table
drop table if exists "public"."STRESS_JSON";
drop sequence if exists "public"."STRESS_JSON_SEQ";

create sequence "public"."STRESS_JSON_SEQ" increment by 1 start with 1;
create table "public"."STRESS_JSON" (  "id" integer NOT NULL ,"description" text ,"json" json);
alter table "public"."STRESS_JSON"  add constraint "PK_STRESS_JSON"  primary key ("id");

insert into "public"."STRESS_JSON" values (nextval('"public"."STRESS_JSON_SEQ"'),'["foo", "bar", "baz"]','["foo", "bar", "baz"]');
insert into "public"."STRESS_JSON" values (nextval('"public"."STRESS_JSON_SEQ"'),'{"foo": {"bar": "baz"}}','{"foo": {"bar": "baz"}}');
insert into "public"."STRESS_JSON" values (nextval('"public"."STRESS_JSON_SEQ"'),'a large json object','[  {    "employee_id": 1,    "login": "sam",    "name": "Sam Yosemite",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/1",      "checksum": "A:4d83d7140396ac3c",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:1)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:1)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 2,    "login": "mlittlelamb",    "name": "Mary Little-Lamb",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/2",      "checksum": "A:aaab832d468f4e67",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:2)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:2)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 3,    "login": "sconnor",    "name": "Sarah Connor",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/3",      "checksum": "A:b842dc8b73dfdc5e",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:3)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:3)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 4,    "login": "jkim",    "name": "John Kim",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/4",      "checksum": "A:3ed29188014675ec",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:4)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:4)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 5,    "login": "bmcmanus",    "name": "Becky McManus",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/5",      "checksum": "A:706faff602cf1bc4",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:5)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:5)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 6,    "login": "ferikson",    "name": "Frank Erikson",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/6",      "checksum": "A:c9057d11b1b8c41f",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:6)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:6)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 7,    "login": "pjaveri",    "name": "Peggy Javeri",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/7",      "checksum": "A:17d26ccae5408948",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:7)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:7)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 8,    "login": "sfarmer",    "name": "Samantha Farmer",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/8",      "checksum": "A:03590b37656d8045",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:8)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:8)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 9,    "login": "jclark",    "name": "Josh Clark",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/9",      "checksum": "A:f8389cf68c2bbefd",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:9)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:9)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 10,    "login": "rgupta",    "name": "Rose Gupta",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/10",      "checksum": "A:c3bfc994031b0704",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:10)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:10)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 11,    "login": "dcolman",    "name": "Daniel Colman",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/11",      "checksum": "A:3a882f9a375aca89",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:11)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:11)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 12,    "login": "vjordanoski",    "name": "Vladimir Jordanoski",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/12",      "checksum": "A:2412e4b3c43f87e3",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:12)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:12)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 13,    "login": "hchamas",    "name": "Hillary Chamas",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/13",      "checksum": "A:7db292c43e63e1f2",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:13)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:13)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 14,    "login": "ptowers",    "name": "Paul Towers",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/14",      "checksum": "A:52ea9ad80396de0b",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:14)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:14)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 15,    "login": "vglass",    "name": "Val Glass",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/15",      "checksum": "A:ebfad4ecddd23d10",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:15)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:15)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 16,    "login": "mvahora",    "name": "Max Vahora",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/16",      "checksum": "A:6d8dbc48b1fe2533",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:16)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:16)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 17,    "login": "dhansen",    "name": "David Hansen",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/17",      "checksum": "A:ff6f315470bdf7bf",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:17)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:17)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 18,    "login": "kbrignoli",    "name": "Katrina Brignoli",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/18",      "checksum": "A:926e22f30d819380",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:18)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:18)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 19,    "login": "honeill",    "name": "Harvey O''Neill",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/19",      "checksum": "A:9501b3a05f929582",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:19)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:19)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "employee_id": 20,    "login": "sputin",    "name": "Sasaha Putin",    "@metadata": {      "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee/20",      "checksum": "A:1c0447412b1b4c11",      "links": [        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee_picture?sysfilter=equal(employee_id:20)",          "rel": "children",          "role": "employee_pictureList",          "type": "urn:caliveapicreator:examples:demo:demo:employee_picture"        },        {          "href": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:PurchaseOrder?sysfilter=equal(salesrep_id:20)",          "rel": "children",          "role": "PurchaseOrderList",          "type": "urn:caliveapicreator:examples:demo:demo:PurchaseOrder"        }      ]    }  },  {    "@metadata": {      "next_batch": "http://test.expressologic.com/rest/default/demo_mysql/v1/demo:employee?pagesize=20&offset=20"    }  }]');

-- STRESS_SMALLINT_ARR.table
drop table if exists "public"."STRESS_SMALLINT_ARR";
drop sequence if exists "public"."STRESS_SMALLINT_ARR_SEQ";

create sequence "public"."STRESS_SMALLINT_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_SMALLINT_ARR" (  "id" int ,"description" varchar(100) ,"smallint[]" smallint[]);
alter table "public"."STRESS_SMALLINT_ARR"  add constraint "PK_STRESS_SMALLINT_ARR"  primary key ("id");

insert into "public"."STRESS_SMALLINT_ARR" values (nextval('"public"."STRESS_SMALLINT_ARR_SEQ"') ,'null' ,null);
insert into "public"."STRESS_SMALLINT_ARR" values (nextval('"public"."STRESS_SMALLINT_ARR_SEQ"') ,'ARRAY[0]' ,ARRAY[0]);
insert into "public"."STRESS_SMALLINT_ARR" values (nextval('"public"."STRESS_SMALLINT_ARR_SEQ"') ,'ARRAY[1]' ,ARRAY[1]);
insert into "public"."STRESS_SMALLINT_ARR" values (nextval('"public"."STRESS_SMALLINT_ARR_SEQ"') ,'ARRAY[-1]' ,ARRAY[-1]);
insert into "public"."STRESS_SMALLINT_ARR" values ( nextval('"public"."STRESS_SMALLINT_ARR_SEQ"') ,'ARRAY[127]' ,ARRAY[127]);
insert into "public"."STRESS_SMALLINT_ARR" values ( nextval('"public"."STRESS_SMALLINT_ARR_SEQ"') ,'ARRAY[32767]' ,ARRAY[32767]);
insert into "public"."STRESS_SMALLINT_ARR" values ( nextval('"public"."STRESS_SMALLINT_ARR_SEQ"') ,'ARRAY[-32768]' ,ARRAY[-32768]);

-- STRESS_GEOM_POINT.table
create sequence "public"."STRESS_GEOM_POINT_SEQ" increment by 1 start with 1;
create table "public"."STRESS_GEOM_POINT" (  "id" int ,"description" varchar(100) ,"point" point);
alter table "public"."STRESS_GEOM_POINT"  add constraint "PK_STRESS_GEOM_POINT"  primary key ("id");

insert into "public"."STRESS_GEOM_POINT" values (nextval('"public"."STRESS_GEOM_POINT_SEQ"') ,'null' ,null);
insert into "public"."STRESS_GEOM_POINT" values (nextval('"public"."STRESS_GEOM_POINT_SEQ"') ,'''0, 0''' ,'0, 0');
insert into "public"."STRESS_GEOM_POINT" values (nextval('"public"."STRESS_GEOM_POINT_SEQ"') ,'''(0, 0)''' ,'(0, 0)');
insert into "public"."STRESS_GEOM_POINT" values (nextval('"public"."STRESS_GEOM_POINT_SEQ"') ,'''(0.1, 0.1)''' ,'(0.1, 0.1)');

-- ['demonstrate the geometry(point) type', '-- Phase Create']
-- STRESS_INTERVAL_14_MINUTE_TO_SECOND.table
drop table if exists "public"."STRESS_INTERVAL_14_MINUTE_TO_SECOND";
drop sequence if exists "public"."STRESS_INTERVAL_14_MINUTE_TO_SECOND_SEQ";

create sequence "public"."STRESS_INTERVAL_14_MINUTE_TO_SECOND_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_14_MINUTE_TO_SECOND" (  "id" integer not null ,"description" varchar(100) ,"interval minute to second" interval minute to second ,"interval minute to second(0)" interval minute to second(0) ,"interval minute to second(1)" interval minute to second(1) ,"interval minute to second(2)" interval minute to second(2) ,"interval minute to second(3)" interval minute to second(3) ,"interval minute to second(4)" interval minute to second(4) ,"interval minute to second(5)" interval minute to second(5) ,"interval minute to second(6)" interval minute to second(6));
alter table "public"."STRESS_INTERVAL_14_MINUTE_TO_SECOND"  add constraint "PK_STRESS_INTERVAL_14_MINUTE_TO_SECOND"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_14_MINUTE_TO_SECOND_NOARG" ()  returns interval minute to secondas $$  select '9 minutes 9.999999 seconds'::interval minute to second$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_14_MINUTE_TO_SECOND" (someval IN interval minute to second)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_14_MINUTE_TO_SECOND" values (  nextval('"public"."STRESS_INTERVAL_14_MINUTE_TO_SECOND_SEQ"') ,'interval ''1 minutes 1.111111 seconds''' ,interval '1 minutes 1.111111 seconds' ,interval '1 minutes 1 seconds' ,interval '1 minutes 1.1 seconds' ,interval '1 minutes 1.11 seconds' ,interval '1 minutes 1.111 seconds' ,interval '1 minutes 1.1111 seconds' ,interval '1 minutes 1.11111 seconds' ,interval '1 minutes 1.111111 seconds');
insert into "public"."STRESS_INTERVAL_14_MINUTE_TO_SECOND" values (  nextval('"public"."STRESS_INTERVAL_14_MINUTE_TO_SECOND_SEQ"') ,'interval ''-1 minutes -1.111111 seconds''' ,interval '-1 minutes -1.111111 seconds' ,interval '-1 minutes -1 seconds' ,interval '-1 minutes -1.1 seconds' ,interval '-1 minutes -1.11 seconds' ,interval '-1 minutes -1.111 seconds' ,interval '-1 minutes -1.1111 seconds' ,interval '-1 minutes -1.11111 seconds' ,interval '-1 minutes -1.111111 seconds');

-- STRESS_FLOAT.table
drop sequence if exists "public"."STRESS_FLOAT_SEQ";
drop table if exists "public"."STRESS_FLOAT";

create sequence "public"."STRESS_FLOAT_SEQ" increment by 1 start with 1;
create table "public"."STRESS_FLOAT" (  "id" integer not null ,"description" varchar(100) ,"float" float ,"float(1)" float(1) ,"float(2)" float(2) ,"float(3)" float(3) ,"float(4)" float(4) ,"float(5)" float(5) ,"float(6)" float(6) ,"float(7)" float(7) ,"float(8)" float(8) ,"float(9)" float(9) ,"float(10)" float(10) ,"float(11)" float(11) ,"float(12)" float(12) ,"float(13)" float(13) ,"float(14)" float(14) ,"float(15)" float(15) ,"float(16)" float(16) ,"float(17)" float(17) ,"float(18)" float(18) ,"float(19)" float(19) ,"float(20)" float(20) ,"float(21)" float(21) ,"float(22)" float(22) ,"float(23)" float(23) ,"float(24)" float(24) ,"float(25)" float(25) ,"float(26)" float(26) ,"float(27)" float(27) ,"float(28)" float(28) ,"float(29)" float(29) ,"float(30)" float(30) ,"float(31)" float(31) ,"float(32)" float(32) ,"float(33)" float(33) ,"float(34)" float(34) ,"float(35)" float(35) ,"float(36)" float(36) ,"float(37)" float(37) ,"float(38)" float(38) ,"float(39)" float(39) ,"float(40)" float(40) ,"float(41)" float(41) ,"float(42)" float(42) ,"float(43)" float(43) ,"float(44)" float(44) ,"float(45)" float(45) ,"float(46)" float(46) ,"float(47)" float(47) ,"float(48)" float(48) ,"float(49)" float(49) ,"float(50)" float(50) ,"float(51)" float(51) ,"float(52)" float(52) ,"float(53)" float(53));
alter table "public"."STRESS_FLOAT"  add constraint "PK_STRESS_FLOAT"  primary key ("id");

insert into "public"."STRESS_FLOAT" values (nextval('"public"."STRESS_FLOAT_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_FLOAT" values (nextval('"public"."STRESS_FLOAT_SEQ"') ,'1' ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1 ,1);
insert into "public"."STRESS_FLOAT" values (nextval('"public"."STRESS_FLOAT_SEQ"') ,'1.1' ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1 ,1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1);
insert into "public"."STRESS_FLOAT" values (nextval('"public"."STRESS_FLOAT_SEQ"') ,'''10.1''' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1' ,'10.1');
insert into "public"."STRESS_FLOAT" values (nextval('"public"."STRESS_FLOAT_SEQ"') ,'''.001''' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001' ,'.001');
insert into "public"."STRESS_FLOAT" values (nextval('"public"."STRESS_FLOAT_SEQ"') ,'''123.45678''' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678' ,'123.45678');
insert into "public"."STRESS_FLOAT" values (nextval('"public"."STRESS_FLOAT_SEQ"') ,'''NaN''' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN' ,'NaN');
insert into "public"."STRESS_FLOAT" values (nextval('"public"."STRESS_FLOAT_SEQ"') ,'''Infinity''' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity' ,'Infinity');
insert into "public"."STRESS_FLOAT" values (nextval('"public"."STRESS_FLOAT_SEQ"') ,'''-Infinity''' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity' ,'-Infinity');

-- STRESS_SMALLINT.table
drop table if exists "public"."STRESS_SMALLINT";
drop sequence if exists "public"."STRESS_SMALLINT_SEQ";

create sequence "public"."STRESS_SMALLINT_SEQ" increment by 1 start with 1;
create table "public"."STRESS_SMALLINT" (  "id" int ,"description" varchar(100) ,"smallint" smallint);
alter table "public"."STRESS_SMALLINT"  add constraint "PK_STRESS_SMALLINT"  primary key ("id");

insert into "public"."STRESS_SMALLINT" values (nextval('"public"."STRESS_SMALLINT_SEQ"') ,'null' ,null);
insert into "public"."STRESS_SMALLINT" values (nextval('"public"."STRESS_SMALLINT_SEQ"') ,'0' ,0);
insert into "public"."STRESS_SMALLINT" values (nextval('"public"."STRESS_SMALLINT_SEQ"') ,'One' ,1);
insert into "public"."STRESS_SMALLINT" values (nextval('"public"."STRESS_SMALLINT_SEQ"') ,'-1' ,-1);
insert into "public"."STRESS_SMALLINT" values (nextval('"public"."STRESS_SMALLINT_SEQ"') ,'127' ,127);
insert into "public"."STRESS_SMALLINT" values (nextval('"public"."STRESS_SMALLINT_SEQ"') ,'32767' ,32767);
insert into "public"."STRESS_SMALLINT" values (nextval('"public"."STRESS_SMALLINT_SEQ"') ,'-32768' ,-32768);

-- STRESS_INTERVAL_10_DAY_TO_MINUTE.table
drop table if exists "public"."STRESS_INTERVAL_10_DAY_TO_MINUTE";
drop sequence if exists "public"."STRESS_INTERVAL_10_DAY_TO_MINUTE_SEQ";

create sequence "public"."STRESS_INTERVAL_10_DAY_TO_MINUTE_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_10_DAY_TO_MINUTE" (  "id" integer not null ,"description" varchar(100) ,"interval day to minute" interval day to minute);
alter table "public"."STRESS_INTERVAL_10_DAY_TO_MINUTE"  add constraint "PK_STRESS_INTERVAL_10_DAY_TO_MINUTE"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_10_DAY_TO_MINUTE_NOARG" ()  returns interval day to minuteas $$  select '9 days 7 hours 6 minutes'::interval day to minute$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_10_DAY_TO_MINUTE" (someval IN interval day to minute)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_10_DAY_TO_MINUTE" values (  nextval('"public"."STRESS_INTERVAL_10_DAY_TO_MINUTE_SEQ"') ,'interval ''1 days 1 hours 1 minutes''' ,interval '1 days 1 hours 1 minutes');
insert into "public"."STRESS_INTERVAL_10_DAY_TO_MINUTE" values (  nextval('"public"."STRESS_INTERVAL_10_DAY_TO_MINUTE_SEQ"') ,'interval ''-1 days -1 hours -1 minutes''' ,interval '-1 days -1 hours -1 minutes');

-- STRESS_DOUBLE_PRECISION_ARR.table
drop table if exists "public"."STRESS_DOUBLE_PRECISION_ARR";
drop sequence if exists "public"."STRESS_DOUBLE_PRECISION_ARR_SEQ";

create sequence "public"."STRESS_DOUBLE_PRECISION_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_DOUBLE_PRECISION_ARR" (  "id" int ,"description" varchar(100) ,"double precision[]" double precision[]);
alter table "public"."STRESS_DOUBLE_PRECISION_ARR"  add constraint "PK_STRESS_DOUBLE_PRECISION_ARR"  primary key ("id");

insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'null' ,null);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[]::double precision[]' ,ARRAY[]::double precision[]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[null]::double precision[]' ,ARRAY[null]::double precision[]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[0]' ,ARRAY[0]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[1]' ,ARRAY[1]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[-1]' ,ARRAY[-1]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[127]' ,ARRAY[127]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[-127]' ,ARRAY[-127]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[123.456789101112]' ,ARRAY[123.456789101112]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[1e-307]' ,ARRAY[1e-307]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[-1.7976931348623157e+308]' ,ARRAY[-1.7976931348623157e+308]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[1e+308]' ,ARRAY[1e+308]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[1.7976931348623157e+308]' ,ARRAY[1.7976931348623157e+308]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[2.2250738585072014E-308]' ,ARRAY[2.2250738585072014E-308]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[-2.2250738585072014E-308]' ,ARRAY[-2.2250738585072014E-308]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[''Infinity''::double precision]' ,ARRAY['Infinity'::double precision]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[''-Infinity''::double precision]' ,ARRAY['-Infinity'::double precision]);
insert into "public"."STRESS_DOUBLE_PRECISION_ARR" values (nextval('"public"."STRESS_DOUBLE_PRECISION_ARR_SEQ"') ,'ARRAY[''NaN''::double precision]' ,ARRAY['Nan'::double precision]);

-- STRESS_INTERVAL_04_DAY.table
drop table if exists "public"."STRESS_INTERVAL_04_DAY";
drop sequence if exists "public"."STRESS_INTERVAL_04_DAY_SEQ";

create sequence "public"."STRESS_INTERVAL_04_DAY_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_04_DAY" (  "id" integer not null ,"description" varchar(100) ,"interval day" interval day);
alter table "public"."STRESS_INTERVAL_04_DAY"  add constraint "PK_STRESS_INTERVAL_04_DAY"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_04_DAY_NOARG" ()  returns interval dayas $$  select '10 days'::interval day$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_04_DAY" (someval IN interval day)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_04_DAY" values (  nextval('"public"."STRESS_INTERVAL_04_DAY_SEQ"') ,'interval ''1 days''' ,interval '1 days');
insert into "public"."STRESS_INTERVAL_04_DAY" values (  nextval('"public"."STRESS_INTERVAL_04_DAY_SEQ"') ,'interval ''-1 days''' ,interval '-1 days');

-- STRESS_BIT_ARR.table
drop table if exists "public"."STRESS_BIT_ARR";
drop sequence if exists "public"."STRESS_BIT_ARR_SEQ";

create sequence "public"."STRESS_BIT_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_BIT_ARR" (  "id" int ,"description" varchar(100) ,"bit[]" bit[] ,"bit(1)[]" bit(1)[] ,"bit(2)[]" bit(2)[] ,"bit(3)[]" bit(3)[] ,"bit(4)[]" bit(4)[] ,"bit(5)[]" bit(5)[] ,"bit(6)[]" bit(6)[] ,"bit(7)[]" bit(7)[] ,"bit(8)[]" bit(8)[] ,"bit(9)[]" bit(9)[] ,"bit(10)[]" bit(10)[] ,"bit(11)[]" bit(11)[] ,"bit(12)[]" bit(12)[] ,"bit(13)[]" bit(13)[] ,"bit(14)[]" bit(14)[] ,"bit(15)[]" bit(15)[] ,"bit(16)[]" bit(16)[] ,"bit(17)[]" bit(17)[] ,"bit(18)[]" bit(18)[] ,"bit(19)[]" bit(19)[] ,"bit(20)[]" bit(20)[] ,"bit(21)[]" bit(21)[] ,"bit(22)[]" bit(22)[] ,"bit(23)[]" bit(23)[] ,"bit(24)[]" bit(24)[] ,"bit(25)[]" bit(25)[] ,"bit(26)[]" bit(26)[] ,"bit(27)[]" bit(27)[] ,"bit(28)[]" bit(28)[] ,"bit(29)[]" bit(29)[] ,"bit(30)[]" bit(30)[] ,"bit(31)[]" bit(31)[] ,"bit(32)[]" bit(32)[] ,"bit(33)[]" bit(33)[] ,"bit(34)[]" bit(34)[] ,"bit(35)[]" bit(35)[] ,"bit(36)[]" bit(36)[] ,"bit(37)[]" bit(37)[] ,"bit(38)[]" bit(38)[] ,"bit(39)[]" bit(39)[] ,"bit(40)[]" bit(40)[] ,"bit(41)[]" bit(41)[] ,"bit(42)[]" bit(42)[] ,"bit(43)[]" bit(43)[] ,"bit(44)[]" bit(44)[] ,"bit(45)[]" bit(45)[] ,"bit(46)[]" bit(46)[] ,"bit(47)[]" bit(47)[] ,"bit(48)[]" bit(48)[] ,"bit(49)[]" bit(49)[] ,"bit(50)[]" bit(50)[] ,"bit(51)[]" bit(51)[] ,"bit(52)[]" bit(52)[] ,"bit(53)[]" bit(53)[] ,"bit(54)[]" bit(54)[] ,"bit(55)[]" bit(55)[] ,"bit(56)[]" bit(56)[] ,"bit(57)[]" bit(57)[] ,"bit(58)[]" bit(58)[] ,"bit(59)[]" bit(59)[] ,"bit(60)[]" bit(60)[] ,"bit(61)[]" bit(61)[] ,"bit(62)[]" bit(62)[] ,"bit(63)[]" bit(63)[] ,"bit(64)[]" bit(64)[] ,"bit(1000)[]" bit(1000)[]);
alter table "public"."STRESS_BIT_ARR"  add constraint "PK_STRESS_BIT_ARR"  primary key ("id");

insert into "public"."STRESS_BIT_ARR" values (nextval('"public"."STRESS_BIT_ARR_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_BIT_ARR" values (nextval('"public"."STRESS_BIT_ARR_SEQ"') ,'ARRAY[]::bit[]' ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[] ,ARRAY[]::bit[]);
insert into "public"."STRESS_BIT_ARR" values (nextval('"public"."STRESS_BIT_ARR_SEQ"') ,'ARRAY[null]::bit[]' ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[] ,ARRAY[null]::bit[]);
insert into "public"."STRESS_BIT_ARR" values (nextval('"public"."STRESS_BIT_ARR_SEQ"') ,'ARRAY[all ones]' ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'11'] ,ARRAY[b'111'] ,ARRAY[b'1111'] ,ARRAY[b'11111'] ,ARRAY[b'111111'] ,ARRAY[b'1111111'] ,ARRAY[b'11111111'] ,ARRAY[b'111111111'] ,ARRAY[b'1111111111'] ,ARRAY[b'11111111111'] ,ARRAY[b'111111111111'] ,ARRAY[b'1111111111111'] ,ARRAY[b'11111111111111'] ,ARRAY[b'111111111111111'] ,ARRAY[b'1111111111111111'] ,ARRAY[b'11111111111111111'] ,ARRAY[b'111111111111111111'] ,ARRAY[b'1111111111111111111'] ,ARRAY[b'11111111111111111111'] ,ARRAY[b'111111111111111111111'] ,ARRAY[b'1111111111111111111111'] ,ARRAY[b'11111111111111111111111'] ,ARRAY[b'111111111111111111111111'] ,ARRAY[b'1111111111111111111111111'] ,ARRAY[b'11111111111111111111111111'] ,ARRAY[b'111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111111111111111'] ,ARRAY[bbit(1000)]);
insert into "public"."STRESS_BIT_ARR" values (nextval('"public"."STRESS_BIT_ARR_SEQ"') ,'ARRAY[all zeroes]' ,ARRAY[b'0'] ,ARRAY[b'0'] ,ARRAY[b'00'] ,ARRAY[b'000'] ,ARRAY[b'0000'] ,ARRAY[b'00000'] ,ARRAY[b'000000'] ,ARRAY[b'0000000'] ,ARRAY[b'00000000'] ,ARRAY[b'000000000'] ,ARRAY[b'0000000000'] ,ARRAY[b'00000000000'] ,ARRAY[b'000000000000'] ,ARRAY[b'0000000000000'] ,ARRAY[b'00000000000000'] ,ARRAY[b'000000000000000'] ,ARRAY[b'0000000000000000'] ,ARRAY[b'00000000000000000'] ,ARRAY[b'000000000000000000'] ,ARRAY[b'0000000000000000000'] ,ARRAY[b'00000000000000000000'] ,ARRAY[b'000000000000000000000'] ,ARRAY[b'0000000000000000000000'] ,ARRAY[b'00000000000000000000000'] ,ARRAY[b'000000000000000000000000'] ,ARRAY[b'0000000000000000000000000'] ,ARRAY[b'00000000000000000000000000'] ,ARRAY[b'000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[bbit(1000)]);
insert into "public"."STRESS_BIT_ARR" values (nextval('"public"."STRESS_BIT_ARR_SEQ"') ,'ARRAY[one/off]' ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'10'] ,ARRAY[b'101'] ,ARRAY[b'1010'] ,ARRAY[b'10101'] ,ARRAY[b'101010'] ,ARRAY[b'1010101'] ,ARRAY[b'10101010'] ,ARRAY[b'101010101'] ,ARRAY[b'1010101010'] ,ARRAY[b'10101010101'] ,ARRAY[b'101010101010'] ,ARRAY[b'1010101010101'] ,ARRAY[b'10101010101010'] ,ARRAY[b'101010101010101'] ,ARRAY[b'1010101010101010'] ,ARRAY[b'10101010101010101'] ,ARRAY[b'101010101010101010'] ,ARRAY[b'1010101010101010101'] ,ARRAY[b'10101010101010101010'] ,ARRAY[b'101010101010101010101'] ,ARRAY[b'1010101010101010101010'] ,ARRAY[b'10101010101010101010101'] ,ARRAY[b'101010101010101010101010'] ,ARRAY[b'1010101010101010101010101'] ,ARRAY[b'10101010101010101010101010'] ,ARRAY[b'101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101010101010101010101010101'] ,ARRAY[bbit(1000)]);
insert into "public"."STRESS_BIT_ARR" values (nextval('"public"."STRESS_BIT_ARR_SEQ"') ,'ARRAY[high bit 1 only]' ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'10'] ,ARRAY[b'100'] ,ARRAY[b'1000'] ,ARRAY[b'10000'] ,ARRAY[b'100000'] ,ARRAY[b'1000000'] ,ARRAY[b'10000000'] ,ARRAY[b'100000000'] ,ARRAY[b'1000000000'] ,ARRAY[b'10000000000'] ,ARRAY[b'100000000000'] ,ARRAY[b'1000000000000'] ,ARRAY[b'10000000000000'] ,ARRAY[b'100000000000000'] ,ARRAY[b'1000000000000000'] ,ARRAY[b'10000000000000000'] ,ARRAY[b'100000000000000000'] ,ARRAY[b'1000000000000000000'] ,ARRAY[b'10000000000000000000'] ,ARRAY[b'100000000000000000000'] ,ARRAY[b'1000000000000000000000'] ,ARRAY[b'10000000000000000000000'] ,ARRAY[b'100000000000000000000000'] ,ARRAY[b'1000000000000000000000000'] ,ARRAY[b'10000000000000000000000000'] ,ARRAY[b'100000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000000000000000000'] ,ARRAY['1'::bit(1000)]);

-- STRESS_INTERVAL_09_DAY_TO_HOUR.table
drop table if exists "public"."STRESS_INTERVAL_09_DAY_TO_HOUR";
drop sequence if exists "public"."STRESS_INTERVAL_09_DAY_TO_HOUR_SEQ";

create sequence "public"."STRESS_INTERVAL_09_DAY_TO_HOUR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_09_DAY_TO_HOUR" (  "id" integer not null ,"description" varchar(100) ,"interval day to hour" interval day to hour);
alter table "public"."STRESS_INTERVAL_09_DAY_TO_HOUR"  add constraint "PK_STRESS_INTERVAL_09_DAY_TO_HOUR"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_09_DAY_TO_HOUR_NOARG" ()  returns interval day to houras $$  select '9 days 5 hours'::interval day to hour$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_09_DAY_TO_HOUR" (someval IN interval day to hour)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_09_DAY_TO_HOUR" values (  nextval('"public"."STRESS_INTERVAL_09_DAY_TO_HOUR_SEQ"') ,'interval ''1 days 1 hours 1''' ,interval '1 days 1 hours 1');
insert into "public"."STRESS_INTERVAL_09_DAY_TO_HOUR" values (  nextval('"public"."STRESS_INTERVAL_09_DAY_TO_HOUR_SEQ"') ,'interval ''-1 days -1 hours''' ,interval '-1 days -1 hours');

-- STRESS_TIME.table
drop table if exists "public"."STRESS_TIME";
drop sequence if exists "public"."STRESS_TIME_SEQ";

create sequence "public"."STRESS_TIME_SEQ" increment by 1 start with 1;
create table "public"."STRESS_TIME" (  "id" integer not null ,"description" varchar(100) ,"time" time ,"time(0)" time(0) ,"time(1)" time(1) ,"time(2)" time(2) ,"time(3)" time(3) ,"time(4)" time(4) ,"time(5)" time(5) ,"time(6)" time(6));
alter table "public"."STRESS_TIME"  add constraint "PK_STRESS_TIME"  primary key ("id");
-- create function "public"."STRESS_FN_TIME(5)_NOARG" ()  returns time(5)as $$  select '11:59:59.123456'::time(5)$$ language sql;
-- create function "public"."STRESS_PROC_TIME(5)" (someval IN time(5))returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'current_time(6)' ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6));
insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'current_time or current_time(n)' ,current_time ,current_time(0) ,current_time(1) ,current_time(2) ,current_time(3) ,current_time(4) ,current_time(5) ,current_time(6));
insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'time ''allballs''' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs');
insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'''allballs''' ,'allballs' ,'allballs' ,'allballs' ,'allballs' ,'allballs' ,'allballs' ,'allballs' ,'allballs');
insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'time ''now''' ,time 'now' ,time 'now' ,time 'now' ,time 'now' ,time 'now' ,time 'now' ,time 'now' ,time 'now');
insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'''now''' ,'now' ,'now' ,'now' ,'now' ,'now' ,'now' ,'now' ,'now');
insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'''00:00:00''' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00');
insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'''11:59:59.999999''' ,'11:59:59.999999' ,'11:59:59.999999' ,'11:59:59.999999' ,'11:59:59.999999' ,'11:59:59.999999' ,'11:59:59.999999' ,'11:59:59.999999' ,'11:59:59.999999');
insert into "public"."STRESS_TIME" values (nextval('"public"."STRESS_TIME_SEQ"') ,'''24:00:00''' ,'24:00:00' ,'24:00:00' ,'24:00:00' ,'24:00:00' ,'24:00:00' ,'24:00:00' ,'24:00:00' ,'24:00:00');

-- STRESS_INTERVAL_06_MINUTE.table
drop table if exists "public"."STRESS_INTERVAL_06_MINUTE";
drop sequence if exists "public"."STRESS_INTERVAL_06_MINUTE_SEQ";

create sequence "public"."STRESS_INTERVAL_06_MINUTE_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_06_MINUTE" (  "id" integer not null ,"description" varchar(100) ,"interval minute" interval minute);
alter table "public"."STRESS_INTERVAL_06_MINUTE"  add constraint "PK_STRESS_INTERVAL_06_MINUTE"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_06_MINUTE_YEAR_NOARG" ()  returns interval minuteas $$  select '9 minutes'::interval minute$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_06_MINUTE" (someval IN interval minute)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_06_MINUTE" values (  nextval('"public"."STRESS_INTERVAL_06_MINUTE_SEQ"') ,'interval ''1 minutes''' ,interval '1 minutes');
insert into "public"."STRESS_INTERVAL_06_MINUTE" values (  nextval('"public"."STRESS_INTERVAL_06_MINUTE_SEQ"') ,'interval ''-1 minutes''' ,interval '-1 minutes');

-- STRESS_TIMESTAMP_WITH_TIME_ZONE.table
drop table if exists "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE";
drop sequence if exists "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ";

create sequence "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ" increment by 1 start with 1;
create table "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE" (  "id" integer not null ,"description" varchar(100) ,"timestamp with time zone" timestamp with time zone ,"timestamp(0) with time zone" timestamp(0) with time zone ,"timestamp(1) with time zone" timestamp(1) with time zone ,"timestamp(2) with time zone" timestamp(2) with time zone ,"timestamp(3) with time zone" timestamp(3) with time zone ,"timestamp(4) with time zone" timestamp(4) with time zone ,"timestamp(5) with time zone" timestamp(5) with time zone ,"timestamp(6) with time zone" timestamp(6) with time zone);
alter table "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE"  add constraint "PK_STRESS_TIMESTAMP_WITH_TIME_ZONE"  primary key ("id");
-- create function "public"."STRESS_FN_TIMESTAMP_WITH_TIME_ZONE_NOARG" ()  returns timestamp with time zoneas $$  select '1999-12-31 23:59:59.123456 -05:00'::timestamp with time zone$$ language sql;

insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ"') ,'current_timestamp or current_timestamp(n)' ,current_timestamp ,current_timestamp(0) ,current_timestamp(1) ,current_timestamp(2) ,current_timestamp(3) ,current_timestamp(4) ,current_timestamp(5) ,current_timestamp(6));
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456''' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456' ,TIMESTAMP '1999-12-31 23:59:59.123456');
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456 BC''' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC' ,TIMESTAMP '1999-12-31 23:59:59.123456 BC');
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456 -01:12''' ,TIMESTAMP '1999-12-31 23:59:59.123456 -01:12' ,TIMESTAMP '1999-12-31 23:59:59.123456 -01:12' ,TIMESTAMP '1999-12-31 23:59:59.123456 -01:12' ,TIMESTAMP '1999-12-31 23:59:59.123456 -01:12' ,TIMESTAMP '1999-12-31 23:59:59.123456 -01:12' ,TIMESTAMP '1999-12-31 23:59:59.123456 -01:12' ,TIMESTAMP '1999-12-31 23:59:59.123456 -01:12' ,TIMESTAMP '1999-12-31 23:59:59.123456 -01:12');
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456 -00:01''' ,TIMESTAMP '1999-12-31 23:59:59.123456 -00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 -00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 -00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 -00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 -00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 -00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 -00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 -00:01');
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456 +00:01''' ,TIMESTAMP '1999-12-31 23:59:59.123456 +00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 +00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 +00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 +00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 +00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 +00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 +00:01' ,TIMESTAMP '1999-12-31 23:59:59.123456 +00:01');
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_SEQ"') ,'TIMESTAMP ''1999-12-31 23:59:59.123456 -05:00''' ,TIMESTAMP '1999-12-31 23:59:59.123456 -05:00' ,TIMESTAMP '1999-12-31 23:59:59.123456 -05:00' ,TIMESTAMP '1999-12-31 23:59:59.123456 -05:00' ,TIMESTAMP '1999-12-31 23:59:59.123456 -05:00' ,TIMESTAMP '1999-12-31 23:59:59.123456 -05:00' ,TIMESTAMP '1999-12-31 23:59:59.123456 -05:00' ,TIMESTAMP '1999-12-31 23:59:59.123456 -05:00' ,TIMESTAMP '1999-12-31 23:59:59.123456 -05:00');

-- STRESS_BIT_VARYING_ARR.table
drop sequence if exists "public"."STRESS_BIT_VARYING_ARR_SEQ";
drop table if exists "public"."STRESS_BIT_VARYING_ARR";

create sequence "public"."STRESS_BIT_VARYING_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_BIT_VARYING_ARR" (  "id" int ,"description" varchar(100) ,"bit varying[]" bit varying[] ,"bit varying(1)[]" bit varying(1)[] ,"bit varying(2)[]" bit varying(2)[] ,"bit varying(3)[]" bit varying(3)[] ,"bit varying(4)[]" bit varying(4)[] ,"bit varying(5)[]" bit varying(5)[] ,"bit varying(6)[]" bit varying(6)[] ,"bit varying(7)[]" bit varying(7)[] ,"bit varying(8)[]" bit varying(8)[] ,"bit varying(9)[]" bit varying(9)[] ,"bit varying(10)[]" bit varying(10)[] ,"bit varying(11)[]" bit varying(11)[] ,"bit varying(12)[]" bit varying(12)[] ,"bit varying(13)[]" bit varying(13)[] ,"bit varying(14)[]" bit varying(14)[] ,"bit varying(15)[]" bit varying(15)[] ,"bit varying(16)[]" bit varying(16)[] ,"bit varying(17)[]" bit varying(17)[] ,"bit varying(18)[]" bit varying(18)[] ,"bit varying(19)[]" bit varying(19)[] ,"bit varying(20)[]" bit varying(20)[] ,"bit varying(21)[]" bit varying(21)[] ,"bit varying(22)[]" bit varying(22)[] ,"bit varying(23)[]" bit varying(23)[] ,"bit varying(24)[]" bit varying(24)[] ,"bit varying(25)[]" bit varying(25)[] ,"bit varying(26)[]" bit varying(26)[] ,"bit varying(27)[]" bit varying(27)[] ,"bit varying(28)[]" bit varying(28)[] ,"bit varying(29)[]" bit varying(29)[] ,"bit varying(30)[]" bit varying(30)[] ,"bit varying(31)[]" bit varying(31)[] ,"bit varying(32)[]" bit varying(32)[] ,"bit varying(33)[]" bit varying(33)[] ,"bit varying(34)[]" bit varying(34)[] ,"bit varying(35)[]" bit varying(35)[] ,"bit varying(36)[]" bit varying(36)[] ,"bit varying(37)[]" bit varying(37)[] ,"bit varying(38)[]" bit varying(38)[] ,"bit varying(39)[]" bit varying(39)[] ,"bit varying(40)[]" bit varying(40)[] ,"bit varying(41)[]" bit varying(41)[] ,"bit varying(42)[]" bit varying(42)[] ,"bit varying(43)[]" bit varying(43)[] ,"bit varying(44)[]" bit varying(44)[] ,"bit varying(45)[]" bit varying(45)[] ,"bit varying(46)[]" bit varying(46)[] ,"bit varying(47)[]" bit varying(47)[] ,"bit varying(48)[]" bit varying(48)[] ,"bit varying(49)[]" bit varying(49)[] ,"bit varying(50)[]" bit varying(50)[] ,"bit varying(51)[]" bit varying(51)[] ,"bit varying(52)[]" bit varying(52)[] ,"bit varying(53)[]" bit varying(53)[] ,"bit varying(54)[]" bit varying(54)[] ,"bit varying(55)[]" bit varying(55)[] ,"bit varying(56)[]" bit varying(56)[] ,"bit varying(57)[]" bit varying(57)[] ,"bit varying(58)[]" bit varying(58)[] ,"bit varying(59)[]" bit varying(59)[] ,"bit varying(60)[]" bit varying(60)[] ,"bit varying(61)[]" bit varying(61)[] ,"bit varying(62)[]" bit varying(62)[] ,"bit varying(63)[]" bit varying(63)[] ,"bit varying(64)[]" bit varying(64)[] ,"bit varying(1000)[]" bit varying(1000)[]);
alter table "public"."STRESS_BIT_VARYING_ARR"  add constraint "PK_STRESS_BIT_VARYING_ARR"  primary key ("id");

insert into "public"."STRESS_BIT_VARYING_ARR" values (nextval('"public"."STRESS_BIT_VARYING_ARR_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_BIT_VARYING_ARR" values (nextval('"public"."STRESS_BIT_VARYING_ARR_SEQ"') ,'ARRAY[]::bit varying[]' ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[] ,ARRAY[]::bit varying[]);
insert into "public"."STRESS_BIT_VARYING_ARR" values (nextval('"public"."STRESS_BIT_VARYING_ARR_SEQ"') ,'ARRAY[null]::bit varying[]' ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[] ,ARRAY[null]::bit varying[]);
insert into "public"."STRESS_BIT_VARYING_ARR" values (nextval('"public"."STRESS_BIT_VARYING_ARR_SEQ"') ,'ARRAY[all ones]' ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'11'] ,ARRAY[b'111'] ,ARRAY[b'1111'] ,ARRAY[b'11111'] ,ARRAY[b'111111'] ,ARRAY[b'1111111'] ,ARRAY[b'11111111'] ,ARRAY[b'111111111'] ,ARRAY[b'1111111111'] ,ARRAY[b'11111111111'] ,ARRAY[b'111111111111'] ,ARRAY[b'1111111111111'] ,ARRAY[b'11111111111111'] ,ARRAY[b'111111111111111'] ,ARRAY[b'1111111111111111'] ,ARRAY[b'11111111111111111'] ,ARRAY[b'111111111111111111'] ,ARRAY[b'1111111111111111111'] ,ARRAY[b'11111111111111111111'] ,ARRAY[b'111111111111111111111'] ,ARRAY[b'1111111111111111111111'] ,ARRAY[b'11111111111111111111111'] ,ARRAY[b'111111111111111111111111'] ,ARRAY[b'1111111111111111111111111'] ,ARRAY[b'11111111111111111111111111'] ,ARRAY[b'111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'1111111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'11111111111111111111111111111111111111111111111111111111111111'] ,ARRAY[b'111111111111111111111111111111111111111111111111111111111111111'] ,ARRAY[bbit varying(1000)]);
insert into "public"."STRESS_BIT_VARYING_ARR" values (nextval('"public"."STRESS_BIT_VARYING_ARR_SEQ"') ,'all zeroes' ,ARRAY[b'000000000000000000000000000000000000000'] ,ARRAY[b'0'] ,ARRAY[b'00'] ,ARRAY[b'000'] ,ARRAY[b'0000'] ,ARRAY[b'00000'] ,ARRAY[b'000000'] ,ARRAY[b'0000000'] ,ARRAY[b'00000000'] ,ARRAY[b'000000000'] ,ARRAY[b'0000000000'] ,ARRAY[b'00000000000'] ,ARRAY[b'000000000000'] ,ARRAY[b'0000000000000'] ,ARRAY[b'00000000000000'] ,ARRAY[b'000000000000000'] ,ARRAY[b'0000000000000000'] ,ARRAY[b'00000000000000000'] ,ARRAY[b'000000000000000000'] ,ARRAY[b'0000000000000000000'] ,ARRAY[b'00000000000000000000'] ,ARRAY[b'000000000000000000000'] ,ARRAY[b'0000000000000000000000'] ,ARRAY[b'00000000000000000000000'] ,ARRAY[b'000000000000000000000000'] ,ARRAY[b'0000000000000000000000000'] ,ARRAY[b'00000000000000000000000000'] ,ARRAY[b'000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'0000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'00000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'000000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[bbit varying(1000)]);
insert into "public"."STRESS_BIT_VARYING_ARR" values (nextval('"public"."STRESS_BIT_VARYING_ARR_SEQ"') ,'one/off' ,ARRAY[b'101010101010101010101010101010101010101010101'] ,ARRAY[b'1'] ,ARRAY[b'10'] ,ARRAY[b'101'] ,ARRAY[b'1010'] ,ARRAY[b'10101'] ,ARRAY[b'101010'] ,ARRAY[b'1010101'] ,ARRAY[b'10101010'] ,ARRAY[b'101010101'] ,ARRAY[b'1010101010'] ,ARRAY[b'10101010101'] ,ARRAY[b'101010101010'] ,ARRAY[b'1010101010101'] ,ARRAY[b'10101010101010'] ,ARRAY[b'101010101010101'] ,ARRAY[b'1010101010101010'] ,ARRAY[b'10101010101010101'] ,ARRAY[b'101010101010101010'] ,ARRAY[b'1010101010101010101'] ,ARRAY[b'10101010101010101010'] ,ARRAY[b'101010101010101010101'] ,ARRAY[b'1010101010101010101010'] ,ARRAY[b'10101010101010101010101'] ,ARRAY[b'101010101010101010101010'] ,ARRAY[b'1010101010101010101010101'] ,ARRAY[b'10101010101010101010101010'] ,ARRAY[b'101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101010101010101010101'] ,ARRAY[b'1010101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'10101010101010101010101010101010101010101010101010101010101'] ,ARRAY[b'101010101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'1010101010101010101010101010101010101010101010101010101010101'] ,ARRAY[b'10101010101010101010101010101010101010101010101010101010101010'] ,ARRAY[b'101010101010101010101010101010101010101010101010101010101010101'] ,ARRAY[bbit varying(1000)]);
insert into "public"."STRESS_BIT_VARYING_ARR" values (nextval('"public"."STRESS_BIT_VARYING_ARR_SEQ"') ,'ARRAY[high bit 1 only]' ,ARRAY[b'10000000000000000000000000000000000000'] ,ARRAY[b'1'] ,ARRAY[b'10'] ,ARRAY[b'100'] ,ARRAY[b'1000'] ,ARRAY[b'10000'] ,ARRAY[b'100000'] ,ARRAY[b'1000000'] ,ARRAY[b'10000000'] ,ARRAY[b'100000000'] ,ARRAY[b'1000000000'] ,ARRAY[b'10000000000'] ,ARRAY[b'100000000000'] ,ARRAY[b'1000000000000'] ,ARRAY[b'10000000000000'] ,ARRAY[b'100000000000000'] ,ARRAY[b'1000000000000000'] ,ARRAY[b'10000000000000000'] ,ARRAY[b'100000000000000000'] ,ARRAY[b'1000000000000000000'] ,ARRAY[b'10000000000000000000'] ,ARRAY[b'100000000000000000000'] ,ARRAY[b'1000000000000000000000'] ,ARRAY[b'10000000000000000000000'] ,ARRAY[b'100000000000000000000000'] ,ARRAY[b'1000000000000000000000000'] ,ARRAY[b'10000000000000000000000000'] ,ARRAY[b'100000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'1000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'10000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[b'100000000000000000000000000000000000000000000000000000000000000'] ,ARRAY[bbit varying(1000)]);
insert into "public"."STRESS_BIT_VARYING_ARR" values (nextval('"public"."STRESS_BIT_VARYING_ARR_SEQ"') ,'ARRAY[length 1 bit 1 only]' ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY[b'1'] ,ARRAY['1'::bit varying(1)]);

-- STRESS_REAL.table
create sequence "public"."STRESS_REAL_SEQ" increment by 1 start with 1;
create table "public"."STRESS_REAL" (  "id" int ,"description" varchar(100) ,"real" real);
alter table "public"."STRESS_REAL"  add constraint "PK_STRESS_REAL"  primary key ("id");

insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'null' ,null);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'0' ,0);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'1' ,1);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'-1' ,-1);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'127' ,127);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'123.45678' ,123.45678);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'1e-37' ,1e-37);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'1.17549435E-38' ,1.17549435E-38);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'3.4028235e+38' ,3.4028235e+38);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'-3.4028235e+38' ,-3.4028235e+38);
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'Infinity' ,'Infinity');
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'-Infinity' ,'-Infinity');
insert into "public"."STRESS_REAL" values (nextval('"public"."STRESS_REAL_SEQ"') ,'NaN' ,'Nan');

-- STRESS_TIME_ARR.table
drop table if exists "public"."STRESS_TIME_ARR";
drop sequence if exists "public"."STRESS_TIME_ARR_SEQ";

create sequence "public"."STRESS_TIME_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_TIME_ARR" (  "id" integer not null ,"description" varchar(100) ,"time[]" time[] ,"time(0)[]" time(0)[] ,"time(1)[]" time(1)[] ,"time(2)[]" time(2)[] ,"time(3)[]" time(3)[] ,"time(4)[]" time(4)[] ,"time(5)[]" time(5)[] ,"time(6)[]" time(6)[]);
alter table "public"."STRESS_TIME_ARR"  add constraint "PK_STRESS_TIME_ARR"  primary key ("id");
-- create function "public"."STRESS_FN_TIME(5)[]_NOARG" ()  returns time(5)[]as $$  select ARRAY['11:59:59.123456'::time(5)]$$ language sql;
-- create function "public"."STRESS_PROC_TIME(5)[]" (someval IN time(5)[])returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[]::time(n)[]' ,ARRAY[]::time[] ,ARRAY[]::time(0)[] ,ARRAY[]::time(1)[] ,ARRAY[]::time(2)[] ,ARRAY[]::time(3)[] ,ARRAY[]::time(4)[] ,ARRAY[]::time(5)[] ,ARRAY[]::time(6)[]);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[current_time(6)]' ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)]);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[current_time or current_time(n)]' ,ARRAY[current_time] ,ARRAY[current_time(0)] ,ARRAY[current_time(1)] ,ARRAY[current_time(2)] ,ARRAY[current_time(3)] ,ARRAY[current_time(4)] ,ARRAY[current_time(5)] ,ARRAY[current_time(6)]);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[time ''allballs'']' ,ARRAY[time 'allballs'] ,ARRAY[time 'allballs'] ,ARRAY[time 'allballs'] ,ARRAY[time 'allballs'] ,ARRAY[time 'allballs'] ,ARRAY[time 'allballs'] ,ARRAY[time 'allballs'] ,ARRAY[time 'allballs']);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[''allballs''::time(n)]' ,ARRAY['allballs'::time] ,ARRAY['allballs'::time(0)] ,ARRAY['allballs'::time(1)] ,ARRAY['allballs'::time(2)] ,ARRAY['allballs'::time(3)] ,ARRAY['allballs'::time(4)] ,ARRAY['allballs'::time(5)] ,ARRAY['allballs'::time(6)]);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[time ''now'']' ,ARRAY[time 'now'] ,ARRAY[time 'now'] ,ARRAY[time 'now'] ,ARRAY[time 'now'] ,ARRAY[time 'now'] ,ARRAY[time 'now'] ,ARRAY[time 'now'] ,ARRAY[time 'now']);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[''now''::time(n)]' ,ARRAY['now'::time] ,ARRAY['now'::time(0)] ,ARRAY['now'::time(0)] ,ARRAY['now'::time(0)] ,ARRAY['now'::time(0)] ,ARRAY['now'::time(0)] ,ARRAY['now'::time(0)] ,ARRAY['now'::time(0)]);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[''00:00:00'']::time(n)' ,ARRAY['00:00:00'::time] ,ARRAY['00:00:00'::time(0)] ,ARRAY['00:00:00'::time(1)] ,ARRAY['00:00:00'::time(2)] ,ARRAY['00:00:00'::time(3)] ,ARRAY['00:00:00'::time(4)] ,ARRAY['00:00:00'::time(5)] ,ARRAY['00:00:00'::time(6)]);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[''11:59:59.999999''::time(n)]' ,ARRAY['11:59:59.999999'::time] ,ARRAY['11:59:59.999999'::time(0)] ,ARRAY['11:59:59.999999'::time(1)] ,ARRAY['11:59:59.999999'::time(2)] ,ARRAY['11:59:59.999999'::time(3)] ,ARRAY['11:59:59.999999'::time(4)] ,ARRAY['11:59:59.999999'::time(5)] ,ARRAY['11:59:59.999999'::time(6)]);
insert into "public"."STRESS_TIME_ARR" values (nextval('"public"."STRESS_TIME_ARR_SEQ"') ,'ARRAY[''24:00:00''::time(n)]' ,ARRAY['24:00:00'::time] ,ARRAY['24:00:00'::time(0)] ,ARRAY['24:00:00'::time(1)] ,ARRAY['24:00:00'::time(2)] ,ARRAY['24:00:00'::time(3)] ,ARRAY['24:00:00'::time(4)] ,ARRAY['24:00:00'::time(5)] ,ARRAY['24:00:00'::time(6)]);

-- STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR.table
drop table if exists "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR";
drop sequence if exists "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ";

create sequence "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" (  "id" integer not null ,"description" varchar(100) ,"timestamp with time zone[]" timestamp with time zone[] ,"timestamp(0) with time zone[]" timestamp(0) with time zone[] ,"timestamp(1) with time zone[]" timestamp(1) with time zone[] ,"timestamp(2) with time zone[]" timestamp(2) with time zone[] ,"timestamp(3) with time zone[]" timestamp(3) with time zone[] ,"timestamp(4) with time zone[]" timestamp(4) with time zone[] ,"timestamp(5) with time zone[]" timestamp(5) with time zone[] ,"timestamp(6) with time zone[]" timestamp(6) with time zone[]);
alter table "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR"  add constraint "PK_STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR"  primary key ("id");
-- create function "public"."STRESS_FN_TIMESTAMP_WITH_TIME_ZONE[]_NOARG" ()  returns timestamp with time zone[]as $$  select ARRAY['1999-12-31 23:59:59.123456 -05:00'::timestamp with time zone]$$ language sql;

insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[]::timestamp with time zone[]' ,ARRAY[]::timestamp with time zone[] ,ARRAY[]::timestamp with time zone[] ,ARRAY[]::timestamp with time zone[] ,ARRAY[]::timestamp with time zone[] ,ARRAY[]::timestamp with time zone[] ,ARRAY[]::timestamp with time zone[] ,ARRAY[]::timestamp with time zone[] ,ARRAY[]::timestamp with time zone[]);
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[current_timestamp or current_timestamp(n)]' ,ARRAY[current_timestamp] ,ARRAY[current_timestamp(0)] ,ARRAY[current_timestamp(1)] ,ARRAY[current_timestamp(2)] ,ARRAY[current_timestamp(3)] ,ARRAY[current_timestamp(4)] ,ARRAY[current_timestamp(5)] ,ARRAY[current_timestamp(6)]);
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456']);
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456 BC'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 BC']);
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456 -01:12'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -01:12'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -01:12'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -01:12'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -01:12'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -01:12'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -01:12'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -01:12'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -01:12']);
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456 -00:01'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -00:01']);
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456 +00:01'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 +00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 +00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 +00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 +00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 +00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 +00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 +00:01'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 +00:01']);
insert into "public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIMESTAMP_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[TIMESTAMP ''1999-12-31 23:59:59.123456 -05:00'']' ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -05:00'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -05:00'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -05:00'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -05:00'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -05:00'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -05:00'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -05:00'] ,ARRAY[TIMESTAMP '1999-12-31 23:59:59.123456 -05:00']);

-- STRESS_INTEGER.table
drop table if exists "public"."STRESS_INTEGER";
drop sequence if exists "public"."STRESS_INTEGER_SEQ";

create sequence "public"."STRESS_INTEGER_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTEGER" (  "id" int ,"description" varchar(100) ,"integer" integer);
alter table "public"."STRESS_INTEGER"  add constraint "public"."PK_STRESS_INTEGER"  primary key ("id");

insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'null' ,null);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'0' ,0);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'1' ,1);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'-1' ,-1);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'127' ,127);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'-127' ,-127);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'32767' ,32767);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'-32767' ,-32767);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'-65534' ,-65534);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'65534' ,65534);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'8388607' ,8388607);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'-8388607' ,-8388607);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'2147483647' ,2147483647);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'-2147483647' ,-2147483647);
insert into "public"."STRESS_INTEGER" values (nextval('"public"."STRESS_INTEGER_SEQ"') ,'-2147483648' ,-2147483648);

-- STRESS_TIME_WITH_TIME_ZONE.table
drop table if exists "public"."STRESS_TIME_WITH_TIME_ZONE";
drop sequence if exists "public"."STRESS_TIME_WITH_TIME_ZONE_SEQ";

create sequence "public"."STRESS_TIME_WITH_TIME_ZONE_SEQ" increment by 1 start with 1;
create table "public"."STRESS_TIME_WITH_TIME_ZONE" (  id integer not null ,description varchar(100) ,"time with time zone" time with time zone ,"time(0) with time zone" time(0) with time zone ,"time(1) with time zone" time(1) with time zone ,"time(2) with time zone" time(2) with time zone ,"time(3) with time zone" time(3) with time zone ,"time(4) with time zone" time(4) with time zone ,"time(5) with time zone" time(5) with time zone ,"time(6) with time zone" time(6) with time zone);
alter table "public"."STRESS_TIME_WITH_TIME_ZONE"  add constraint "PK_STRESS_STRESS_TIME_WITH_TIME_ZONE"  primary key (id);
-- create function "public"."STRESS_FN_TIME(5)_WITH_TIME_ZONE_NOARG" ()  returns time(5) with time zoneas $$  select '11:59:59.123456-04:30'::time(5) with time zone$$ language sql;
-- create function "public"."STRESS_PROC_TIME(5)_WITH_TIME_ZONE" (  someval IN time(5) with time zone)  returns voidas $$  begin  end;$$ language plpgsql;

insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'current_time(6)' ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6) ,current_time(6));
insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'current_time or current_time(n)' ,current_time ,current_time(0) ,current_time(1) ,current_time(2) ,current_time(3) ,current_time(4) ,current_time(5) ,current_time(6));
insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'time ''allballs''' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs' ,time 'allballs');
insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'''allballs''' ,'allballs' ,'allballs' ,'allballs' ,'allballs' ,'allballs' ,'allballs' ,'allballs' ,'allballs');
insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'time ''now''' ,time 'now' ,time 'now' ,time 'now' ,time 'now' ,time 'now' ,time 'now' ,time 'now' ,time 'now');
insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'''now''' ,'now' ,'now' ,'now' ,'now' ,'now' ,'now' ,'now' ,'now');
insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'''00:00:00''' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00' ,'00:00:00');
insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'''11:59:59.999999+14:59''' ,'11:59:59.999999+14:59' ,'11:59:59.999999+14:59' ,'11:59:59.999999+14:59' ,'11:59:59.999999+14:59' ,'11:59:59.999999+14:59' ,'11:59:59.999999+14:59' ,'11:59:59.999999+14:59' ,'11:59:59.999999+14:59');
insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'''24:00:00+14:59''' ,'24:00:00+14:59' ,'24:00:00+14:59' ,'24:00:00+14:59' ,'24:00:00+14:59' ,'24:00:00+14:59' ,'24:00:00+14:59' ,'24:00:00+14:59' ,'24:00:00+14:59');
insert into "public"."STRESS_TIME_WITH_TIME_ZONE" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_SEQ"') ,'''24:00:00-14:59''' ,'24:00:00-14:59' ,'24:00:00-14:59' ,'24:00:00-14:59' ,'24:00:00-14:59' ,'24:00:00-14:59' ,'24:00:00-14:59' ,'24:00:00-14:59' ,'24:00:00-14:59');

-- STRESS_UUID_ARR.table
drop table if exists "public"."STRESS_UUID_ARR";
drop sequence if exists "public"."STRESS_UUID_ARR_SEQ";

create sequence "public"."STRESS_UUID_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_UUID_ARR" (  "id" int ,"description" varchar(100) ,"uuid[]" uuid[]);
alter table "public"."STRESS_UUID_ARR"  add constraint "PK_STRESS_UUID_ARR"  primary key ("id");

insert into "public"."STRESS_UUID_ARR" values (nextval('"public"."STRESS_UUID_ARR_SEQ"') ,'ARRAY[''a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'']::uuid[]' ,ARRAY['a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11']::uuid[]);
insert into "public"."STRESS_UUID_ARR" values (nextval('"public"."STRESS_UUID_ARR_SEQ"') ,'uuid_generate_v4()' ,ARRAY[uuid_generate_v4()]);
insert into "public"."STRESS_UUID_ARR" values (nextval('"public"."STRESS_UUID_ARR_SEQ"') ,'null' ,null);
insert into "public"."STRESS_UUID_ARR" values (nextval('"public"."STRESS_UUID_ARR_SEQ"') ,'ARRAY[]::uuid[]' ,ARRAY[]::uuid[]);

-- ['To use uuid_generate_v4() generator function, we need to explicitly load the extension uuid-ossp ', '-- Phase Setup']
-- STRESS_XML.table
create sequence "public"."STRESS_XML_SEQ" increment by 1 start with 1;
create table "public"."STRESS_XML" (  id integer NOT NULL ,description text ,default_xml xml);
alter table "public"."STRESS_XML"  add constraint "PK_STRESS_XML"  primary key (id);

insert into "public"."STRESS_XML" values (nextval('"public"."STRESS_XML_SEQ"'),'<note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don''t forget me this weekend!</body></note>','<note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don''t forget me this weekend!</body></note>');
insert into "public"."STRESS_XML" values (nextval('"public"."STRESS_XML_SEQ"'),'<breakfast_menu><food><name>Belgian Waffles</name><price>$5.95</price><description>Two of our famous Belgian Waffles with plenty of real maple syrup</description><calories>650</calories></food><food><name>Strawberry Belgian Waffles</name><price>$7.95</price><description>Light Belgian waffles covered with strawberries and whipped cream</description><calories>900</calories></food><food><name>Berry-Berry Belgian Waffles</name><price>$8.95</price><description>Light Belgian waffles covered with an assortment of fresh berries and whipped cream</description><calories>900</calories></food><food><name>French Toast</name><price>$4.50</price><description>Thick slices made from our homemade sourdough bread</description><calories>600</calories></food><food><name>Homestyle Breakfast</name><price>$6.95</price><description>Two eggs, bacon or sausage, toast, and our ever-popular hash browns</description><calories>950</calories></food></breakfast_menu>','<breakfast_menu><food><name>Belgian Waffles</name><price>$5.95</price><description>Two of our famous Belgian Waffles with plenty of real maple syrup</description><calories>650</calories></food><food><name>Strawberry Belgian Waffles</name><price>$7.95</price><description>Light Belgian waffles covered with strawberries and whipped cream</description><calories>900</calories></food><food><name>Berry-Berry Belgian Waffles</name><price>$8.95</price><description>Light Belgian waffles covered with an assortment of fresh berries and whipped cream</description><calories>900</calories></food><food><name>French Toast</name><price>$4.50</price><description>Thick slices made from our homemade sourdough bread</description><calories>600</calories></food><food><name>Homestyle Breakfast</name><price>$6.95</price><description>Two eggs, bacon or sausage, toast, and our ever-popular hash browns</description><calories>950</calories></food></breakfast_menu>');
insert into "public"."STRESS_XML" values (nextval('"public"."STRESS_XML_SEQ"'),'<messages>  <note id="501">    <to>Tove</to>    <from>Jani</from>    <heading>Reminder</heading>    <body>Don''t forget me this weekend!</body>  </note>  <note id="502">    <to>Jani</to>    <from>Tove</from>    <heading>Re: Reminder</heading>    <body>I will not</body>  </note></messages>','<messages>  <note id="501">    <to>Tove</to>    <from>Jani</from>    <heading>Reminder</heading>    <body>Don''t forget me this weekend!</body>  </note>  <note id="502">    <to>Jani</to>    <from>Tove</from>    <heading>Re: Reminder</heading>    <body>I will not</body>  </note></messages>');

-- STRESS_array.table
drop sequence if exists "public"."STRESS_array_SEQ";
drop table if exists "public"."STRESS_array";

create sequence "public"."STRESS_array_SEQ" increment by 1 start with 1;
create table "public"."STRESS_array" (  "id" integer not null ,"description" varchar(100) ,"integer[]" integer[] ,"integer[3][]" integer[3][] ,"integer[3][3]" integer[3][3] ,"varchar(30)[]" varchar(30)[]);
alter table "public"."STRESS_array"  add constraint "PK_STRESS_array"  primary key ("id");

insert into "public"."STRESS_array" values (nextval('"public"."STRESS_array_SEQ"') ,'null' ,null ,null ,null ,null);
insert into "public"."STRESS_array" values (nextval('"public"."STRESS_array_SEQ"') ,'ARRAY[1, 2]' ,ARRAY[1, 2] ,ARRAY[1, 2] ,ARRAY[1, 2] ,null);
insert into "public"."STRESS_array" values (nextval('"public"."STRESS_array_SEQ"') ,'ARRAY[''abc'', ''def'']' ,null ,null ,null ,ARRAY['abc', 'def']);

-- STRESS_REAL_ARR.table
create sequence "public"."STRESS_REAL_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_REAL_ARR" (  "id" int ,"description" varchar(100) ,"real[]" real[]);
alter table "public"."STRESS_REAL_ARR"  add constraint "PK_STRESS_REAL_ARR"  primary key ("id");

insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'null' ,null);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[]::real[]' ,ARRAY[]::real[]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[null]::real[]' ,ARRAY[null]::real[]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[0]' ,ARRAY[0]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[1]' ,ARRAY[1]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[-1]' ,ARRAY[-1]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[127]' ,ARRAY[127]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[123.45678]' ,ARRAY[123.45678]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[1e-37]' ,ARRAY[1e-37]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'1.17549435E-38]' ,ARRAY[1.17549435E-38]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'3.4028235e+38]' ,ARRAY[3.4028235e+38]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[-3.4028235e+38]' ,ARRAY[-3.4028235e+38]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[''Infinity'']::real[]' ,ARRAY['Infinity']::real[]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[''-Infinity'']::real[]' ,ARRAY['-Infinity']::real[]);
insert into "public"."STRESS_REAL_ARR" values (nextval('"public"."STRESS_REAL_ARR_SEQ"') ,'ARRAY[''NaN'']::real[]' ,ARRAY['Nan']::real[]);

-- STRESS_BIGSERIAL.table
create sequence "public"."STRESS_BIGSERIAL_SEQ" increment by 1 start with 1000;
create sequence "public"."STRESS_BIGSERIAL_MANUAL1_SEQ" increment by 1 start with 8223372036854775;
create sequence "public"."STRESS_BIGSERIAL_MANUAL2_SEQ" increment by 1 start with 9223372036854775;
create table "public"."STRESS_BIGSERIAL" (  id int ,description varchar(100) ,bigserial_default bigserial ,bigserial_manual1 bigint NOT NULL DEFAULT nextval('"public"."STRESS_BIGSERIAL_MANUAL1_SEQ"') ,bigserial_manual2 bigint NOT NULL DEFAULT nextval('"public"."STRESS_BIGSERIAL_MANUAL2_SEQ"'));
alter table "public"."STRESS_BIGSERIAL"  add constraint "PK_STRESS_BIGSERIAL"  primary key (id);
alter sequence "public"."STRESS_BIGSERIAL_MANUAL1_SEQ"   OWNED BY "public"."STRESS_BIGSERIAL".bigserial_manual1;;

insert into "public"."STRESS_BIGSERIAL"(id,description) values ( nextval('"public"."STRESS_BIGSERIAL_SEQ"') ,'1,9223372036854775,9223372036854775');
insert into "public"."STRESS_BIGSERIAL"(id,description) values ( nextval('"public"."STRESS_BIGSERIAL_SEQ"') ,'2,9223372036854776,9223372036854776');

-- ['We have four columns in this stress  table', '1- The  id which is the key.', '2- The big serial type ( serial8) that will have an implicit sequence attached to it. ', '3- Big Integer column with default value from a sequence explicitly created. The sequence is owned by this table. ', '4- Big Integer column with default value from a sequence explicitly created. The sequence is NOT owned by this table. ', '-- Phase Create']
-- STRESS_TIME_WITH_TIME_ZONE_ARR.table
drop table if exists "public"."STRESS_TIME_WITH_TIME_ZONE_ARR";
drop sequence if exists "public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ";

create sequence "public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" (  id integer not null ,description varchar(100) ,"time with time zone[]" time with time zone[] ,"time(0) with time zone[]" time(0) with time zone[] ,"time(1) with time zone[]" time(1) with time zone[] ,"time(2) with time zone[]" time(2) with time zone[] ,"time(3) with time zone[]" time(3) with time zone[] ,"time(4) with time zone[]" time(4) with time zone[] ,"time(5) with time zone[]" time(5) with time zone[] ,"time(6) with time zone[]" time(6) with time zone[]);
alter table "public"."STRESS_TIME_WITH_TIME_ZONE_ARR"  add constraint "PK_STRESS_STRESS_TIME_WITH_TIME_ZONE_ARR"  primary key (id);
-- create function "public"."STRESS_FN_TIME(5)_WITH_TIME_ZONE[]_NOARG" ()  returns time(5) with time zone[]as $$  select ARRAY['11:59:59.123456-04:30'::time(5) with time zone]$$ language sql;
-- create function "public"."STRESS_PROC_TIME(5)_WITH_TIME_ZONE[]" (  someval IN time(5) with time zone[])  returns voidas $$  begin  end;$$ language plpgsql;

insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[current_time(6)]' ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)] ,ARRAY[current_time(6)]);
insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[current_time or current_time(n)]' ,ARRAY[current_time] ,ARRAY[current_time(0)] ,ARRAY[current_time(1)] ,ARRAY[current_time(2)] ,ARRAY[current_time(3)] ,ARRAY[current_time(4)] ,ARRAY[current_time(5)] ,ARRAY[current_time(6)]);
insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[time ''allballs''::time with time zone]' ,ARRAY[time 'allballs'::time with time zone] ,ARRAY[time 'allballs'::time with time zone] ,ARRAY[time 'allballs'::time with time zone] ,ARRAY[time 'allballs'::time with time zone] ,ARRAY[time 'allballs'::time with time zone] ,ARRAY[time 'allballs'::time with time zone] ,ARRAY[time 'allballs'::time with time zone] ,ARRAY[time 'allballs'::time with time zone]);
insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[''allballs''::time with time zone]' ,ARRAY['allballs'::time with time zone] ,ARRAY['allballs'::time with time zone] ,ARRAY['allballs'::time with time zone] ,ARRAY['allballs'::time with time zone] ,ARRAY['allballs'::time with time zone] ,ARRAY['allballs'::time with time zone] ,ARRAY['allballs'::time with time zone] ,ARRAY['allballs'::time with time zone]);
insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[time ''now''::time with time zone]' ,ARRAY[time 'now'::time with time zone] ,ARRAY[time 'now'::time with time zone] ,ARRAY[time 'now'::time with time zone] ,ARRAY[time 'now'::time with time zone] ,ARRAY[time 'now'::time with time zone] ,ARRAY[time 'now'::time with time zone] ,ARRAY[time 'now'::time with time zone] ,ARRAY[time 'now'::time with time zone]);
insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[''now''::time with time zone]' ,ARRAY['now'::time with time zone] ,ARRAY['now'::time with time zone] ,ARRAY['now'::time with time zone] ,ARRAY['now'::time with time zone] ,ARRAY['now'::time with time zone] ,ARRAY['now'::time with time zone] ,ARRAY['now'::time with time zone] ,ARRAY['now'::time with time zone]);
insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[''00:00:00''::time with time zone]' ,ARRAY['00:00:00'::time with time zone] ,ARRAY['00:00:00'::time with time zone] ,ARRAY['00:00:00'::time with time zone] ,ARRAY['00:00:00'::time with time zone] ,ARRAY['00:00:00'::time with time zone] ,ARRAY['00:00:00'::time with time zone] ,ARRAY['00:00:00'::time with time zone] ,ARRAY['00:00:00'::time with time zone]);
insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[''11:59:59.999999+14:59''::time with time zone]' ,ARRAY['11:59:59.999999+14:59'::time with time zone] ,ARRAY['11:59:59.999999+14:59'::time with time zone] ,ARRAY['11:59:59.999999+14:59'::time with time zone] ,ARRAY['11:59:59.999999+14:59'::time with time zone] ,ARRAY['11:59:59.999999+14:59'::time with time zone] ,ARRAY['11:59:59.999999+14:59'::time with time zone] ,ARRAY['11:59:59.999999+14:59'::time with time zone] ,ARRAY['11:59:59.999999+14:59'::time with time zone]);
insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[''24:00:00+14:59''::time with time zone]' ,ARRAY['24:00:00+14:59'::time with time zone] ,ARRAY['24:00:00+14:59'::time with time zone] ,ARRAY['24:00:00+14:59'::time with time zone] ,ARRAY['24:00:00+14:59'::time with time zone] ,ARRAY['24:00:00+14:59'::time with time zone] ,ARRAY['24:00:00+14:59'::time with time zone] ,ARRAY['24:00:00+14:59'::time with time zone] ,ARRAY['24:00:00+14:59'::time with time zone]);
insert into "public"."STRESS_TIME_WITH_TIME_ZONE_ARR" values (nextval('"public"."STRESS_TIME_WITH_TIME_ZONE_ARR_SEQ"') ,'ARRAY[''24:00:00-14:59''::time with time zone]' ,ARRAY['24:00:00-14:59'::time with time zone] ,ARRAY['24:00:00-14:59'::time with time zone] ,ARRAY['24:00:00-14:59'::time with time zone] ,ARRAY['24:00:00-14:59'::time with time zone] ,ARRAY['24:00:00-14:59'::time with time zone] ,ARRAY['24:00:00-14:59'::time with time zone] ,ARRAY['24:00:00-14:59'::time with time zone] ,ARRAY['24:00:00-14:59'::time with time zone]);

-- STRESS_CHAR_ARR.table
drop table if exists "public"."STRESS_CHAR_ARR";
drop sequence if exists "public"."STRESS_CHAR_ARR_SEQ";

create sequence "public"."STRESS_CHAR_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_CHAR_ARR" (  "id" integer not null ,"description" varchar(100) ,"char[]" char[] ,"character[]" character[] ,"char(1)[]" char(1)[] ,"character(1)[]" character(1)[] ,"char(2)[]" char(2)[] ,"char(2000)[]" char(2000)[] ,"character(500000)[]" character(500000)[]);
alter table "public"."STRESS_CHAR_ARR"  add constraint "PK_STRESS_CHAR_ARR"  primary key ("id");

insert into "public"."STRESS_CHAR_ARR" values (nextval('"public"."STRESS_CHAR_ARR_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_CHAR_ARR" values (nextval('"public"."STRESS_CHAR_ARR_SEQ"') ,'ARRAY[]::char[]' ,ARRAY[]::char[] ,ARRAY[]::char[] ,ARRAY[]::char[] ,ARRAY[]::char[] ,ARRAY[]::char[] ,ARRAY[]::char[] ,ARRAY[]::char[] ) / insert into "public"."STRESS_CHAR_ARR" values (nextval('"public"."STRESS_CHAR_ARR_SEQ"') ,'ARRAY[null]::char[]' ,ARRAY[null]::char[] ,ARRAY[null]::char[] ,ARRAY[null]::char[] ,ARRAY[null]::char[] ,ARRAY[null]::char[] ,ARRAY[null]::char[] ,ARRAY[null]::char[] ) /  insert into "public"."STRESS_CHAR_ARR" values (nextval('"public"."STRESS_CHAR_ARR_SEQ"') ,'ARRAY[''A''] of varying lengths' ,ARRAY['A'] ,ARRAY['A'] ,ARRAY['A'] ,ARRAY['A'] ,ARRAY['AA'] ,ARRAY[ '0000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '0100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '0200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '0300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '0400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '0500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '0600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '0700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '0800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '0900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '1000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '1100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '1200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '1300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '1400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '1600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '1700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '1800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'       || '1900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE']  ,null ) /
-- STRESS_INTERVAL_07_SECOND.table
drop table if exists "public"."STRESS_INTERVAL_07_SECOND";
drop sequence if exists "public"."STRESS_INTERVAL_07_SECOND_SEQ";

create sequence "public"."STRESS_INTERVAL_07_SECOND_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_07_SECOND" (  "id" integer not null ,"description" varchar(100) ,"interval second" interval second ,"interval second(0)" interval second(0) ,"interval second(1)" interval second(1) ,"interval second(2)" interval second(2) ,"interval second(3)" interval second(3) ,"interval second(4)" interval second(4) ,"interval second(5)" interval second(5) ,"interval second(6)" interval second(6));
alter table "public"."STRESS_INTERVAL_07_SECOND"  add constraint "PK_STRESS_INTERVAL_07_SECOND"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_07_SECOND_5_NOARG" ()  returns interval second(5)as $$  select '1.12345'::interval second(5)$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_07_SECOND_5" (someval IN interval second(5))returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_07_SECOND" values (  nextval('"public"."STRESS_INTERVAL_07_SECOND_SEQ"') ,'interval ''1.111111 seconds''' ,interval '1.111111 seconds' ,interval '1 seconds' ,interval '1.1 seconds' ,interval '1.11 seconds' ,interval '1.111 seconds' ,interval '1.1111 seconds' ,interval '1.11111 seconds' ,interval '1.111111 seconds');
insert into "public"."STRESS_INTERVAL_07_SECOND" values (  nextval('"public"."STRESS_INTERVAL_07_SECOND_SEQ"') ,'interval ''-1.111111 seconds''' ,interval '-1.111111 seconds' ,interval '-1 seconds' ,interval '-1.1 seconds' ,interval '-1.11 seconds' ,interval '-1.111 seconds' ,interval '-1.1111 seconds' ,interval '-1.11111 seconds' ,interval '-1.111111 seconds');

-- STRESS_INTERVAL_11_DAY_TO_SECOND.table
drop table if exists "public"."STRESS_INTERVAL_11_DAY_TO_SECOND";
drop sequence if exists "public"."STRESS_INTERVAL_11_DAY_TO_SECOND_SEQ";

create sequence "public"."STRESS_INTERVAL_11_DAY_TO_SECOND_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_11_DAY_TO_SECOND" (  "id" integer not null ,"description" varchar(100) ,"interval day to second" interval day to second ,"interval day to second(0)" interval day to second(0) ,"interval day to second(1)" interval day to second(1) ,"interval day to second(2)" interval day to second(2) ,"interval day to second(3)" interval day to second(3) ,"interval day to second(4)" interval day to second(4) ,"interval day to second(5)" interval day to second(5) ,"interval day to second(6)" interval day to second(6));
alter table "public"."STRESS_INTERVAL_11_DAY_TO_SECOND"  add constraint "PK_STRESS_INTERVAL_11_DAY_TO_SECOND"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_11_DAY_TO_SECOND_5_NOARG" ()  returns interval day to second(5)as $$  select '9 days 8 hours 7 minutes 6.12345 seconds'::interval day to second(5)$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_11_DAY_TO_SECOND_5" (someval IN interval day to second(5))returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_11_DAY_TO_SECOND" values (  nextval('"public"."STRESS_INTERVAL_11_DAY_TO_SECOND_SEQ"') ,'interval ''1 years 1 months 1 days 1 hours 1 minutes 1.111111 seconds''' ,interval '1 years 1 months 1 days 1 hours 1 minutes 1.111111 seconds' ,interval '1 years 1 months 1 days 1 hours 1 minutes 1 seconds' ,interval '1 years 1 months 1 days 1 hours 1 minutes 1.1 seconds' ,interval '1 years 1 months 1 days 1 hours 1 minutes 1.11 seconds' ,interval '1 years 1 months 1 days 1 hours 1 minutes 1.111 seconds' ,interval '1 years 1 months 1 days 1 hours 1 minutes 1.1111 seconds' ,interval '1 years 1 months 1 days 1 hours 1 minutes 1.11111 seconds' ,interval '1 years 1 months 1 days 1 hours 1 minutes 1.111111 seconds');
insert into "public"."STRESS_INTERVAL_11_DAY_TO_SECOND" values (  nextval('"public"."STRESS_INTERVAL_11_DAY_TO_SECOND_SEQ"') ,'interval ''-1 years -1 months -1 days -1 -hours -1 -minutes -1.111111 seconds''' ,interval '-1 years -1 months -1 days -1 hours -1 minutes -1.111111 seconds' ,interval '-1 years -1 months -1 days -1 hours -1 minutes -1 seconds' ,interval '-1 years -1 months -1 days -1 hours -1 minutes -1.1 seconds' ,interval '-1 years -1 months -1 days -1 hours -1 minutes -1.11 seconds' ,interval '-1 years -1 months -1 days -1 hours -1 minutes -1.111 seconds' ,interval '-1 years -1 months -1 days -1 hours -1 minutes -1.1111 seconds' ,interval '-1 years -1 months -1 days -1 hours -1 minutes -1.11111 seconds' ,interval '-1 years -1 months -1 days -1 hours -1 minutes -1.111111 seconds');

-- STRESS_BIGINT_ARR.table
drop sequence if exists "public"."STRESS_BIGINT_ARR_SEQ";
drop table if exists "public"."STRESS_BIGINT_ARR";

create sequence "public"."STRESS_BIGINT_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_BIGINT_ARR" (  "id" int ,"description" varchar(100) ,"bigint[]" bigint[]);
alter table "public"."STRESS_BIGINT_ARR"  add constraint "PK_STRESS_BIGINT_ARR"  primary key ("id");

insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'null' ,null);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[]::bigint[]' ,ARRAY[]::bigint[]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[null]::bigint[]' ,ARRAY[null]::bigint[]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[0]' ,ARRAY[0]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[1]' ,ARRAY[1]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[-1]' ,ARRAY[-1]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[127]' ,ARRAY[127]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[32767]' ,ARRAY[32767]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[32768]' ,ARRAY[32768]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[65534]' ,ARRAY[65534]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[65535]' ,ARRAY[65535]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[8388607]' ,ARRAY[8388607]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[-8388608]' ,ARRAY[-8388608]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[2147483647]' ,ARRAY[2147483647]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[-2147483648]' ,ARRAY[-2147483648]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[9223372036854775807]' ,ARRAY[9223372036854775807]);
insert into "public"."STRESS_BIGINT_ARR" values (nextval('"public"."STRESS_BIGINT_ARR_SEQ"') ,'ARRAY[-9223372036854775808]' ,ARRAY[-9223372036854775808]);

-- STRESS_FLOAT_ARR.table
drop function if exists "public"."STRESS_FN_FLOAT[]_NOARG"();

drop sequence if exists "public"."STRESS_FLOAT_ARR_SEQ";
drop table if exists "public"."STRESS_FLOAT_ARR";
create sequence "public"."STRESS_FLOAT_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_FLOAT_ARR" (  "id" integer not null ,"description" varchar(100) ,"float[]" float[] ,"float(1)[]" float(1)[] ,"float(2)[]" float(2)[] ,"float(3)[]" float(3)[] ,"float(4)[]" float(4)[] ,"float(5)[]" float(5)[] ,"float(6)[]" float(6)[] ,"float(7)[]" float(7)[] ,"float(8)[]" float(8)[] ,"float(9)[]" float(9)[] ,"float(10)[]" float(10)[] ,"float(11)[]" float(11)[] ,"float(12)[]" float(12)[] ,"float(13)[]" float(13)[] ,"float(14)[]" float(14)[] ,"float(15)[]" float(15)[] ,"float(16)[]" float(16)[] ,"float(17)[]" float(17)[] ,"float(18)[]" float(18)[] ,"float(19)[]" float(19)[] ,"float(20)[]" float(20)[] ,"float(21)[]" float(21)[] ,"float(22)[]" float(22)[] ,"float(23)[]" float(23)[] ,"float(24)[]" float(24)[] ,"float(25)[]" float(25)[] ,"float(26)[]" float(26)[] ,"float(27)[]" float(27)[] ,"float(28)[]" float(28)[] ,"float(29)[]" float(29)[] ,"float(30)[]" float(30)[] ,"float(31)[]" float(31)[] ,"float(32)[]" float(32)[] ,"float(33)[]" float(33)[] ,"float(34)[]" float(34)[] ,"float(35)[]" float(35)[] ,"float(36)[]" float(36)[] ,"float(37)[]" float(37)[] ,"float(38)[]" float(38)[] ,"float(39)[]" float(39)[] ,"float(40)[]" float(40)[] ,"float(41)[]" float(41)[] ,"float(42)[]" float(42)[] ,"float(43)[]" float(43)[] ,"float(44)[]" float(44)[] ,"float(45)[]" float(45)[] ,"float(46)[]" float(46)[] ,"float(47)[]" float(47)[] ,"float(48)[]" float(48)[] ,"float(49)[]" float(49)[] ,"float(50)[]" float(50)[] ,"float(51)[]" float(51)[] ,"float(52)[]" float(52)[] ,"float(53)[]" float(53)[]);
alter table "public"."STRESS_FLOAT_ARR"  add constraint "PK_STRESS_FLOAT_ARR"  primary key ("id");

insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'ARRAY[]::float[]' ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[] ,ARRAY[]::float[]);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'ARRAY[null]::float[]' ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[] ,ARRAY[null]::float[]);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,ARRAY['1'] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1] ,ARRAY[1]);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'ARRAY[1.1]' ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1] ,ARRAY[1.1]);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'ARRAY[''10.1''::float]' ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float] ,ARRAY['10.1'::float]);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'ARRAY[''.001''::float]' ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float] ,ARRAY['.001'::float]);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'ARRAY[''123.45678''::float]' ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float] ,ARRAY['123.45678'::float]);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'ARRAY[''NaN''::float]' ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float] ,ARRAY['NaN'::float]);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'ARRAY[''Infinity''::float]' ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float] ,ARRAY['Infinity'::float]);
insert into "public"."STRESS_FLOAT_ARR" values (nextval('"public"."STRESS_FLOAT_ARR_SEQ"') ,'ARRAY[''-Infinity''::float]' ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float] ,ARRAY['-Infinity'::float]);

-- STRESS_ENUM.table
drop table if exists "public"."STRESS_ENUM";
drop sequence if exists "public"."STRESS_ENUM_SEQ";
drop type if exists "public"."t-shirt size";

create sequence "public"."STRESS_ENUM_SEQ" increment by 1 start with 1;
create type "public"."t-shirt size" AS enum ('x-small', 'small', 'medium', 'large', 'x-large');
create table "public"."STRESS_ENUM" (  "id" int ,"description" varchar(100) ,"t-shirt size" "public"."t-shirt size");
alter table "public"."STRESS_ENUM"  add constraint "PK_STRESS_ENUM"  primary key ("id");

insert into "public"."STRESS_ENUM" values (nextval('"public"."STRESS_ENUM_SEQ"'), 'null', null);
insert into "public"."STRESS_ENUM" values (nextval('"public"."STRESS_ENUM_SEQ"'), '''x-small''', 'x-small');
insert into "public"."STRESS_ENUM" values (nextval('"public"."STRESS_ENUM_SEQ"'), '''small''', 'small');
insert into "public"."STRESS_ENUM" values (nextval('"public"."STRESS_ENUM_SEQ"'), '''medium''', 'medium');
insert into "public"."STRESS_ENUM" values (nextval('"public"."STRESS_ENUM_SEQ"'), '''large''', 'large');
insert into "public"."STRESS_ENUM" values (nextval('"public"."STRESS_ENUM_SEQ"'), '''x-large''', 'x-large');

-- STRESS_network_address.table
create sequence "public"."STRESS_network_address_SEQ" increment by 1 start with 1;
create table "public"."STRESS_network_address" (  "id" int ,"description" varchar(100) ,"inet" inet ,"cidr" cidr ,"macaddr" macaddr ,"macaddr8" macaddr8)WITH OIDS;
alter table "public"."STRESS_network_address"  add constraint "PK_STRESS_network_address"  primary key ("id");

insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'null' ,null ,null ,null ,null);
insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'''192.168.100.128/25''' ,'192.168.100.128/25' ,'192.168.100.128/25' ,null ,null);
insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'''128''' ,null ,'128' ,null ,null);
insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'''2001:4f8:3:ba::/64''' ,'2001:4f8:3:ba::/64' ,'2001:4f8:3:ba::/64' ,null ,null);
insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'''2001:4f8:3:ba:2e0:81ff:fe22:d1f1/128''' ,'2001:4f8:3:ba:2e0:81ff:fe22:d1f1/128' ,'2001:4f8:3:ba:2e0:81ff:fe22:d1f1/128' ,null ,null);
insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'''::ffff:1.2.3.0/128''' ,'::ffff:1.2.3.0/128' ,'::ffff:1.2.3.0/128' ,null ,null);
insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'''08:00:2b:01:02:03''' ,null ,null ,'08:00:2b:01:02:03' ,'08:00:2b:01:02:03');
insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'''0800.2b01.0203''' ,null ,null ,'0800.2b01.0203' ,'0800.2b01.0203');
insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'''08002b0102030405''' ,null ,null ,null ,'08002b0102030405');
insert into "public"."STRESS_network_address" values (nextval('"public"."STRESS_network_address_SEQ"') ,'''08:00:2b:01:02:03:04:05''' ,null ,null ,null ,'08:00:2b:01:02:03:04:05');

-- ['demonstrate each of the various inet/cidr/macaddr/macaddr8 columns', '-- Phase Create']
-- STRESS_TEXT.table
create sequence "public"."STRESS_TEXT_SEQ" increment by 1 start with 1;
create table "public"."STRESS_TEXT" (  "id" integer not null ,"description" varchar(100) ,"text" text);
alter table "public"."STRESS_TEXT"  add constraint "PK_STRESS_TEXT"  primary key ("id");
-- create function "public"."STRESS_FN_TEXT_NOARG" ()  returns textas $$  select 'abcdef'::text$$ language sql;
-- create function "public"."STRESS_PROC_TEXT" (someval IN text)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_TEXT" values (nextval('"public"."STRESS_TEXT_SEQ"'), 'null', null);
insert into "public"."STRESS_TEXT" values (nextval('"public"."STRESS_TEXT_SEQ"'), '''Some Text''', 'Some Text');
insert into "public"."STRESS_TEXT" values (nextval('"public"."STRESS_TEXT_SEQ"'), '''''::bytea', ''::bytea);

-- STRESS_INTERVAL_02_YEAR.table
drop table if exists "public"."STRESS_INTERVAL_02_YEAR";
drop sequence if exists "public"."STRESS_INTERVAL_02_YEAR_SEQ";

create sequence "public"."STRESS_INTERVAL_02_YEAR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_02_YEAR" (  "id" integer not null ,"description" varchar(100) ,"interval year" interval year);
alter table "public"."STRESS_INTERVAL_02_YEAR"  add constraint "PK_STRESS_INTERVAL_02_YEAR"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_02_YEAR_NOARG" ()  returns interval yearas $$  select '9 years'::interval year$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_02_YEAR" (someval IN interval year)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_02_YEAR" values (nextval('"public"."STRESS_INTERVAL_02_YEAR_SEQ"'),'interval ''1 years''',interval '1 years');
insert into "public"."STRESS_INTERVAL_02_YEAR" values (nextval('"public"."STRESS_INTERVAL_02_YEAR_SEQ"'),'interval ''-1 years''',interval '-1 years');

-- STRESS_INTERVAL_08_YEAR_TO_MONTH.table
drop table if exists "public"."STRESS_INTERVAL_08_YEAR_TO_MONTH";
drop sequence if exists "public"."STRESS_INTERVAL_08_YEAR_TO_MONTH_SEQ";

create sequence "public"."STRESS_INTERVAL_08_YEAR_TO_MONTH_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_08_YEAR_TO_MONTH" (  "id" integer not null ,"description" varchar(100) ,"interval year to month" interval year to month);
alter table "public"."STRESS_INTERVAL_08_YEAR_TO_MONTH"  add constraint "PK_STRESS_INTERVAL_08_YEAR_TO_MONTH"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_08_YEAR_TO_MONTH_NOARG" ()  returns interval year to monthas $$  select '9 years 2 months'::interval year to month$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_08_YEAR_TO_MONTH" (someval IN interval year to month)returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_08_YEAR_TO_MONTH" values (  nextval('"public"."STRESS_INTERVAL_08_YEAR_TO_MONTH_SEQ"') ,'interval ''1 years 1 months''' ,interval '1 years 1 months');
insert into "public"."STRESS_INTERVAL_08_YEAR_TO_MONTH" values (  nextval('"public"."STRESS_INTERVAL_08_YEAR_TO_MONTH_SEQ"') ,'interval ''-1 years -1 months''' ,interval '-1 years -1 months');

-- STRESS_BIGINT.table
drop sequence if exists "public"."STRESS_BIGINT_SEQ";
drop table if exists "public"."STRESS_BIGINT";

create sequence "public"."STRESS_BIGINT_SEQ" increment by 1 start with 1;
create table "public"."STRESS_BIGINT" (  "id" int ,"description" varchar(100) ,"bigint" bigint);
alter table "public"."STRESS_BIGINT"  add constraint "PK_STRESS_BIGINT"  primary key ("id");

insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'null' ,null);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'0' ,0);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'1' ,1);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') , '-1' , -1);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'127' ,127);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'32767' ,32767);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'32768' ,32768);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'65534' ,65534);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'65535' ,65535);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'8388607' ,8388607);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'-8388608' ,-8388608);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'2147483647' ,2147483647);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'-2147483648' ,-2147483648);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'9223372036854775807' ,9223372036854775807);
insert into "public"."STRESS_BIGINT" values (nextval('"public"."STRESS_BIGINT_SEQ"') ,'-9223372036854775808' ,-9223372036854775808);

-- STRESS_NUMERIC.table
drop sequence if exists "public"."STRESS_NUMERIC_SEQ";
drop table if exists "public"."STRESS_NUMERIC";

create sequence "public"."STRESS_NUMERIC_SEQ" increment by 1 start with 1;
create table "public"."STRESS_NUMERIC" (  "id" integer not null ,"description" character varying(100) ,"numeric" numeric ,"numeric(1)" numeric(1) ,"numeric(1,0)" numeric(1,0) ,"numeric(10,5)" numeric(10,5) ,"numeric(1000)" numeric(1000) ,"numeric(1000,0)" numeric(1000,0));
alter table "public"."STRESS_NUMERIC"  add constraint "PK_STRESS_NuMERIC"  primary key ("id");

insert into "public"."STRESS_NUMERIC" values (nextval('"public"."STRESS_NUMERIC_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_NUMERIC" values (nextval('"public"."STRESS_NUMERIC_SEQ"') ,'0' ,0 ,0 ,0 ,0 ,0 ,0);
insert into "public"."STRESS_NUMERIC" values (nextval('"public"."STRESS_NUMERIC_SEQ"') ,'1' ,1 ,1 ,1 ,1 ,1 ,1);
insert into "public"."STRESS_NUMERIC" values (nextval('"public"."STRESS_NUMERIC_SEQ"') ,'1e999' ,1e999 ,null ,null ,null ,1e999 ,1e999);
insert into "public"."STRESS_NUMERIC" values (nextval('"public"."STRESS_NUMERIC_SEQ"') ,'1e999::numeric+1::numeric' ,1e999::numeric+1::numeric ,null ,null ,null ,1e999::numeric+1::numeric ,1e999::numeric+1::numeric);
insert into "public"."STRESS_NUMERIC" values (nextval('"public"."STRESS_NUMERIC_SEQ"') ,'''1e1000''::numeric+1::numeric' ,'1e1000'::numeric+1::numeric ,null ,null ,null ,null ,null);
insert into "public"."STRESS_NUMERIC" values (nextval('"public"."STRESS_NUMERIC_SEQ"') ,'''nan''::numeric' ,'nan'::numeric ,'nan'::numeric ,'nan'::numeric ,'nan'::numeric ,'nan'::numeric ,'nan'::numeric);
insert into "public"."STRESS_NUMERIC" values (nextval('"public"."STRESS_NUMERIC_SEQ"') ,'''1e131071''::numeric' ,'1e131071'::numeric ,null ,null ,null ,null ,null);
insert into "public"."STRESS_NUMERIC" values (nextval('"public"."STRESS_NUMERIC_SEQ"') ,'''1e-16382''::numeric' ,'1e-16382'::numeric ,null ,null ,null ,null ,null);

-- STRESS_staff.table
drop sequence if exists "public"."STRESS_staff_SEQ";
drop table if exists "public"."STRESS_staff";
drop type if exists "public"."person_ty" restrict;
drop type if exists "public"."address_ty" restrict;

create sequence "public"."STRESS_staff_SEQ" increment by 1 start with 1;
create type "public"."address_ty" as (  "street_num" integer ,"street" varchar(30) ,"city" varchar(50) ,"zipcode" char(5));
create type "public"."person_ty" as (  "name" varchar(30) ,"address" "public"."address_ty");
create table "public"."STRESS_staff" (  "id" bigint primary key ,"description" varchar(500) ,"person" "public"."person_ty" ,"friends" "public"."person_ty"[] ,"relatives" "public"."person_ty"[]);

insert into "public"."STRESS_staff" values (  nextval('"public"."STRESS_staff_SEQ"') ,'row(''PersonName'', row(3050, ''Springhill Pkwy SE'', ''Smyrna'', ''30080''))' ,row('PersonName', row(3050, 'Springhill Pkwy SE', 'Smyrna', '30080')) ,null ,null);
insert into "public"."STRESS_staff" values (  nextval('"public"."STRESS_staff_SEQ"') ,'all fields' ,row('PersonName', row(3050, 'Springhill Pkwy SE', 'Smyrna', '30080')) ,array[row('PersonNameInVarray1', row(3050, 'Mowry Ave', 'Fremont', '94536')), row('PersonNameInVarray2', row(1911, 'Paseo Ave', 'Fremont', '94536'))]::"public"."person_ty"[] ,array[row('PersonNameInVarray1', row(3050, 'Mowry Ave', 'Fremont', '94536'))]::"public"."person_ty"[]);

-- ['This stress table demonstrates nesting of objects', '-- Phase Setup']
-- STRESS_VirtualParent.table
create sequence "public"."STRESS_VirtualParent_SEQ" increment by 1 start with 1;
create table "public"."STRESS_VirtualParent" (  "id" integer not null ,"name" character varying(100) ,"parent_name" character varying(100));
alter table "public"."STRESS_VirtualParent"  add constraint "PK_STRESS_VirtualParent"  primary key ("id");

-- STRESS_CHARACTER_VARYING_ARR.table
drop table if exists "public"."STRESS_CHARACTER_VARYING_ARR";
drop sequence if exists "public"."STRESS_CHARACTER_VARYING_ARR_SEQ";

create sequence "public"."STRESS_CHARACTER_VARYING_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_CHARACTER_VARYING_ARR" (  "id" integer not null ,"description" varchar(100) ,"character_varying[]" character varying[] ,"character_varying(1)[]" character varying(1)[] ,"character_varying(2)[]" character varying(2)[] ,"character_varying(2000)[]" character varying(2000)[] ,"character_varying(4000)[]" character varying(4000)[]);
alter table "public"."STRESS_CHARACTER_VARYING_ARR"  add constraint "PK_STRESS_CHARACTER_VARYING_ARR"  primary key ("id");

insert into "public"."STRESS_CHARACTER_VARYING_ARR" values (nextval('"public"."STRESS_CHARACTER_VARYING_ARR_SEQ"') ,'null' ,null ,null ,null ,null ,null);
insert into "public"."STRESS_CHARACTER_VARYING_ARR" values (nextval('"public"."STRESS_CHARACTER_VARYING_ARR_SEQ"') ,'ARRAY[]::character varying[]' ,ARRAY[]::character varying[] ,ARRAY[]::character varying[] ,ARRAY[]::character varying[] ,ARRAY[]::character varying[] ,ARRAY[]::character varying[]);
insert into "public"."STRESS_CHARACTER_VARYING_ARR" values (nextval('"public"."STRESS_CHARACTER_VARYING_ARR_SEQ"') ,'ARRAY[null]::character varying[]' ,ARRAY[null]::character varying[] ,ARRAY[null]::character varying[] ,ARRAY[null]::character varying[] ,ARRAY[null]::character varying[] ,ARRAY[null]::character varying[]);
insert into "public"."STRESS_CHARACTER_VARYING_ARR" values (nextval('"public"."STRESS_CHARACTER_VARYING_ARR_SEQ"') ,'ARRAY[''A''] and others' ,ARRAY['A'] ,ARRAY['A'] ,ARRAY['AA'] ,ARRAY[   '0000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   ] , ARRAY[   '0000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '0900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '1900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2500AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '2900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '3000AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '3100AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '3200AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '3300AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '3400AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '3600AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '3700AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '3800AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'|| '3900AAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEAAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEE'   ]);

-- STRESS_BYTEA.table
drop table if exists "public"."STRESS_BYTEA";
drop sequence if exists "public"."STRESS_BYTEA_SEQ";
drop function if exists "public"."STRESS_FN_BYTEA_NOARG"();
drop function if exists "public"."STRESS_PROC_BYTEA"(IN bytea);

create sequence "public"."STRESS_BYTEA_SEQ" increment by 1 start with 1;
create table "public"."STRESS_BYTEA" (  "id" integer not null ,"description" varchar(100) ,"bytea" bytea);
alter table "public"."STRESS_BYTEA"  add constraint "PK_STRESS_BYTEA"  primary key ("id");
-- create function "public"."STRESS_FN_BYTEA_NOARG"()  returns byteaas $$  select 'another string'::bytea$$ language sql;
-- create function "public"."STRESS_PROC_BYTEA"(  someval IN bytea)  returns voidas $$  begin  end;$$ language plpgsql;

insert into "public"."STRESS_BYTEA" values (nextval('"public"."STRESS_BYTEA_SEQ"') ,'null' ,null);
insert into "public"."STRESS_BYTEA" values (nextval('"public"."STRESS_BYTEA_SEQ"') ,'''SampleString''::bytea' ,'SampleString'::bytea);
insert into "public"."STRESS_BYTEA" values (nextval('"public"."STRESS_BYTEA_SEQ"') ,'''''::bytea' ,''::bytea);

-- STRESS_VirtualParentComplex.table
create sequence "public"."STRESS_VirtualParentComplex_SEQ" increment by 1 start with 1;
create table "public"."STRESS_VirtualParentComplex" (  "id" integer not null ,"first" character varying(100) ,"last" character varying(100) ,"parent_first" character varying(100) ,"parent_last" character varying(100));
alter table "public"."STRESS_VirtualParentComplex"  add constraint "PK_STRESS_VirtualParentComplex"  primary key ("id");

-- STRESS_BIT_VARYING.table
drop sequence if exists "public"."STRESS_BIT_VARYING_SEQ";
drop table if exists "public"."STRESS_BIT_VARYING";

create sequence "public"."STRESS_BIT_VARYING_SEQ" increment by 1 start with 1;
create table "public"."STRESS_BIT_VARYING" (  "id" int ,"description" varchar(100) ,"bit varying" bit varying ,"bit varying(1)" bit varying(1) ,"bit varying(2)" bit varying(2) ,"bit varying(3)" bit varying(3) ,"bit varying(4)" bit varying(4) ,"bit varying(5)" bit varying(5) ,"bit varying(6)" bit varying(6) ,"bit varying(7)" bit varying(7) ,"bit varying(8)" bit varying(8) ,"bit varying(9)" bit varying(9) ,"bit varying(10)" bit varying(10) ,"bit varying(11)" bit varying(11) ,"bit varying(12)" bit varying(12) ,"bit varying(13)" bit varying(13) ,"bit varying(14)" bit varying(14) ,"bit varying(15)" bit varying(15) ,"bit varying(16)" bit varying(16) ,"bit varying(17)" bit varying(17) ,"bit varying(18)" bit varying(18) ,"bit varying(19)" bit varying(19) ,"bit varying(20)" bit varying(20) ,"bit varying(21)" bit varying(21) ,"bit varying(22)" bit varying(22) ,"bit varying(23)" bit varying(23) ,"bit varying(24)" bit varying(24) ,"bit varying(25)" bit varying(25) ,"bit varying(26)" bit varying(26) ,"bit varying(27)" bit varying(27) ,"bit varying(28)" bit varying(28) ,"bit varying(29)" bit varying(29) ,"bit varying(30)" bit varying(30) ,"bit varying(31)" bit varying(31) ,"bit varying(32)" bit varying(32) ,"bit varying(33)" bit varying(33) ,"bit varying(34)" bit varying(34) ,"bit varying(35)" bit varying(35) ,"bit varying(36)" bit varying(36) ,"bit varying(37)" bit varying(37) ,"bit varying(38)" bit varying(38) ,"bit varying(39)" bit varying(39) ,"bit varying(40)" bit varying(40) ,"bit varying(41)" bit varying(41) ,"bit varying(42)" bit varying(42) ,"bit varying(43)" bit varying(43) ,"bit varying(44)" bit varying(44) ,"bit varying(45)" bit varying(45) ,"bit varying(46)" bit varying(46) ,"bit varying(47)" bit varying(47) ,"bit varying(48)" bit varying(48) ,"bit varying(49)" bit varying(49) ,"bit varying(50)" bit varying(50) ,"bit varying(51)" bit varying(51) ,"bit varying(52)" bit varying(52) ,"bit varying(53)" bit varying(53) ,"bit varying(54)" bit varying(54) ,"bit varying(55)" bit varying(55) ,"bit varying(56)" bit varying(56) ,"bit varying(57)" bit varying(57) ,"bit varying(58)" bit varying(58) ,"bit varying(59)" bit varying(59) ,"bit varying(60)" bit varying(60) ,"bit varying(61)" bit varying(61) ,"bit varying(62)" bit varying(62) ,"bit varying(63)" bit varying(63) ,"bit varying(64)" bit varying(64) ,"bit varying(1000)" bit varying(1000));
alter table "public"."STRESS_BIT_VARYING"  add constraint "PK_STRESS_BIT_VARYING"  primary key ("id");

insert into "public"."STRESS_BIT_VARYING" values (nextval('"public"."STRESS_BIT_VARYING_SEQ"') ,'null' ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null ,null);
insert into "public"."STRESS_BIT_VARYING" values (nextval('"public"."STRESS_BIT_VARYING_SEQ"') ,'all ones' ,b'1' ,b'1' ,b'11' ,b'111' ,b'1111' ,b'11111' ,b'111111' ,b'1111111' ,b'11111111' ,b'111111111' ,b'1111111111' ,b'11111111111' ,b'111111111111' ,b'1111111111111' ,b'11111111111111' ,b'111111111111111' ,b'1111111111111111' ,b'11111111111111111' ,b'111111111111111111' ,b'1111111111111111111' ,b'11111111111111111111' ,b'111111111111111111111' ,b'1111111111111111111111' ,b'11111111111111111111111' ,b'111111111111111111111111' ,b'1111111111111111111111111' ,b'11111111111111111111111111' ,b'111111111111111111111111111' ,b'1111111111111111111111111111' ,b'11111111111111111111111111111' ,b'111111111111111111111111111111' ,b'1111111111111111111111111111111' ,b'11111111111111111111111111111111' ,b'111111111111111111111111111111111' ,b'1111111111111111111111111111111111' ,b'11111111111111111111111111111111111' ,b'111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111111111' ,b'1111111111111111111111111111111111111111111111111111111111111' ,b'11111111111111111111111111111111111111111111111111111111111111' ,b'111111111111111111111111111111111111111111111111111111111111111' ,bbit varying(1000));
insert into "public"."STRESS_BIT_VARYING" values (nextval('"public"."STRESS_BIT_VARYING_SEQ"') ,'all zeroes' ,b'000000000000000000000000000000000000000' ,b'0' ,b'00' ,b'000' ,b'0000' ,b'00000' ,b'000000' ,b'0000000' ,b'00000000' ,b'000000000' ,b'0000000000' ,b'00000000000' ,b'000000000000' ,b'0000000000000' ,b'00000000000000' ,b'000000000000000' ,b'0000000000000000' ,b'00000000000000000' ,b'000000000000000000' ,b'0000000000000000000' ,b'00000000000000000000' ,b'000000000000000000000' ,b'0000000000000000000000' ,b'00000000000000000000000' ,b'000000000000000000000000' ,b'0000000000000000000000000' ,b'00000000000000000000000000' ,b'000000000000000000000000000' ,b'0000000000000000000000000000' ,b'00000000000000000000000000000' ,b'000000000000000000000000000000' ,b'0000000000000000000000000000000' ,b'00000000000000000000000000000000' ,b'000000000000000000000000000000000' ,b'0000000000000000000000000000000000' ,b'00000000000000000000000000000000000' ,b'000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000000000' ,b'0000000000000000000000000000000000000000000000000000000000000' ,b'00000000000000000000000000000000000000000000000000000000000000' ,b'000000000000000000000000000000000000000000000000000000000000000' ,bbit varying(1000));
insert into "public"."STRESS_BIT_VARYING" values (nextval('"public"."STRESS_BIT_VARYING_SEQ"') ,'one/off' ,b'101010101010101010101010101010101010101010101' ,b'1' ,b'10' ,b'101' ,b'1010' ,b'10101' ,b'101010' ,b'1010101' ,b'10101010' ,b'101010101' ,b'1010101010' ,b'10101010101' ,b'101010101010' ,b'1010101010101' ,b'10101010101010' ,b'101010101010101' ,b'1010101010101010' ,b'10101010101010101' ,b'101010101010101010' ,b'1010101010101010101' ,b'10101010101010101010' ,b'101010101010101010101' ,b'1010101010101010101010' ,b'10101010101010101010101' ,b'101010101010101010101010' ,b'1010101010101010101010101' ,b'10101010101010101010101010' ,b'101010101010101010101010101' ,b'1010101010101010101010101010' ,b'10101010101010101010101010101' ,b'101010101010101010101010101010' ,b'1010101010101010101010101010101' ,b'10101010101010101010101010101010' ,b'101010101010101010101010101010101' ,b'1010101010101010101010101010101010' ,b'10101010101010101010101010101010101' ,b'101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010101010101010' ,b'10101010101010101010101010101010101010101010101010101010101' ,b'101010101010101010101010101010101010101010101010101010101010' ,b'1010101010101010101010101010101010101010101010101010101010101' ,b'10101010101010101010101010101010101010101010101010101010101010' ,b'101010101010101010101010101010101010101010101010101010101010101' ,b'1010101010101010101010101010101010101010101010101010101010101010' ,'1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010'::bit varying(1000));
insert into "public"."STRESS_BIT_VARYING" values (nextval('"public"."STRESS_BIT_VARYING_SEQ"') ,'high bit 1 only' ,b'10000000000000000000000000000000000000' ,b'1' ,b'10' ,b'100' ,b'1000' ,b'10000' ,b'100000' ,b'1000000' ,b'10000000' ,b'100000000' ,b'1000000000' ,b'10000000000' ,b'100000000000' ,b'1000000000000' ,b'10000000000000' ,b'100000000000000' ,b'1000000000000000' ,b'10000000000000000' ,b'100000000000000000' ,b'1000000000000000000' ,b'10000000000000000000' ,b'100000000000000000000' ,b'1000000000000000000000' ,b'10000000000000000000000' ,b'100000000000000000000000' ,b'1000000000000000000000000' ,b'10000000000000000000000000' ,b'100000000000000000000000000' ,b'1000000000000000000000000000' ,b'10000000000000000000000000000' ,b'100000000000000000000000000000' ,b'1000000000000000000000000000000' ,b'10000000000000000000000000000000' ,b'100000000000000000000000000000000' ,b'1000000000000000000000000000000000' ,b'10000000000000000000000000000000000' ,b'100000000000000000000000000000000000' ,b'1000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000000000' ,b'1000000000000000000000000000000000000000000000000000000000000' ,b'10000000000000000000000000000000000000000000000000000000000000' ,b'100000000000000000000000000000000000000000000000000000000000000' ,bbit varying(1000));
insert into "public"."STRESS_BIT_VARYING" values (nextval('"public"."STRESS_BIT_VARYING_SEQ"') ,'length 1 bit 1 only' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,b'1' ,'1'::bit varying(1));

-- STRESS_SMALLSERIAL.table
create sequence "public"."STRESS_SMALLSERIAL_SEQ" increment by 1 start with 1000;
create sequence "public"."STRESS_SMALLSERIAL_MANUAL1_SEQ" increment by 1 start with 10000;
create sequence "public"."STRESS_SMALLSERIAL_MANUAL2_SEQ" increment by 1 start with 20000;
create table "public"."STRESS_SMALLSERIAL" (  id int ,description varchar(100) ,smallserial_default smallserial ,smallserial_manual1 int NOT NULL DEFAULT nextval('"public"."STRESS_SMALLSERIAL_MANUAL1_SEQ"') ,smallserial_manual2 int NOT NULL DEFAULT nextval('"public"."STRESS_SMALLSERIAL_MANUAL2_SEQ"'));
alter table "public"."STRESS_SMALLSERIAL"  add constraint "PK_STRESS_SMALLSERIAL"  primary key (id);
alter sequence "public"."STRESS_SMALLSERIAL_MANUAL1_SEQ"   OWNED BY "public"."STRESS_SMALLSERIAL".smallserial_manual1;;

insert into "public"."STRESS_SMALLSERIAL"(id,description) values ( nextval('"public"."STRESS_SMALLSERIAL_SEQ"') ,'1,10000,20000');
insert into "public"."STRESS_SMALLSERIAL"(id,description) values ( nextval('"public"."STRESS_SMALLSERIAL_SEQ"') ,'2,10001,20001');

-- ['We have four columns in this stress  table', '1- The  id which is the key.', '2- The small serial type ( serial2) that will have an implicit sequence attached to it. ', '3- Integer column with default value from a sequence explicitly created. The sequence is owned by this table. ', '4- Integer column with default value from a sequence explicitly created. The sequence is NOT owned by this table. ', '-- Phase Create']
-- STRESS_INTERVAL_13_HOUR_TO_SECOND.table
drop table if exists "public"."STRESS_INTERVAL_13_HOUR_TO_SECOND";
drop sequence if exists "public"."STRESS_INTERVAL_13_HOUR_TO_SECOND_SEQ";

create sequence "public"."STRESS_INTERVAL_13_HOUR_TO_SECOND_SEQ" increment by 1 start with 1;
create table "public"."STRESS_INTERVAL_13_HOUR_TO_SECOND" (  "id" integer not null ,"description" varchar(100) ,"interval hour to second" interval hour to second ,"interval hour to second(0)" interval hour to second(0) ,"interval hour to second(1)" interval hour to second(1) ,"interval hour to second(2)" interval hour to second(2) ,"interval hour to second(3)" interval hour to second(3) ,"interval hour to second(4)" interval hour to second(4) ,"interval hour to second(5)" interval hour to second(5) ,"interval hour to second(6)" interval hour to second(6));
alter table "public"."STRESS_INTERVAL_13_HOUR_TO_SECOND"  add constraint "PK_STRESS_INTERVAL_13_HOUR_TO_SECOND"  primary key ("id");
-- create function "public"."STRESS_FN_INTERVAL_HOUR_TO_SECOND_5_NOARG" ()  returns interval hour to second(5)as $$  select '9 hours 8 minutes 7.12345 seconds'::interval hour to second(5)$$ language sql;
-- create function "public"."STRESS_PROC_INTERVAL_HOUR_TO_SECOND_5" (someval IN interval hour to second(5))returns voidas $$beginend;$$ language plpgsql;

insert into "public"."STRESS_INTERVAL_13_HOUR_TO_SECOND" values (  nextval('"public"."STRESS_INTERVAL_13_HOUR_TO_SECOND_SEQ"') ,'interval ''1 hours 1 minutes 1.111111 seconds''' ,interval '1 hours 1 minutes 1.111111 seconds' ,interval '1 hours 1 minutes 1 seconds' ,interval '1 hours 1 minutes 1.1 seconds' ,interval '1 hours 1 minutes 1.11 seconds' ,interval '1 hours 1 minutes 1.111 seconds' ,interval '1 hours 1 minutes 1.1111 seconds' ,interval '1 hours 1 minutes 1.11111 seconds' ,interval '1 hours 1 minutes 1.111111 seconds');
insert into "public"."STRESS_INTERVAL_13_HOUR_TO_SECOND" values (  nextval('"public"."STRESS_INTERVAL_13_HOUR_TO_SECOND_SEQ"') ,'interval ''-1 hours -1 minutes -1.111111 seconds''' ,interval '-1 hours -1 minutes -1.111111 seconds' ,interval '-1 hours -1 minutes -1 seconds' ,interval '-1 hours -1 minutes -1.1 seconds' ,interval '-1 hours -1 minutes -1.11 seconds' ,interval '-1 hours -1 minutes -1.111 seconds' ,interval '-1 hours -1 minutes -1.1111 seconds' ,interval '-1 hours -1 minutes -1.11111 seconds' ,interval '-1 hours -1 minutes -1.111111 seconds');

-- STRESS_BYTEA_ARR.table
drop table if exists "public"."STRESS_BYTEA_ARR";
drop sequence if exists "public"."STRESS_BYTEA_ARR_SEQ";

create sequence "public"."STRESS_BYTEA_ARR_SEQ" increment by 1 start with 1;
create table "public"."STRESS_BYTEA_ARR" (  "id" integer not null ,"description" varchar(100) ,"bytea[]" bytea[]);
alter table "public"."STRESS_BYTEA_ARR"  add constraint "PK_STRESS_BYTEA_ARR"  primary key ("id");

insert into "public"."STRESS_BYTEA_ARR" values (nextval('"public"."STRESS_BYTEA_ARR_SEQ"') ,'null' ,null);
insert into "public"."STRESS_BYTEA_ARR" values (nextval('"public"."STRESS_BYTEA_ARR_SEQ"') ,'ARRAY[]::bytea[]' ,ARRAY[]::bytea[]);
insert into "public"."STRESS_BYTEA_ARR" values (nextval('"public"."STRESS_BYTEA_ARR_SEQ"') ,'ARRAY[''SampleString''::bytea]' ,ARRAY['SampleString'::bytea]);
insert into "public"."STRESS_BYTEA_ARR" values (nextval('"public"."STRESS_BYTEA_ARR_SEQ"') ,'ARRAY['''']::bytea' ,ARRAY[''::bytea]);

-- STRESS_DOUBLE_PRECISION.table
drop table if exists "public"."STRESS_DOUBLE_PRECISION";
drop sequence if exists "public"."STRESS_DOUBLE_PRECISION_SEQ";

create sequence "public"."STRESS_DOUBLE_PRECISION_SEQ" increment by 1 start with 1;
create table "public"."STRESS_DOUBLE_PRECISION" (  "id" int ,"description" varchar(100) ,"double precision" double precision);
alter table "public"."STRESS_DOUBLE_PRECISION"  add constraint "PK_STRESS_DOUBLE_PRECISION"  primary key ("id");

insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'null' ,null);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'0' ,0);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'1' ,1);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'-1' ,-1);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'127' ,127);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'-127' ,-127);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'123.456789101112' ,123.456789101112);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'1e-307' ,1e-307);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'-1.7976931348623157e+308' ,-1.7976931348623157e+308);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'1e+308' ,1e+308);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'1.7976931348623157e+308' ,1.7976931348623157e+308);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'2.2250738585072014E-308' ,2.2250738585072014E-308);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'-2.2250738585072014E-308' ,-2.2250738585072014E-308);
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'Infinity' ,'Infinity');
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'-Infinity' ,'-Infinity');
insert into "public"."STRESS_DOUBLE_PRECISION" values (nextval('"public"."STRESS_DOUBLE_PRECISION_SEQ"') ,'NaN' ,'Nan');

-- STRESS_NO_PRIMARY_KEY.table
create sequence "public"."STRESS_NO_PRIMARY_KEY_SEQ" increment by 1 start with 1;
create table "public"."STRESS_NO_PRIMARY_KEY" (  id integer not null);

insert into "public"."STRESS_NO_PRIMARY_KEY" values (nextval('"public"."STRESS_NO_PRIMARY_KEY_SEQ"'));
insert into "public"."STRESS_NO_PRIMARY_KEY" values (nextval('"public"."STRESS_NO_PRIMARY_KEY_SEQ"'));
insert into "public"."STRESS_NO_PRIMARY_KEY" values (nextval('"public"."STRESS_NO_PRIMARY_KEY_SEQ"'));

-- STRESS_MAX_COLUMNS.table
create sequence "public"."STRESS_MAX_COLUMNS_SEQ" increment by 1 start with 1;
create table "public"."STRESS_MAX_COLUMNS" (  id int ,description varchar(100) ,int_0003 integer ,int_0004 integer ,int_0005 integer ,int_0006 integer ,int_0007 integer ,int_0008 integer ,int_0009 integer ,int_0010 integer ,int_0011 integer ,int_0012 integer ,int_0013 integer ,int_0014 integer ,int_0015 integer ,int_0016 integer ,int_0017 integer ,int_0018 integer ,int_0019 integer ,int_0020 integer ,int_0021 integer ,int_0022 integer ,int_0023 integer ,int_0024 integer ,int_0025 integer ,int_0026 integer ,int_0027 integer ,int_0028 integer ,int_0029 integer ,int_0030 integer ,int_0031 integer ,int_0032 integer ,int_0033 integer ,int_0034 integer ,int_0035 integer ,int_0036 integer ,int_0037 integer ,int_0038 integer ,int_0039 integer ,int_0040 integer ,int_0041 integer ,int_0042 integer ,int_0043 integer ,int_0044 integer ,int_0045 integer ,int_0046 integer ,int_0047 integer ,int_0048 integer ,int_0049 integer ,int_0050 integer ,int_0051 integer ,int_0052 integer ,int_0053 integer ,int_0054 integer ,int_0055 integer ,int_0056 integer ,int_0057 integer ,int_0058 integer ,int_0059 integer ,int_0060 integer ,int_0061 integer ,int_0062 integer ,int_0063 integer ,int_0064 integer ,int_0065 integer ,int_0066 integer ,int_0067 integer ,int_0068 integer ,int_0069 integer ,int_0070 integer ,int_0071 integer ,int_0072 integer ,int_0073 integer ,int_0074 integer ,int_0075 integer ,int_0076 integer ,int_0077 integer ,int_0078 integer ,int_0079 integer ,int_0080 integer ,int_0081 integer ,int_0082 integer ,int_0083 integer ,int_0084 integer ,int_0085 integer ,int_0086 integer ,int_0087 integer ,int_0088 integer ,int_0089 integer ,int_0090 integer ,int_0091 integer ,int_0092 integer ,int_0093 integer ,int_0094 integer ,int_0095 integer ,int_0096 integer ,int_0097 integer ,int_0098 integer ,int_0099 integer ,int_0100 integer ,int_0101 integer ,int_0102 integer ,int_0103 integer ,int_0104 integer ,int_0105 integer ,int_0106 integer ,int_0107 integer ,int_0108 integer ,int_0109 integer ,int_0110 integer ,int_0111 integer ,int_0112 integer ,int_0113 integer ,int_0114 integer ,int_0115 integer ,int_0116 integer ,int_0117 integer ,int_0118 integer ,int_0119 integer ,int_0120 integer ,int_0121 integer ,int_0122 integer ,int_0123 integer ,int_0124 integer ,int_0125 integer ,int_0126 integer ,int_0127 integer ,int_0128 integer ,int_0129 integer ,int_0130 integer ,int_0131 integer ,int_0132 integer ,int_0133 integer ,int_0134 integer ,int_0135 integer ,int_0136 integer ,int_0137 integer ,int_0138 integer ,int_0139 integer ,int_0140 integer ,int_0141 integer ,int_0142 integer ,int_0143 integer ,int_0144 integer ,int_0145 integer ,int_0146 integer ,int_0147 integer ,int_0148 integer ,int_0149 integer ,int_0150 integer ,int_0151 integer ,int_0152 integer ,int_0153 integer ,int_0154 integer ,int_0155 integer ,int_0156 integer ,int_0157 integer ,int_0158 integer ,int_0159 integer ,int_0160 integer ,int_0161 integer ,int_0162 integer ,int_0163 integer ,int_0164 integer ,int_0165 integer ,int_0166 integer ,int_0167 integer ,int_0168 integer ,int_0169 integer ,int_0170 integer ,int_0171 integer ,int_0172 integer ,int_0173 integer ,int_0174 integer ,int_0175 integer ,int_0176 integer ,int_0177 integer ,int_0178 integer ,int_0179 integer ,int_0180 integer ,int_0181 integer ,int_0182 integer ,int_0183 integer ,int_0184 integer ,int_0185 integer ,int_0186 integer ,int_0187 integer ,int_0188 integer ,int_0189 integer ,int_0190 integer ,int_0191 integer ,int_0192 integer ,int_0193 integer ,int_0194 integer ,int_0195 integer ,int_0196 integer ,int_0197 integer ,int_0198 integer ,int_0199 integer ,int_0200 integer ,int_0201 integer ,int_0202 integer ,int_0203 integer ,int_0204 integer ,int_0205 integer ,int_0206 integer ,int_0207 integer ,int_0208 integer ,int_0209 integer ,int_0210 integer ,int_0211 integer ,int_0212 integer ,int_0213 integer ,int_0214 integer ,int_0215 integer ,int_0216 integer ,int_0217 integer ,int_0218 integer ,int_0219 integer ,int_0220 integer ,int_0221 integer ,int_0222 integer ,int_0223 integer ,int_0224 integer ,int_0225 integer ,int_0226 integer ,int_0227 integer ,int_0228 integer ,int_0229 integer ,int_0230 integer ,int_0231 integer ,int_0232 integer ,int_0233 integer ,int_0234 integer ,int_0235 integer ,int_0236 integer ,int_0237 integer ,int_0238 integer ,int_0239 integer ,int_0240 integer ,int_0241 integer ,int_0242 integer ,int_0243 integer ,int_0244 integer ,int_0245 integer ,int_0246 integer ,int_0247 integer ,int_0248 integer ,int_0249 integer ,int_0250 integer ,int_0251 integer ,int_0252 integer ,int_0253 integer ,int_0254 integer ,int_0255 integer ,int_0256 integer ,int_0257 integer ,int_0258 integer ,int_0259 integer ,int_0260 integer ,int_0261 integer ,int_0262 integer ,int_0263 integer ,int_0264 integer ,int_0265 integer ,int_0266 integer ,int_0267 integer ,int_0268 integer ,int_0269 integer ,int_0270 integer ,int_0271 integer ,int_0272 integer ,int_0273 integer ,int_0274 integer ,int_0275 integer ,int_0276 integer ,int_0277 integer ,int_0278 integer ,int_0279 integer ,int_0280 integer ,int_0281 integer ,int_0282 integer ,int_0283 integer ,int_0284 integer ,int_0285 integer ,int_0286 integer ,int_0287 integer ,int_0288 integer ,int_0289 integer ,int_0290 integer ,int_0291 integer ,int_0292 integer ,int_0293 integer ,int_0294 integer ,int_0295 integer ,int_0296 integer ,int_0297 integer ,int_0298 integer ,int_0299 integer ,int_0300 integer ,int_0301 integer ,int_0302 integer ,int_0303 integer ,int_0304 integer ,int_0305 integer ,int_0306 integer ,int_0307 integer ,int_0308 integer ,int_0309 integer ,int_0310 integer ,int_0311 integer ,int_0312 integer ,int_0313 integer ,int_0314 integer ,int_0315 integer ,int_0316 integer ,int_0317 integer ,int_0318 integer ,int_0319 integer ,int_0320 integer ,int_0321 integer ,int_0322 integer ,int_0323 integer ,int_0324 integer ,int_0325 integer ,int_0326 integer ,int_0327 integer ,int_0328 integer ,int_0329 integer ,int_0330 integer ,int_0331 integer ,int_0332 integer ,int_0333 integer ,int_0334 integer ,int_0335 integer ,int_0336 integer ,int_0337 integer ,int_0338 integer ,int_0339 integer ,int_0340 integer ,int_0341 integer ,int_0342 integer ,int_0343 integer ,int_0344 integer ,int_0345 integer ,int_0346 integer ,int_0347 integer ,int_0348 integer ,int_0349 integer ,int_0350 integer ,int_0351 integer ,int_0352 integer ,int_0353 integer ,int_0354 integer ,int_0355 integer ,int_0356 integer ,int_0357 integer ,int_0358 integer ,int_0359 integer ,int_0360 integer ,int_0361 integer ,int_0362 integer ,int_0363 integer ,int_0364 integer ,int_0365 integer ,int_0366 integer ,int_0367 integer ,int_0368 integer ,int_0369 integer ,int_0370 integer ,int_0371 integer ,int_0372 integer ,int_0373 integer ,int_0374 integer ,int_0375 integer ,int_0376 integer ,int_0377 integer ,int_0378 integer ,int_0379 integer ,int_0380 integer ,int_0381 integer ,int_0382 integer ,int_0383 integer ,int_0384 integer ,int_0385 integer ,int_0386 integer ,int_0387 integer ,int_0388 integer ,int_0389 integer ,int_0390 integer ,int_0391 integer ,int_0392 integer ,int_0393 integer ,int_0394 integer ,int_0395 integer ,int_0396 integer ,int_0397 integer ,int_0398 integer ,int_0399 integer ,int_0400 integer ,int_0401 integer ,int_0402 integer ,int_0403 integer ,int_0404 integer ,int_0405 integer ,int_0406 integer ,int_0407 integer ,int_0408 integer ,int_0409 integer ,int_0410 integer ,int_0411 integer ,int_0412 integer ,int_0413 integer ,int_0414 integer ,int_0415 integer ,int_0416 integer ,int_0417 integer ,int_0418 integer ,int_0419 integer ,int_0420 integer ,int_0421 integer ,int_0422 integer ,int_0423 integer ,int_0424 integer ,int_0425 integer ,int_0426 integer ,int_0427 integer ,int_0428 integer ,int_0429 integer ,int_0430 integer ,int_0431 integer ,int_0432 integer ,int_0433 integer ,int_0434 integer ,int_0435 integer ,int_0436 integer ,int_0437 integer ,int_0438 integer ,int_0439 integer ,int_0440 integer ,int_0441 integer ,int_0442 integer ,int_0443 integer ,int_0444 integer ,int_0445 integer ,int_0446 integer ,int_0447 integer ,int_0448 integer ,int_0449 integer ,int_0450 integer ,int_0451 integer ,int_0452 integer ,int_0453 integer ,int_0454 integer ,int_0455 integer ,int_0456 integer ,int_0457 integer ,int_0458 integer ,int_0459 integer ,int_0460 integer ,int_0461 integer ,int_0462 integer ,int_0463 integer ,int_0464 integer ,int_0465 integer ,int_0466 integer ,int_0467 integer ,int_0468 integer ,int_0469 integer ,int_0470 integer ,int_0471 integer ,int_0472 integer ,int_0473 integer ,int_0474 integer ,int_0475 integer ,int_0476 integer ,int_0477 integer ,int_0478 integer ,int_0479 integer ,int_0480 integer ,int_0481 integer ,int_0482 integer ,int_0483 integer ,int_0484 integer ,int_0485 integer ,int_0486 integer ,int_0487 integer ,int_0488 integer ,int_0489 integer ,int_0490 integer ,int_0491 integer ,int_0492 integer ,int_0493 integer ,int_0494 integer ,int_0495 integer ,int_0496 integer ,int_0497 integer ,int_0498 integer ,int_0499 integer ,int_0500 integer ,int_0501 integer ,int_0502 integer ,int_0503 integer ,int_0504 integer ,int_0505 integer ,int_0506 integer ,int_0507 integer ,int_0508 integer ,int_0509 integer ,int_0510 integer ,int_0511 integer ,int_0512 integer ,int_0513 integer ,int_0514 integer ,int_0515 integer ,int_0516 integer ,int_0517 integer ,int_0518 integer ,int_0519 integer ,int_0520 integer ,int_0521 integer ,int_0522 integer ,int_0523 integer ,int_0524 integer ,int_0525 integer ,int_0526 integer ,int_0527 integer ,int_0528 integer ,int_0529 integer ,int_0530 integer ,int_0531 integer ,int_0532 integer ,int_0533 integer ,int_0534 integer ,int_0535 integer ,int_0536 integer ,int_0537 integer ,int_0538 integer ,int_0539 integer ,int_0540 integer ,int_0541 integer ,int_0542 integer ,int_0543 integer ,int_0544 integer ,int_0545 integer ,int_0546 integer ,int_0547 integer ,int_0548 integer ,int_0549 integer ,int_0550 integer ,int_0551 integer ,int_0552 integer ,int_0553 integer ,int_0554 integer ,int_0555 integer ,int_0556 integer ,int_0557 integer ,int_0558 integer ,int_0559 integer ,int_0560 integer ,int_0561 integer ,int_0562 integer ,int_0563 integer ,int_0564 integer ,int_0565 integer ,int_0566 integer ,int_0567 integer ,int_0568 integer ,int_0569 integer ,int_0570 integer ,int_0571 integer ,int_0572 integer ,int_0573 integer ,int_0574 integer ,int_0575 integer ,int_0576 integer ,int_0577 integer ,int_0578 integer ,int_0579 integer ,int_0580 integer ,int_0581 integer ,int_0582 integer ,int_0583 integer ,int_0584 integer ,int_0585 integer ,int_0586 integer ,int_0587 integer ,int_0588 integer ,int_0589 integer ,int_0590 integer ,int_0591 integer ,int_0592 integer ,int_0593 integer ,int_0594 integer ,int_0595 integer ,int_0596 integer ,int_0597 integer ,int_0598 integer ,int_0599 integer ,int_0600 integer ,int_0601 integer ,int_0602 integer ,int_0603 integer ,int_0604 integer ,int_0605 integer ,int_0606 integer ,int_0607 integer ,int_0608 integer ,int_0609 integer ,int_0610 integer ,int_0611 integer ,int_0612 integer ,int_0613 integer ,int_0614 integer ,int_0615 integer ,int_0616 integer ,int_0617 integer ,int_0618 integer ,int_0619 integer ,int_0620 integer ,int_0621 integer ,int_0622 integer ,int_0623 integer ,int_0624 integer ,int_0625 integer ,int_0626 integer ,int_0627 integer ,int_0628 integer ,int_0629 integer ,int_0630 integer ,int_0631 integer ,int_0632 integer ,int_0633 integer ,int_0634 integer ,int_0635 integer ,int_0636 integer ,int_0637 integer ,int_0638 integer ,int_0639 integer ,int_0640 integer ,int_0641 integer ,int_0642 integer ,int_0643 integer ,int_0644 integer ,int_0645 integer ,int_0646 integer ,int_0647 integer ,int_0648 integer ,int_0649 integer ,int_0650 integer ,int_0651 integer ,int_0652 integer ,int_0653 integer ,int_0654 integer ,int_0655 integer ,int_0656 integer ,int_0657 integer ,int_0658 integer ,int_0659 integer ,int_0660 integer ,int_0661 integer ,int_0662 integer ,int_0663 integer ,int_0664 integer ,int_0665 integer ,int_0666 integer ,int_0667 integer ,int_0668 integer ,int_0669 integer ,int_0670 integer ,int_0671 integer ,int_0672 integer ,int_0673 integer ,int_0674 integer ,int_0675 integer ,int_0676 integer ,int_0677 integer ,int_0678 integer ,int_0679 integer ,int_0680 integer ,int_0681 integer ,int_0682 integer ,int_0683 integer ,int_0684 integer ,int_0685 integer ,int_0686 integer ,int_0687 integer ,int_0688 integer ,int_0689 integer ,int_0690 integer ,int_0691 integer ,int_0692 integer ,int_0693 integer ,int_0694 integer ,int_0695 integer ,int_0696 integer ,int_0697 integer ,int_0698 integer ,int_0699 integer ,int_0700 integer ,int_0701 integer ,int_0702 integer ,int_0703 integer ,int_0704 integer ,int_0705 integer ,int_0706 integer ,int_0707 integer ,int_0708 integer ,int_0709 integer ,int_0710 integer ,int_0711 integer ,int_0712 integer ,int_0713 integer ,int_0714 integer ,int_0715 integer ,int_0716 integer ,int_0717 integer ,int_0718 integer ,int_0719 integer ,int_0720 integer ,int_0721 integer ,int_0722 integer ,int_0723 integer ,int_0724 integer ,int_0725 integer ,int_0726 integer ,int_0727 integer ,int_0728 integer ,int_0729 integer ,int_0730 integer ,int_0731 integer ,int_0732 integer ,int_0733 integer ,int_0734 integer ,int_0735 integer ,int_0736 integer ,int_0737 integer ,int_0738 integer ,int_0739 integer ,int_0740 integer ,int_0741 integer ,int_0742 integer ,int_0743 integer ,int_0744 integer ,int_0745 integer ,int_0746 integer ,int_0747 integer ,int_0748 integer ,int_0749 integer ,int_0750 integer ,int_0751 integer ,int_0752 integer ,int_0753 integer ,int_0754 integer ,int_0755 integer ,int_0756 integer ,int_0757 integer ,int_0758 integer ,int_0759 integer ,int_0760 integer ,int_0761 integer ,int_0762 integer ,int_0763 integer ,int_0764 integer ,int_0765 integer ,int_0766 integer ,int_0767 integer ,int_0768 integer ,int_0769 integer ,int_0770 integer ,int_0771 integer ,int_0772 integer ,int_0773 integer ,int_0774 integer ,int_0775 integer ,int_0776 integer ,int_0777 integer ,int_0778 integer ,int_0779 integer ,int_0780 integer ,int_0781 integer ,int_0782 integer ,int_0783 integer ,int_0784 integer ,int_0785 integer ,int_0786 integer ,int_0787 integer ,int_0788 integer ,int_0789 integer ,int_0790 integer ,int_0791 integer ,int_0792 integer ,int_0793 integer ,int_0794 integer ,int_0795 integer ,int_0796 integer ,int_0797 integer ,int_0798 integer ,int_0799 integer ,int_0800 integer ,int_0801 integer ,int_0802 integer ,int_0803 integer ,int_0804 integer ,int_0805 integer ,int_0806 integer ,int_0807 integer ,int_0808 integer ,int_0809 integer ,int_0810 integer ,int_0811 integer ,int_0812 integer ,int_0813 integer ,int_0814 integer ,int_0815 integer ,int_0816 integer ,int_0817 integer ,int_0818 integer ,int_0819 integer ,int_0820 integer ,int_0821 integer ,int_0822 integer ,int_0823 integer ,int_0824 integer ,int_0825 integer ,int_0826 integer ,int_0827 integer ,int_0828 integer ,int_0829 integer ,int_0830 integer ,int_0831 integer ,int_0832 integer ,int_0833 integer ,int_0834 integer ,int_0835 integer ,int_0836 integer ,int_0837 integer ,int_0838 integer ,int_0839 integer ,int_0840 integer ,int_0841 integer ,int_0842 integer ,int_0843 integer ,int_0844 integer ,int_0845 integer ,int_0846 integer ,int_0847 integer ,int_0848 integer ,int_0849 integer ,int_0850 integer ,int_0851 integer ,int_0852 integer ,int_0853 integer ,int_0854 integer ,int_0855 integer ,int_0856 integer ,int_0857 integer ,int_0858 integer ,int_0859 integer ,int_0860 integer ,int_0861 integer ,int_0862 integer ,int_0863 integer ,int_0864 integer ,int_0865 integer ,int_0866 integer ,int_0867 integer ,int_0868 integer ,int_0869 integer ,int_0870 integer ,int_0871 integer ,int_0872 integer ,int_0873 integer ,int_0874 integer ,int_0875 integer ,int_0876 integer ,int_0877 integer ,int_0878 integer ,int_0879 integer ,int_0880 integer ,int_0881 integer ,int_0882 integer ,int_0883 integer ,int_0884 integer ,int_0885 integer ,int_0886 integer ,int_0887 integer ,int_0888 integer ,int_0889 integer ,int_0890 integer ,int_0891 integer ,int_0892 integer ,int_0893 integer ,int_0894 integer ,int_0895 integer ,int_0896 integer ,int_0897 integer ,int_0898 integer ,int_0899 integer ,int_0900 integer ,int_0901 integer ,int_0902 integer ,int_0903 integer ,int_0904 integer ,int_0905 integer ,int_0906 integer ,int_0907 integer ,int_0908 integer ,int_0909 integer ,int_0910 integer ,int_0911 integer ,int_0912 integer ,int_0913 integer ,int_0914 integer ,int_0915 integer ,int_0916 integer ,int_0917 integer ,int_0918 integer ,int_0919 integer ,int_0920 integer ,int_0921 integer ,int_0922 integer ,int_0923 integer ,int_0924 integer ,int_0925 integer ,int_0926 integer ,int_0927 integer ,int_0928 integer ,int_0929 integer ,int_0930 integer ,int_0931 integer ,int_0932 integer ,int_0933 integer ,int_0934 integer ,int_0935 integer ,int_0936 integer ,int_0937 integer ,int_0938 integer ,int_0939 integer ,int_0940 integer ,int_0941 integer ,int_0942 integer ,int_0943 integer ,int_0944 integer ,int_0945 integer ,int_0946 integer ,int_0947 integer ,int_0948 integer ,int_0949 integer ,int_0950 integer ,int_0951 integer ,int_0952 integer ,int_0953 integer ,int_0954 integer ,int_0955 integer ,int_0956 integer ,int_0957 integer ,int_0958 integer ,int_0959 integer ,int_0960 integer ,int_0961 integer ,int_0962 integer ,int_0963 integer ,int_0964 integer ,int_0965 integer ,int_0966 integer ,int_0967 integer ,int_0968 integer ,int_0969 integer ,int_0970 integer ,int_0971 integer ,int_0972 integer ,int_0973 integer ,int_0974 integer ,int_0975 integer ,int_0976 integer ,int_0977 integer ,int_0978 integer ,int_0979 integer ,int_0980 integer ,int_0981 integer ,int_0982 integer ,int_0983 integer ,int_0984 integer ,int_0985 integer ,int_0986 integer ,int_0987 integer ,int_0988 integer ,int_0989 integer ,int_0990 integer ,int_0991 integer ,int_0992 integer ,int_0993 integer ,int_0994 integer ,int_0995 integer ,int_0996 integer ,int_0997 integer ,int_0998 integer ,int_0999 integer ,int_1000 integer ,int_1001 integer ,int_1002 integer ,int_1003 integer ,int_1004 integer ,int_1005 integer ,int_1006 integer ,int_1007 integer ,int_1008 integer ,int_1009 integer ,int_1010 integer ,int_1011 integer ,int_1012 integer ,int_1013 integer ,int_1014 integer ,int_1015 integer ,int_1016 integer ,int_1017 integer ,int_1018 integer ,int_1019 integer ,int_1020 integer ,int_1021 integer ,int_1022 integer ,int_1023 integer ,int_1024 integer ,int_1025 integer ,int_1026 integer ,int_1027 integer ,int_1028 integer ,int_1029 integer ,int_1030 integer ,int_1031 integer ,int_1032 integer ,int_1033 integer ,int_1034 integer ,int_1035 integer ,int_1036 integer ,int_1037 integer ,int_1038 integer ,int_1039 integer ,int_1040 integer ,int_1041 integer ,int_1042 integer ,int_1043 integer ,int_1044 integer ,int_1045 integer ,int_1046 integer ,int_1047 integer ,int_1048 integer ,int_1049 integer ,int_1050 integer ,int_1051 integer ,int_1052 integer ,int_1053 integer ,int_1054 integer ,int_1055 integer ,int_1056 integer ,int_1057 integer ,int_1058 integer ,int_1059 integer ,int_1060 integer ,int_1061 integer ,int_1062 integer ,int_1063 integer ,int_1064 integer ,int_1065 integer ,int_1066 integer ,int_1067 integer ,int_1068 integer ,int_1069 integer ,int_1070 integer ,int_1071 integer ,int_1072 integer ,int_1073 integer ,int_1074 integer ,int_1075 integer ,int_1076 integer ,int_1077 integer ,int_1078 integer ,int_1079 integer ,int_1080 integer ,int_1081 integer ,int_1082 integer ,int_1083 integer ,int_1084 integer ,int_1085 integer ,int_1086 integer ,int_1087 integer ,int_1088 integer ,int_1089 integer ,int_1090 integer ,int_1091 integer ,int_1092 integer ,int_1093 integer ,int_1094 integer ,int_1095 integer ,int_1096 integer ,int_1097 integer ,int_1098 integer ,int_1099 integer ,int_1100 integer ,int_1101 integer ,int_1102 integer ,int_1103 integer ,int_1104 integer ,int_1105 integer ,int_1106 integer ,int_1107 integer ,int_1108 integer ,int_1109 integer ,int_1110 integer ,int_1111 integer ,int_1112 integer ,int_1113 integer ,int_1114 integer ,int_1115 integer ,int_1116 integer ,int_1117 integer ,int_1118 integer ,int_1119 integer ,int_1120 integer ,int_1121 integer ,int_1122 integer ,int_1123 integer ,int_1124 integer ,int_1125 integer ,int_1126 integer ,int_1127 integer ,int_1128 integer ,int_1129 integer ,int_1130 integer ,int_1131 integer ,int_1132 integer ,int_1133 integer ,int_1134 integer ,int_1135 integer ,int_1136 integer ,int_1137 integer ,int_1138 integer ,int_1139 integer ,int_1140 integer ,int_1141 integer ,int_1142 integer ,int_1143 integer ,int_1144 integer ,int_1145 integer ,int_1146 integer ,int_1147 integer ,int_1148 integer ,int_1149 integer ,int_1150 integer ,int_1151 integer ,int_1152 integer ,int_1153 integer ,int_1154 integer ,int_1155 integer ,int_1156 integer ,int_1157 integer ,int_1158 integer ,int_1159 integer ,int_1160 integer ,int_1161 integer ,int_1162 integer ,int_1163 integer ,int_1164 integer ,int_1165 integer ,int_1166 integer ,int_1167 integer ,int_1168 integer ,int_1169 integer ,int_1170 integer ,int_1171 integer ,int_1172 integer ,int_1173 integer ,int_1174 integer ,int_1175 integer ,int_1176 integer ,int_1177 integer ,int_1178 integer ,int_1179 integer ,int_1180 integer ,int_1181 integer ,int_1182 integer ,int_1183 integer ,int_1184 integer ,int_1185 integer ,int_1186 integer ,int_1187 integer ,int_1188 integer ,int_1189 integer ,int_1190 integer ,int_1191 integer ,int_1192 integer ,int_1193 integer ,int_1194 integer ,int_1195 integer ,int_1196 integer ,int_1197 integer ,int_1198 integer ,int_1199 integer ,int_1200 integer ,int_1201 integer ,int_1202 integer ,int_1203 integer ,int_1204 integer ,int_1205 integer ,int_1206 integer ,int_1207 integer ,int_1208 integer ,int_1209 integer ,int_1210 integer ,int_1211 integer ,int_1212 integer ,int_1213 integer ,int_1214 integer ,int_1215 integer ,int_1216 integer ,int_1217 integer ,int_1218 integer ,int_1219 integer ,int_1220 integer ,int_1221 integer ,int_1222 integer ,int_1223 integer ,int_1224 integer ,int_1225 integer ,int_1226 integer ,int_1227 integer ,int_1228 integer ,int_1229 integer ,int_1230 integer ,int_1231 integer ,int_1232 integer ,int_1233 integer ,int_1234 integer ,int_1235 integer ,int_1236 integer ,int_1237 integer ,int_1238 integer ,int_1239 integer ,int_1240 integer ,int_1241 integer ,int_1242 integer ,int_1243 integer ,int_1244 integer ,int_1245 integer ,int_1246 integer ,int_1247 integer ,int_1248 integer ,int_1249 integer ,int_1250 integer ,int_1251 integer ,int_1252 integer ,int_1253 integer ,int_1254 integer ,int_1255 integer ,int_1256 integer ,int_1257 integer ,int_1258 integer ,int_1259 integer ,int_1260 integer ,int_1261 integer ,int_1262 integer ,int_1263 integer ,int_1264 integer ,int_1265 integer ,int_1266 integer ,int_1267 integer ,int_1268 integer ,int_1269 integer ,int_1270 integer ,int_1271 integer ,int_1272 integer ,int_1273 integer ,int_1274 integer ,int_1275 integer ,int_1276 integer ,int_1277 integer ,int_1278 integer ,int_1279 integer ,int_1280 integer ,int_1281 integer ,int_1282 integer ,int_1283 integer ,int_1284 integer ,int_1285 integer ,int_1286 integer ,int_1287 integer ,int_1288 integer ,int_1289 integer ,int_1290 integer ,int_1291 integer ,int_1292 integer ,int_1293 integer ,int_1294 integer ,int_1295 integer ,int_1296 integer ,int_1297 integer ,int_1298 integer ,int_1299 integer ,int_1300 integer ,int_1301 integer ,int_1302 integer ,int_1303 integer ,int_1304 integer ,int_1305 integer ,int_1306 integer ,int_1307 integer ,int_1308 integer ,int_1309 integer ,int_1310 integer ,int_1311 integer ,int_1312 integer ,int_1313 integer ,int_1314 integer ,int_1315 integer ,int_1316 integer ,int_1317 integer ,int_1318 integer ,int_1319 integer ,int_1320 integer ,int_1321 integer ,int_1322 integer ,int_1323 integer ,int_1324 integer ,int_1325 integer ,int_1326 integer ,int_1327 integer ,int_1328 integer ,int_1329 integer ,int_1330 integer ,int_1331 integer ,int_1332 integer ,int_1333 integer ,int_1334 integer ,int_1335 integer ,int_1336 integer ,int_1337 integer ,int_1338 integer ,int_1339 integer ,int_1340 integer ,int_1341 integer ,int_1342 integer ,int_1343 integer ,int_1344 integer ,int_1345 integer ,int_1346 integer ,int_1347 integer ,int_1348 integer ,int_1349 integer ,int_1350 integer ,int_1351 integer ,int_1352 integer ,int_1353 integer ,int_1354 integer ,int_1355 integer ,int_1356 integer ,int_1357 integer ,int_1358 integer ,int_1359 integer ,int_1360 integer ,int_1361 integer ,int_1362 integer ,int_1363 integer ,int_1364 integer ,int_1365 integer ,int_1366 integer ,int_1367 integer ,int_1368 integer ,int_1369 integer ,int_1370 integer ,int_1371 integer ,int_1372 integer ,int_1373 integer ,int_1374 integer ,int_1375 integer ,int_1376 integer ,int_1377 integer ,int_1378 integer ,int_1379 integer ,int_1380 integer ,int_1381 integer ,int_1382 integer ,int_1383 integer ,int_1384 integer ,int_1385 integer ,int_1386 integer ,int_1387 integer ,int_1388 integer ,int_1389 integer ,int_1390 integer ,int_1391 integer ,int_1392 integer ,int_1393 integer ,int_1394 integer ,int_1395 integer ,int_1396 integer ,int_1397 integer ,int_1398 integer ,int_1399 integer ,int_1400 integer ,int_1401 integer ,int_1402 integer ,int_1403 integer ,int_1404 integer ,int_1405 integer ,int_1406 integer ,int_1407 integer ,int_1408 integer ,int_1409 integer ,int_1410 integer ,int_1411 integer ,int_1412 integer ,int_1413 integer ,int_1414 integer ,int_1415 integer ,int_1416 integer ,int_1417 integer ,int_1418 integer ,int_1419 integer ,int_1420 integer ,int_1421 integer ,int_1422 integer ,int_1423 integer ,int_1424 integer ,int_1425 integer ,int_1426 integer ,int_1427 integer ,int_1428 integer ,int_1429 integer ,int_1430 integer ,int_1431 integer ,int_1432 integer ,int_1433 integer ,int_1434 integer ,int_1435 integer ,int_1436 integer ,int_1437 integer ,int_1438 integer ,int_1439 integer ,int_1440 integer ,int_1441 integer ,int_1442 integer ,int_1443 integer ,int_1444 integer ,int_1445 integer ,int_1446 integer ,int_1447 integer ,int_1448 integer ,int_1449 integer ,int_1450 integer ,int_1451 integer ,int_1452 integer ,int_1453 integer ,int_1454 integer ,int_1455 integer ,int_1456 integer ,int_1457 integer ,int_1458 integer ,int_1459 integer ,int_1460 integer ,int_1461 integer ,int_1462 integer ,int_1463 integer ,int_1464 integer ,int_1465 integer ,int_1466 integer ,int_1467 integer ,int_1468 integer ,int_1469 integer ,int_1470 integer ,int_1471 integer ,int_1472 integer ,int_1473 integer ,int_1474 integer ,int_1475 integer ,int_1476 integer ,int_1477 integer ,int_1478 integer ,int_1479 integer ,int_1480 integer ,int_1481 integer ,int_1482 integer ,int_1483 integer ,int_1484 integer ,int_1485 integer ,int_1486 integer ,int_1487 integer ,int_1488 integer ,int_1489 integer ,int_1490 integer ,int_1491 integer ,int_1492 integer ,int_1493 integer ,int_1494 integer ,int_1495 integer ,int_1496 integer ,int_1497 integer ,int_1498 integer ,int_1499 integer ,int_1500 integer ,int_1501 integer ,int_1502 integer ,int_1503 integer ,int_1504 integer ,int_1505 integer ,int_1506 integer ,int_1507 integer ,int_1508 integer ,int_1509 integer ,int_1510 integer ,int_1511 integer ,int_1512 integer ,int_1513 integer ,int_1514 integer ,int_1515 integer ,int_1516 integer ,int_1517 integer ,int_1518 integer ,int_1519 integer ,int_1520 integer ,int_1521 integer ,int_1522 integer ,int_1523 integer ,int_1524 integer ,int_1525 integer ,int_1526 integer ,int_1527 integer ,int_1528 integer ,int_1529 integer ,int_1530 integer ,int_1531 integer ,int_1532 integer ,int_1533 integer ,int_1534 integer ,int_1535 integer ,int_1536 integer ,int_1537 integer ,int_1538 integer ,int_1539 integer ,int_1540 integer ,int_1541 integer ,int_1542 integer ,int_1543 integer ,int_1544 integer ,int_1545 integer ,int_1546 integer ,int_1547 integer ,int_1548 integer ,int_1549 integer ,int_1550 integer ,int_1551 integer ,int_1552 integer ,int_1553 integer ,int_1554 integer ,int_1555 integer ,int_1556 integer ,int_1557 integer ,int_1558 integer ,int_1559 integer ,int_1560 integer ,int_1561 integer ,int_1562 integer ,int_1563 integer ,int_1564 integer ,int_1565 integer ,int_1566 integer ,int_1567 integer ,int_1568 integer ,int_1569 integer ,int_1570 integer ,int_1571 integer ,int_1572 integer ,int_1573 integer ,int_1574 integer ,int_1575 integer ,int_1576 integer ,int_1577 integer ,int_1578 integer ,int_1579 integer ,int_1580 integer ,int_1581 integer ,int_1582 integer ,int_1583 integer ,int_1584 integer ,int_1585 integer ,int_1586 integer ,int_1587 integer ,int_1588 integer ,int_1589 integer ,int_1590 integer ,int_1591 integer ,int_1592 integer ,int_1593 integer ,int_1594 integer ,int_1595 integer ,int_1596 integer ,int_1597 integer ,int_1598 integer ,int_1599 integer ,int_1600 integer);
alter table "public"."STRESS_MAX_COLUMNS"  add constraint "PK_STRESS_MAX_COLUMNS"  primary key (id);

insert into "public"."STRESS_MAX_COLUMNS"(id, description) values (  nextval('"public"."STRESS_MAX_COLUMNS_SEQ"') ,'all null');
insert into "public"."STRESS_MAX_COLUMNS"(id, description, int_0003, int_1600) values ( nextval('"public"."STRESS_MAX_COLUMNS_SEQ"') ,'some values' ,3 ,1600);

