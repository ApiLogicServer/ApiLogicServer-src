Students have probations and sick days.

LogicBank
A Student can-graduate unless there are more than 2 probations, or 100 sick days.

(terrible test data)

a little ambiguous - "is eligible" is a contraint, or an attr?

logic is not quite right:

    # A constraint ensuring a student can graduate only if they have no more than 2 probations and no more than 100 sick days.
    Rule.constraint(
    validate=Student,
    as_condition=lambda row: row.probation_count <= 2 and row.sick_days_count <= 100,
    error_msg="Student cannot graduate with more than 2 probations or 100 sick days"
    )

    # A rule to count the number of probations associated with a student.
    Rule.count(derive=Student.probation_count, as_count_of=Probation)

    # A rule to count the number of sick days associated with a student.
    Rule.count(derive=Student.sick_days_count, as_count_of=SickDay)

    # End Logic from GenAI



Rephrase as follows:

Students have probations and sick days.

LogicBank
A Student can be marked as can-graduate only if there are less than 2 probations, and less than 100 sick days.



Better, but it is not seeing this as a 'state' transition:

    # Logic from GenAI: (or, use your IDE w/ code completion)

    # Derive the number of probations for each student.
    Rule.count(derive=Student.probation_count, as_count_of=Probation)

    # Derive the total number of sick days for each student.
    Rule.count(derive=Student.sick_days_total, as_count_of=SickDay)

    # Ensure students marked as can-graduate have less than 2 probations and less than 100 sick days.
    Rule.constraint(validate=Student, as_condition=lambda row: row.probation_count < 2 and row.sick_days_total < 100, error_msg="A Student can be marked as can-graduate only if there are less than 2 probations and less than 100 sick days.")

    # End Logic from GenAI



Rephrase as follows (and, learning, denote prior as 'same response')

Students have probations and sick days.

LogicBank
Signal an error if a Student's can-graduate is True, and there are more 2 probations, or more than 100 sick days.


Incorrect logic - constraint failed to mention can-graduate

    # Logic from GenAI: (or, use your IDE w/ code completion)

    # A student can be marked as can-graduate only if probation_count is less than 2 and sick_days_count is less than 100.
    Rule.constraint(validate=Student,
                as_condition=lambda row: row.probation_count < 2 and row.sick_days_count < 100,
                error_msg="Student cannot graduate due to excessive probations or sick days")

    # Derives the probation_count for a student by counting Probation instances.
    Rule.count(derive=Student.probation_count, as_count_of=Probation)

    # Derives the sick_days_count for a student by counting SickDay instances.
    Rule.count(derive=Student.sick_days_count, as_count_of=SickDay)

    # End Logic from GenAI


So revise logic again:

Students have probations and sick days.

LogicBank
Student can-graduate is false if there are more 2 probations, or more than 100 sick days.
Signal an error if a Student's can-graduate is True, and there are more 2 probations, or more than 100 sick days.
