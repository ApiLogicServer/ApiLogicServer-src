{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "BUILD AND TEST",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/tests/build_and_test",
            "program": "build_and_test.py",
            "redirectOutput": true,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "  - BUILD ONLY",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/tests/build_and_test",
            "program": "build_and_test.py",
            "redirectOutput": true,
            "args": ["build-only"],
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "Create API_Fiddle",
            "type": "python",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["tutorial", "--create=API_Fiddle"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create tutorial (-> org_git)",
            "type": "python",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["tutorial", "--create=tutorial"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create servers/demo (then copy to org-git)",
            "type": "python",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=../../../servers/demo",
                "--db_url=nw"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create basic_demo (abbrev, from ai_customer_orders)",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
            "--infer_primary_key",
            "--project_name=../../../servers/basic_demo",
                "--db_url=basic_demo"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create default project",
            "type": "python",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=",
                "--db_url="],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "0 - Create and Run ApiLogicProject",
            "type": "python",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run","--project_name=../../../servers/ApiLogicProject","--db_url="],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "1 - Create cli/test_project_dev (curr IDE)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=test_project_dev","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Run cli/test_project_dev (curr IDE)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli/test_project_dev",
            "env": {
                "APILOGICPROJECT_APILOGICSERVER_HOME": "${workspaceFolder}",
                "APILOGICPROJECT_SECURITY_ENABLED": "True",
                "APILOGICPROJECT_VERBOSE": "True"
            },
            "program": "api_logic_server_run.py",
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Run cli/test_project_dev (curr IDE) ARGTEST",
            "type": "python",
            "env": {
                "PYTHONPATH": "", 
                "PYTHONHASHSEED": "0", 
                "APILOGICPROJECT_FLASK_HOST": "flaskhost-e",
                "APILOGICPROJECT_PORT": "port-e",
                "APILOGICPROJECT_SWAGGER_HOST": "swaggerhost-e",
                "APILOGICPROJECT_SWAGGER_PORT": "swaggerport-e",
                "APILOGICPROJECT_HTTP_SCHEME": "httpscheme-e",
                "APILOGICPROJECT_API_PREFIX": "apiprefix-e"
                },
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli/test_project_dev",
            "program": "api_logic_server_run.py",
            "redirectOutput": true,
            "justMyCode": false,
            "args": ["--flask_host=flaskhost-a", "--port=p5656-a", "--swagger_host=swaggerhost-a", "--swagger_port=swaggerport-a", "--verbose=True"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "     * Create cli/test_project_ref (curr IDE)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=test_project_ref","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Debug cli/test_project_ref (curr IDE)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli/test_project_ref",
            "env": {"APILOGICPROJECT_VERBOSE": "true", "APILOGICPROJECT_APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "api_logic_server_run.py",
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "2 - Create servers/ApiLogicProject (new IDE)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "False"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/ApiLogicProject","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Create servers/ApiLogicProject (new IDE) -- nw-",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/ApiLogicProject","--db_url=nw-"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Create servers/ApiLogicProject (new IDE) -- nw+",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/ApiLogicProject","--db_url=nw+"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Debug servers/ApiLogicProject (new IDE)",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "${workspaceFolder}/../../servers/ApiLogicProject/api_logic_server_run.py",
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Shipping",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/Shipping","--db_url=shipping"],
            "console": "integratedTerminal"
        },
        {
            "name": "3 - Run Last Project",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "cli.py",
            "args": ["run","--project_name="],
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Login (on current server)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "cli.py",
            "args": ["login"],
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - cURL (on current server) with args",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "cli.py",
            "args": ["curl", "http://localhost:5656/CustomAPI/Customer"],
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "4 - Create Sql/Server",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/SqlServer",
                "--db_url=mssql+pyodbc://sa:Posey3861@localhost:1433/NORTHWND?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"],
            "console": "internalConsole" // allows special char '?' -- output goes to DEBUG CONSOLE
        },
        {
            "name": "  - Create Sql/Server - remote",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/SqlServer",
                "--db_url=mssql+pyodbc://sa:Posey3861@10.0.0.77:1433/NORTHWND?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"],
            "console": "internalConsole" 
        },
        {
            "name": "5 - Create Postgres (servers)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "justMyCode": false,
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/postgres-nw",
                "--db_url=postgresql://postgres:p@localhost/postgres"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Debug Postgres",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "${workspaceFolder}/../../servers/postgres-nw/api_logic_server_run.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "  - Postgres - stress",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "create",
                "--project_name=../../../servers/postgres-stress",
                "--db_url=postgresql://postgres:p@localhost/stress"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Add Security to Postgres - postgres-database-authentication",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "add-auth",
                "--project_name=../../../servers/postgres-nw",
                "--db_url=postgresql://postgres:p@localhost/authdb"],
            "console": "integratedTerminal"
        },
        {
            "name": "6 - ORACLE-HR",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True", "APILOGICSERVER_ORACLE_DBINIT": "all"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "create",
                "--project_name=../../../servers/oracle-hr",
                "--db_url=oracle-hr"],
            "console": "integratedTerminal"
        },
        {
            "name": "   - ORACLE-HR THICK",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True",
                "APILOGICSERVER_ORACLE_THICK": "/Users/val/Downloads/instantclient_19_16"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "create",
                "--project_name=../../../servers/oracle-hr",
                "--db_url=oracle-hr"],
            "console": "integratedTerminal"
        },
        {
            "name": "   - ORACLE-STRESS",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "create",
                "--quote",
                "--project_name=../../../servers/oracle_stress",
                "--db_url=oracle-stress"],
            "console": "integratedTerminal"
        },
        {
            "name": "7 - Create MySql (servers) - classic models",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/classicmodels",
                "--db_url=mysql+pymysql://root:p@localhost:3306/classicmodels"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - classic models (remote)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/classicmodels",
            "--db_url=mysql+pymysql://root:p@10.0.0.77:3306/classicmodels"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - add auth)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["add-auth","--project_name=../../../servers/classicmodels","--db_url=mysql+pymysql://root:p@10.0.0.77:3306/authdb"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - CHINOOK",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/Chinook",
                "--db_url=mysql+pymysql://root:p@localhost:3306/Chinook"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - sam - ucf",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/ucf",
                "--db_url=mysql+pymysql://root:p@localhost:3306/ffghpalive"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - wynford - FEDEX",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/fedex",
                "--db_url=mysql+pymysql://root:p@127.0.0.1:3306/CSAMTEST_SCHEMA"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - BudgetApp",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "env": {"APILOGICSERVER_DEBUG": "True"},

            "args": ["create","--project_name=../../../servers/BudgetApp",
            "--db_url=mysql+pymysql://root:p@localhost:3306/BudgetApp"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - classic models BAD DB",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/BadDB","--db_url=mysql+pymysql://root:p@localhost:3306/classicmodelsXX"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - stress",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/MySQL_stress",
            "--db_url=mysql+pymysql://root:p@10.0.0.77:3306/stress"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create and run classicmodels Sqlite",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/classicmodels_sqllite","--db_url={install}/classicmodels.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "8 - Create servers/sample_ai",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=../../../servers/sample_ai",
                "--db_url=sqlite:///sample_ai.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "      + Create servers/sample_ai with items",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/sample_ai",
                "--db_url=sqlite:///sample_ai_items.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "      + Add Customizations - servers/sample_ai",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["sample-ai","--project_name=../../../servers/sample_ai"],
            "console": "integratedTerminal"
        },
        {
            "name": "      + Add Iteration - servers/sample_ai",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["sample-ai-iteration","--project_name=../../../servers/sample_ai"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create Sqlite - CHATGPT - ai_customer_orders",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
            "--infer_primary_key",
            "--project_name=../../../servers/ai_customer_orders",
                "--db_url=sqlite:////Users/val/dev/ApiLogicServer/ApiLogicServer-dev/org_git/ApiLogicServer-src/tests/test_databases/ai-created/ai_customer_orders.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Add Security to ai_customer_orders",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "add-auth",
                "--project_name=../../../servers/ai_customer_orders",
                "--db_url=auth"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create MySQL - CHATGPT - ai_customer_orders_mysql",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/ai_customer_orders_mysql",
                "--db_url=mysql+pymysql://root:p@localhost:3306/ai_customer_orders"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "    -- Add Security to ai_customer_orders_mysql",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "add-auth",
                "--project_name=../../../servers/ai_customer_orders_mysql",
                "--db_url=mysql+pymysql://root:p@localhost:3306/authdb"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create MySql - CHATGPT - employee_skills",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "False"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
            "--infer_primary_key",
            "--project_name=../../../servers/employee_skills",
                "--db_url=mysql+pymysql://root:p@localhost:3306/employee_skills"],
            "console": "integratedTerminal"
        },
        {
            "name": "9 - nw- NW_No_Cust",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create", "--db_url=nw-", "--project_name=../../../servers/NW_NoCust"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - add-auth to servers/NW_NoCust - DOT",
            "type": "python",
            "request": "launch",
            "cwd": "../../../servers/NW_NoCust",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-auth",
                    "--project_name=.", 
                    "--db_url=auth"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - add-db to servers/NW_NoCust - DOT",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "../../../servers/NW_NoCust",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-db",
                    "--bind_key=Todo",
                    "--db_url=todo",
                    "--project_name=."],
            "console": "integratedTerminal"
        },
        {
            "name": "  - rebuild-from-database to servers/NW_NoCust - DOT",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "../../../servers/NW_NoCust",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-database",
                    "--project_name=.",
                    "--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Add Security to NW_NoCust - sqlite-database-authentication",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["add-auth","--project_name=../../../servers/NW_NoCust", "--db_url=add-auth"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Add-database to NW_NoCust",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["add-db",
                    "--bind_key=Todo",
                    "--db_url=todo",
                    "--project_name=../../../servers/NW_NoCust"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Add Northwind Customizations to NW-NoCust",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["add-cust","--project_name=../../../servers/NW_NoCust"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Northwind NW_Collision_Test",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create", 
                    "--db_url=sqlite:///../tests/test_databases/sqlite-databases/nw-fk-getter-collision.sqlite",
                    "--project_name=../../../servers/NW_Collision_Test"],
            "console": "integratedTerminal"
        },
        {
            "name": "Add-database",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["add-db",
                    "--bind_key=Todo",
                    "--db_url=todo"],
            "console": "integratedTerminal"
        },
        {
          "name": "  - Add-database - explicit location - ApiLogicProject",
          "type": "python",
          "request": "launch",
          "cwd": "${workspaceFolder}/api_logic_server_cli",
          "program": "cli.py",
          "redirectOutput": true,
          "args": ["add-db",
                  "--bind_key=Todo",
                  "--db_url=todo",
                  "--project_name=../../../servers/ApiLogicProject"],
          "console": "integratedTerminal"
      },
          {
            "name": "Chinook - Create and run Chinook Sqlite (abbr)",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/chinook_sqllite","--db_url=chinook"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create and run Chinook MySQL",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/chinook","--db_url=mysql+pymysql://root:p@localhost:3306/Chinook"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create and run Chinook Sqlite",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/chinook_sqllite","--db_url={install}/Chinook_Sqlite.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "Allocation  (abbr)",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/allocation","--db_url=allocation"],
            "console": "integratedTerminal"
        },
        {
            "name": "BudgetApp  (abbr)",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/BudgetApp","--db_url=BudgetApp"],
            "console": "integratedTerminal"
        },
        {
            "name": "DOCKER Create - docker_api_logic_project",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/docker_api_logic_project","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "SQL Server nw (bypass vsc bug)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/sqlsvr_nw",
                "--db_url=sqlsvr-nw"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "  - SQL Server nw (bypass vsc bug) using DOCKER",
            "type": "python",
            "request": "launch",
            "env": {"HOST_IP": "10.0.0.234"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/sqlsvr_nw",
                "--db_url=sqlsvr-nw-docker"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "  - SQL Server nwlogic",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/sqlsvr_nwlogic",
                "--db_url=sqlsvr-nwlogic"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "  - SQL Server Types [TVF]",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/sqlsvr_sample",
                "--db_url=sqlsvr-sample",
                "--extended_builder=*"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Sql/Server -- vsc bug - fails url parse",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/SqlServer","--db_url=mssql+pyodbc://sa:Posey3861@localhost:1433/NORTHWND?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"],
            "console": "integratedTerminal"
        },
        {
            "name": "PythonAnywhere Create",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/PythonAnywhere/ApiLogicProject",
                    "--host=ApiLogicServer.pythonanywhere.com", "--port=", "--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "CheckIP Create (?)",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/install/ApiLogicServer/dockers/CheckIP",
                    "--swagger_host=10.0.0.77", "--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "Model Migrator",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/model_migrator_project",
                "--db_url=mysql+pymysql://root:password@127.0.0.1:3308/ffghpalive",
                "--extended_builder=model_migrator"],
            "console": "integratedTerminal"
        },
        {
            "name": "copy_children",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/CopyChildren","--db_url=sqlite:////Users/val/dev/LogicBank/LogicBank/examples/copy_children/db/database-gold.db"],
            "console": "integratedTerminal"
        },
        {
            "name": "unique_keys",
            "type": "python",
            "request": "launch",
            "env": {
                "APILOGICSERVER_HOME": "${workspaceFolder}",
                "APILOGICSERVER_DEBUG": "True"
            },
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run",
                "--project_name=../../../servers/unique_keys",
                "--db_url=sqlite:////Users/val/dev/ApiLogicServer/ApiLogicServer-dev/org_git/ApiLogicServer-src/tests/test_databases/sqlite-databases/unique_keys.sqlite",
                "--infer_primary_key"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - unique_keys_NO_INFER",
            "type": "python",
            "request": "launch",
            "env": {
                "APILOGICSERVER_HOME": "${workspaceFolder}",
                "APILOGICSERVER_DEBUG": "True"
            },
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run",
                "--project_name=../../../servers/unique_keys",
                "--db_url=sqlite:////Users/val/dev/ApiLogicServer/ApiLogicServer-dev/org_git/ApiLogicServer-src/tests/test_databases/sqlite-databases/unique_keys.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "megapilos create",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/megapilos","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "  - megapilos run",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/../servers/megapilos/api_logic_server_run.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "Create new empty project",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/NewProject","--db_url=new"],
            "console": "integratedTerminal"
        },
        {
            "name": "Table Filters Tests",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/table_filters_tests",
                    "--db_url=table_filters_tests",
                    "--include_tables=database/table_filters_tests.yml"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Table Filters Test All-Tables",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/table_filters_tests",
                    "--db_url=table_filters_tests",
                    "--include_tables=database/table_filters_tests_typical.yml"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Table Filters Test NW Subset",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/table_filters_nw",
                    "--db_url=nw-",
                    "--include_tables=database/table_filters_tests_nw.yml"],
            "console": "integratedTerminal"
        },
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "Rebuild-from-model-sql-svr-types",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-model","--project_name=../../../servers/sqlsvr_sample","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Rebuild-from-database",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-database","--project_name=../../../servers/ApiLogicProject","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Rebuild-from-model",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-model","--project_name=../../../servers/ApiLogicProject","--db_url="],
            "console": "integratedTerminal"
        },
    {
            "name": "Spaces in project dir",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run","--project_name='../../../servers/install/ApiLogicServer/spaces name/ApiLogicProject'","--db_url="],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "Python Status",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/project_prototype/venv_setup/py.py",
            "redirectOutput": true,
            "justMyCode": false,
            "args": ["go"],
            "console": "integratedTerminal"
        },
        {
            "name": "ApiLogicServer <empty>",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "ApiLogicServer examples",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["examples"],
            "console": "integratedTerminal"
        },
        {
            "name": "cURL test",
            "type": "python",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["curl-test","--message=''"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "ApiLogicServer create open_with",
            "type": "python",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--open_with=code",
                "--project_name=../../../servers/demo",
                "--db_url=nw"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },        {
            "name": "ApiLogicServer about",
            "type": "python",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["about"],
            "console": "integratedTerminal"
        }
    ]
}
