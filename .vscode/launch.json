{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Build Load & Test",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/tests/build_and_test",
            "env": {"APILOGICSERVER_AUTO_OPEN": ""},
            "program": "build_load_and_test.py",
            "redirectOutput": true,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "  - BLT, Hold the Tomato",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/tests/build_and_test",
            "program": "build_load_and_test.py",
            "redirectOutput": true,
            "args": ["build-only"],
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "  - license generator",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/docker/webgenie_docker/webgen_ai_docker/license",
            "env": {"APILOGICSERVER_AUTO_OPEN": ""},
            "program": "license_generator.py",
            "redirectOutput": true,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "  - license checker",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/docker/webgenie_docker/webgen_ai_docker/license",
            "env": {"APILOGICSERVER_AUTO_OPEN": ""},
            "program": "license_checker.py",
            "redirectOutput": true,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "  - GenAI tests",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/tests/genai_tests",
            "env": {"APILOGICSERVER_AUTO_OPEN": ""},
            "program": "genai_tests.py",
            "redirectOutput": true,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create and Run ApiLogicProject",
            "type": "debugpy",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run","--project_name=../../../servers/ApiLogicProject","--db_url="],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },

        {
            "name": "1 - ApiLogicServer Start (Clean)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "args": ["start", "--clean"],
            "justMyCode": false,
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - ApiLogicServer Start (Clean - no-samples)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "args": ["start", "--clean", "--no-samples"],
            "justMyCode": false,
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Start (Clean, no-open-manager)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "args": ["start", "--clean", "--no-open-manager"],
            "justMyCode": false,
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai create - clean/ApiLogicServer/genai_demo",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--using=system/genai/examples/genai_demo/genai_demo.prompt"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai add-cust - clean/ApiLogicServer/genai_demo",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-cust",
                "--project-name=../../../ApiLogicServer-dev/clean/ApiLogicServer/genai_demo"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai ITERATION - clean/ApiLogicServer/genai_demo_iteration",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--project-name=../../../ApiLogicServer-dev/clean/ApiLogicServer/genai_demo_iteration",
                "--using=${workspaceFolder}/api_logic_server_cli/prototypes/manager/system/genai/examples/genai_demo/genai_demo_iteration"],
            "console": "integratedTerminal"
        },
        // mimic iteration DELETE LAST RESPONSE FIRST
        {
            "name": "     - genai CONVERSATION ITERATE IN-PLACE (NB: DELETE LAST RESPONSE FIRST)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--using=${workspaceFolder}/../../clean/ApiLogicServer/system/genai/temp/genai_demo_conversation"
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai RETRY - clean/ApiLogicServer/genai_demo",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/chatgpt_retry.response",
                "--using=ignored/genai_demo.prompt"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai RETRY / RENAME - clean/ApiLogicServer/genai_demo",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai", "--project-name=genai_demo_named",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/chatgpt_retry.response",
                "--using=ignored/genai_demo.prompt"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai RETRY - clean/ApiLogicServer/genai_demo_conversation_bad_decimal",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/genai_demo_conversation_bad_decimal/genai_demo_003.response",
                "--using=ignored/genai_demo_conversation_bad_decimal.prompt"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai RETRY - clean/ApiLogicServer/genai_demo_conversation_bad_decimal_2",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/genai_demo_conversation_bad_decimal_2/genai_demo_conversation_002.response",
                "--using=ignored/genai_demo_conversation_bad_decimal_2.prompt"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai CMDB CONVERSATION - clean/ApiLogicServer/conversation",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/cmdb"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai AUTO DEALERSHIP CONVERSATION - clean/ApiLogicServer/auto_dealership",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/auto_dealership/auto_iteration"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai RETRY from response (no ChatGPT)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/api_logic_server_cli/prototypes/manager/system/genai/examples/genai_demo/genai_demo.response",
                "--using=ignored/genai_demo.prompt"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai BLT/EmpDept (multi_rule_logic_bad_gen - no ChatGPT)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/emp_dept/multi_rule_logic_003.response",
                "--project-name=multi_rule_logic_bad_gen",
                "--using=ignored/multi_rule_logic_bad_gen"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai TEST_PROJECT - clean/ApiLogicServer/test_project",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai", "--project-name=test_project_out",
                "--using=${workspaceFolder}/../../clean/ApiLogicServer/test_project/docs"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai LOGIC - clean/ApiLogicServer/genai_demo_logic",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/genai_demo_logic"
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "     - genai ADD-LOGIC - clean/ApiLogicServer/genai_demo_logic",
// todo - this test needs to be updated (where is project created?)
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer/genai_demo",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai-logic",
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "     - ApiLogicServer Start (Clean, charm)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "args": ["start", "--clean", "--open-with=charm"],
            "justMyCode": false,
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - ApiLogicServer Start (Clean, code (Win11)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}\\..\\..\\build_and_test\\ApiLogicServer",
            "args": ["start", "--clean"],
            "justMyCode": false,
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - ApiLogicServer Start (Clean, charm (Win11)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}\\..\\..\\build_and_test\\ApiLogicServer",
            "args": ["start", "--clean", "--open-with=pycharm"],
            "justMyCode": false,
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - ApiLogicServer Start (clean/Volume)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../clean",
            "args": ["start", "--clean", "--volume=/my_vol_test/my_mgr"],
            "justMyCode": false,
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - GENAI-CREATE blt/customer orders",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [ "genai-create",
                "--project-name=customer_orders",
                "--using=customer orders"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - GENAI-ITERATE blt/customer orders",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai-iterate",
                "--project-name=customer_orders",
                "--using=add Order Details and Products"],
            "console": "integratedTerminal"
        },

        {
            "name": "     - GENAI-ITERATE blt/genai_demo_data_fix_iteration",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--project-name=genai_demo_data_fix_iteration",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/data_fix_iteration"],
            "console": "integratedTerminal"
        },
        {
            "name": "2 - Create servers/ApiLogicProject (DEFAULTS)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers",
            "env": {"APILOGICSERVER_DEBUG": "True",
                    "APILOGICSERVER_RUNNING": "NOT DOCKER"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=",
                "--db-url="],
            "console": "integratedTerminal"
        },
        {
            "name": "     - add-cust",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "add-cust",
                "--project-name=../../../servers/ApiLogicProject"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - add-auth",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["add-auth","--project_name=../../../servers/ApiLogicProject", "--db_url=add-auth"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - app-create",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers/ApiLogicProject",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "app-create",
                "--project-name=",
                "--app=app"
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "     - app-build",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers/ApiLogicProject",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "justMyCode": false,
            "args": [
                "app-build",
                "--project-name=",
                "--app=app"
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "     - app-build MedAI",
            "type": "debugpy",
            "request": "launch",
            "cwd": "/Users/tylerband/rightmetrics/ejaz",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "justMyCode": false,
            "args": [
                "app-build",
                "--project-name=",
                "--app=app"
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "     - add-auth KEYCLOAK",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "justMyCode": false,
            "args": [
                "add-auth",
                "--project_name=../../../servers/ApiLogicProject", 
                "--db_url=add-auth",
                "--provider-type=keycloak",
                "--db_url=localhost"
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Create servers/ApiLogicProject (new IDE) -- With Provider (== default)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True",
                    "APILOGICSERVER_RUNNING": "NOT DOCKER"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=../../../servers/ApiLogicProject",
                "--open-with=code",
                "--auth-provider-type=sql",
                "--db-url="],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Create servers/nw- (new IDE) -- nw-",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/nw-","--db_url=nw-"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Create servers/ApiLogicProject (new IDE) -- nw- NO OPT LOCK",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/nw-",
                "--db_url=nw-",
                "--opt-locking=ignored"],
            "console": "integratedTerminal"
        },
        {
            "name": "     + Create servers/nw+ (new IDE) -- nw+",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "False"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/nw+","--db_url=nw+"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Debug servers/nw+ (new IDE)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "${workspaceFolder}/../../servers/nw+/api_logic_server_run.py",
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Shipping",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/Shipping","--db_url=shipping"],
            "console": "integratedTerminal"
        },
        {
            "name": "3  - Create blt/genai_demo from blt-prompt/ChatGPT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",  "--retries=-1",
                "--using=${workspaceFolder}/../../build_and_test/ApiLogicServer/system/genai/examples/genai_demo/genai_demo.prompt",
                "--project-name=genai_demo"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/genai_demo_informal from blt-prompt/ChatGPT, informal logic",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True",
                    "APILOGICPROJECT_IS_GENAI_DEMO": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--using=${workspaceFolder}/../../build_and_test/ApiLogicServer/system/genai/examples/genai_demo/genai_demo_informal.prompt",
                "--project-name=genai_demo_informal"],
            "console": "integratedTerminal"
        },
        {
            "name": "      + Add Simulated Customizations - blt/genai_demo_informal",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/genai_demo_informal",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-cust"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Rebuild test data -  blt/ApiLogicServer/genai_demo_informal",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True",
                    "APILOGICPROJECT_NO_FLASK": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/genai_demo_informal",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai-utils", "--rebuild-test-data"
                // "--using=${workspaceFolder}/../../build_and_test/ApiLogicServer/genai_demo_informal",
                // "--response=docs/genai_demo_informal_003.response"
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/genai_demo_ as IS_GENAI_DEMO",
// used to mimic Genai - demo mode
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True", "APILOGICPROJECT_IS_GENAI_DEMO": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
            "--using=${workspaceFolder}/../../build_and_test/ApiLogicServer/system/genai/examples/genai_demo/genai_demo.prompt",
            "--project-name=genai_demo_"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Iterate blt/genai_demo__ (test - retain graphics over iterations)",
// used to mimic iterating Genai - demo mode, to verify that graphics are not lost.
// IMPORTANT: add docs/004_iterate_add_sales_rep.prompt first (eg, assign orders to a salesrep)
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True", "APILOGICPROJECT_IS_GENAI_DEMO": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--using=${workspaceFolder}/../../build_and_test/ApiLogicServer/genai_demo_/docs",
                "--project-name=genai_demo__"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/genai_demo_ from repaired",
// used to mimic Genai - demo mode
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--retries=-1",
                "--repaired-response=${workspaceFolder}/../../build_and_test/ApiLogicServer/system/genai/examples/genai_demo/genai_demo.response_example",
                "--project-name=genai_demo_repaired"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Add Graphics to blt/samples/nw_sample_nocust",
// test adding graphics to non-genai project
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/samples/nw_sample_nocust",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai-graphics" ],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Add Graphics to blt/samples/nw_sample",
// test adding graphics to non-genai project
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/samples/nw_sample",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai-graphics" ],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/genai_demo from blt-prompt/ChatGPT, DISABLED logic",
// used to mimic Genai - rules provided, but disabled on initial creation ('structure first')
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
            "--using=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/genai_demo_logic/genai_demo_logic_off.prompt",
            "--project-name=tests/genai_demo_LogicBankOff"],
            "console": "integratedTerminal"
        },
        {
            "name": "    + SUGGEST logic for blt/genai_demo_LogicBankOff from Prompt/ChatGPT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/tests/genai_demo_LogicBankOff",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai-logic", "--suggest",
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "    + SUGGEST/ITERATE logic for blt/genai_demo_LogicBankOn from genai_demo_LogicBankOff",
//  ** run prior config first
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
            "--using=tests/genai_demo_LogicBankOff/docs",
            "--project-name=tests/genai_demo_LogicBankOn"],
            "console": "integratedTerminal"
        },
        {
            "name": "    + SUGGEST s2 logic for blt/genai_demo_no_logic from Prompt/ChatGPT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/genai_demo_no_logic",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai-logic", "--suggest",
                ],
            "console": "integratedTerminal"
        },
        {
            "name": "    + SUGGEST/ITERATE s4 logic for blt/genai_demo_no_logic from Prompt/ChatGPT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [ "genai", "--project-name=genai_demo_with_logic",
                "--using=${workspaceFolder}/../../build_and_test/ApiLogicServer/genai_demo_no_logic/docs/logic_suggestions"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/genai_demo from RESPONSE (old format)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/genai.response",
                "--project-name=genai_demo"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/genai_demo from RESPONSE ROWS[]",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/genai_rows.response",
                "--project-name=genai_demo_rows",
                "--using=genai_demo"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/rule_reserved_words",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True", "--Tries=-1",
                    "APILOGICPROJECT_IS_GENAI_DEMO": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
            "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/rule_reserved_words/003_create_db_models.response",
            "--project-name=rule_reserved_words"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/WIP from test-dbs",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/wip_db/wip_no_column.prompt",
                "--project-name=wip_db"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/wip from test-dbs (reserved word Column)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/wip_db/test_Column_tblname.response",
                "--retries=-1",
                "--project-name=wip_db"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/airport_10 from RESPONSE",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--using=airport_10",
                "--repaired-response=${workspaceFolder}/api_logic_server_cli/prototypes/manager/system/genai/examples/airport/airport.response"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/airport_4 from RESPONSE",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--project-name=tests/airport_4",
                "--using=airport_4",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/airport/airport_4.response"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/airport_4 from PROMPT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--project-name=airport_4",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/airport/airport.prompt"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/airport_10 from PROMPT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--project-name=airport_10", "--tables=10",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/airport/airport.prompt"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/Logic-Learning from PROMPT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--project-name=tests-genai/logic_training/ready_flag", 
                "--using=${workspaceFolder}/tests/genai_tests/logic_training/ready_flag.prompt"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/elections from RESPONSE",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--using=elections",
                "--repaired-response=${workspaceFolder}/api_logic_server_cli/prototypes/manager/system/genai/examples/elections/elections.response"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/elections from Prompt",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/elections/elections.prompt",
                "--prompt-inserts=*"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/iso_test from Prompt",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--using=${workspaceFolder}/tests/genai_tests/iso_test",
                "--project-name=tests-genai/iso_test"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/dnd from PROMPT",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai", "--tables=25",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/dnd/dnd.prompt",
                "--project-name=dnd"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/dnd from RESPONSE",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/dnd/dnd.response",
                "--project-name=dnd", "--using=dnd"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/students from blt-prompt/ChatGPT, informal logic",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai", "--test-data-rows=4", "--temperature=0.7",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/students_and_classes/multi_row_logic",
                "--project-name=students_classes_informal"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/emp_dept from blt-prompt/ChatGPT, informal logic",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--using=${workspaceFolder}/../../build_and_test/ApiLogicServer/system/genai/examples/emp_depts/emp_dept.prompt",
                "--project-name=emp_dept"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/genai_demo_iterative_logic from Prompt/ChatGPT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",
                "--using=${workspaceFolder}/api_logic_server_cli/prototypes/manager/system/genai/examples/genai_demo/genai_demo_iterative_logic",
                "--project-name=genai_demo_iterative_logic"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/genai_demo_decimal from RESPONSE",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/genai_demo_decimal/genai.response",
                "--using=genai_demo_decimal_ide"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/time_cards_decimal from RESPONSE",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/time_cards/time_card_decimal/genai.response",
                "--using=time_card_decimal_ide"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/time tracking from genai",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--using=system/genai/examples/time_tracking_billing/002_create_db_models.prompt",
                "--project-name=trk"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/time tracking from repaired response",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=system/genai/examples/time_tracking_billing/003_create_db_models.response",
                "--project-name=trk"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create blt/time_cards_kw from RESPONSE",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": [
                "genai",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/time_cards/time_card_kw_arg/genai.response",
                "--using=time_card_kw_ide"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - retry repaired-response BASELESS CLASSES",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {
                "PYTHONPATH": "", 
                "SECURITY_ENABLED": "False", 
                "PYTHONHASHSEED": "0", 
                "APILOGICSERVER_DEBUG": "False",
                "OPT_LOCKING": "optional"},
            "justMyCode": false,
            "args": [ "genai",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/auto_dealership/auto_baseless_models/response.json",
                "--retries=-1",
                "--project-name=bad_response_test_errors_project",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/auto_dealership/auto_baseless_models/response.json"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "    - retry repaired-response response_json_test",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {
                "PYTHONPATH": "", 
                "SECURITY_ENABLED": "False", 
                "PYTHONHASHSEED": "0", 
                "APILOGICSERVER_DEBUG": "False",
                "OPT_LOCKING": "optional"},
            "justMyCode": false,
            "args": [ "genai",
                "--using=${workspaceFolder}//tests/test_databases/ai-created/response_json_test/response.json",
                "--retries=-1",
                "--project-name=response_json_test",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/response_json_test/response.json"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "    - retry repaired-response BROKEN PROJECT",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {
                "PYTHONPATH": "", 
                "SECURITY_ENABLED": "False", 
                "PYTHONHASHSEED": "0", 
                "APILOGICSERVER_DEBUG": "False",
                "OPT_LOCKING": "optional"},
            "justMyCode": false,
            "args": [ "genai",
                "--using=bad_response_test_errors",
                "--repaired-response=${workspaceFolder}/tests/test_databases/ai-created/genai_demo/bad_response_test_errors.response"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "4 - Run Last Project",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "cli.py",
            "args": ["run","--project_name="],
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Login (on current server)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "cli.py",
            "args": ["login"],
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - cURL (on current server) with args",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "cli.py",
            "args": ["curl", "http://localhost:5656/ProductDetails_View"],
            "justMyCode": false,
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Create ?/tutorial (-> org_git)",
            "type": "debugpy",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["tutorial", "--create=tutorial"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Create tutorial (-> servers)",
            "type": "debugpy",
            "request": "launch",
            "env": {
                "PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}",
                "APILOGICPROJECT_VERBOSE": "True"},
            "cwd": "${workspaceFolder}/../../servers/",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["tutorial", "--create=tutorial"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Create servers/demo (then copy -> org-git)",
            "type": "debugpy",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=../../../servers/demo",
                "--db_url=nw+"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "     - Create servers/basic_demo (abbrev, from ai_customer_orders)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
            "--infer_primary_key",
            "--project_name=../../../servers/basic_demo",
                "--db_url=basic_demo"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Basic Demo - add-cust",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../servers/basic_demo",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-cust"],
            "console": "integratedTerminal"
        },
        {
            "name": "     - Basic Demo - add-auth",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers/basic_demo",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-auth", "--db_url=auth"],
            "console": "integratedTerminal"
        },
        {
            "name": "5 - Create Sql/Server",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/SqlServer",
                "--db_url=mssql+pyodbc://sa:Posey3861@localhost:1433/NORTHWND?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"],
            "console": "internalConsole" // allows special char '?' -- output goes to DEBUG CONSOLE
        },
        {
            "name": "  - Create Sql/Server - remote",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/SqlServer",
                "--db_url=mssql+pyodbc://sa:Posey3861@10.0.0.77:1433/NORTHWND?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"],
            "console": "internalConsole" 
        },
        {
            "name": "6 - Create Postgres (servers)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "justMyCode": false,
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/postgres-nw",
                "--db_url=postgresql://postgres:p@localhost/northwind"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Debug Postgres",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "program": "${workspaceFolder}/../../servers/postgres-nw/api_logic_server_run.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "  - Add PG Security to Postgres - postgres-database-authentication",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "add-auth",
                "--project_name=../../../servers/postgres-nw",
                "--db_url=postgresql://postgres:p@localhost/authdb"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Add sqlite Security to Postgres",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "add-auth",
                "--project_name=../../../servers/postgres-nw",
                "--db_url=auth"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Postgres - stress",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "create",
                "--project_name=../../../servers/postgres-stress",
                "--db_url=postgresql://postgres:p@localhost/stress"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Postgres serial (id)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "justMyCode": false,
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/postgres-serial",
                "--db_url=postgresql://postgres:p@localhost/autonum"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Postgres App Model Editor (multi-reln test)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "justMyCode": false,
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/app_model_editor",
                "--db_url=postgresql://postgres:p@localhost/app_model_editor"],
            "console": "integratedTerminal"
        },
        {
            "name": "7 - ORACLE-HR",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True", "APILOGICSERVER_ORACLE_DBINIT": "all"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "create",
                "--project_name=../../../servers/oracle-hr",
                "--db_url=oracle-hr"],
            "console": "integratedTerminal"
        },
        {
            "name": "   - ORACLE-HR THICK",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "env": {"APILOGICSERVER_DEBUG": "True",
                "APILOGICSERVER_ORACLE_THICK": "/Users/val/Downloads/instantclient_19_16"},
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "create",
                "--project_name=../../../servers/oracle-hr",
                "--db_url=oracle-hr"],
            "console": "integratedTerminal"
        },
        {
            "name": "   - ORACLE-STRESS",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "create",
                "--quote",
                "--project_name=../../../servers/oracle_stress",
                "--db_url=oracle-stress"],
            "console": "integratedTerminal"
        },
        {
            "name": "8 - Create MySql (servers) - classic models",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/classicmodels",
                "--db_url=mysql+pymysql://root:p@localhost:3306/classicmodels"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - classic models (remote)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/classicmodels",
            "--db_url=mysql+pymysql://root:p@10.0.0.77:3306/classicmodels"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - add auth)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["add-auth","--project_name=../../../servers/classicmodels","--db_url=mysql+pymysql://root:p@10.0.0.77:3306/authdb"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - CHINOOK",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/Chinook",
                "--db_url=mysql+pymysql://root:p@localhost:3306/Chinook"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - sam - ucf",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=../../../servers/ucf",
                "--db_url=mysql+pymysql://root:p@localhost:3306/ffghpalive"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - wynford - FEDEX",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/fedex",
                "--db_url=mysql+pymysql://root:p@127.0.0.1:3306/CSAMTEST_SCHEMA"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - BudgetApp",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "env": {"APILOGICSERVER_DEBUG": "True"},

            "args": ["create","--project_name=../../../servers/BudgetApp",
            "--db_url=mysql+pymysql://root:p@localhost:3306/BudgetApp"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - classic models BAD DB",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/BadDB","--db_url=mysql+pymysql://root:p@localhost:3306/classicmodelsXX"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create MySql - stress",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/MySQL_stress",
            "--db_url=mysql+pymysql://root:p@10.0.0.77:3306/stress"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create and run classicmodels Sqlite",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/classicmodels_sqllite","--db_url={install}/classicmodels.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Imatia product_management",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["genai",  "--retries=-1",
                "--using=${workspaceFolder}/tests/test_databases/ai-created/imatia/product_management/product_management.prompt",
                "--project-name=imatia_product_management"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create and run Thos Peters dev multi-reln (fails 1/17/2025)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run"
                    ,"--project_name=${workspaceFolder}/../../build_and_test/ApiLogicServer/t_peters_dev_multi_reln"
                    ,"--db_url=sqlite:///../tests/test_databases/sqlite-databases/tom_peters_dev/dev_test.sqlite3"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create and run server_defaults (fails 1/17/2025)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create"
                    ,"--project_name=${workspaceFolder}/../../build_and_test/ApiLogicServer/server_defaults"
                    ,"--db_url=sqlite:///../tests/test_databases/sqlite-databases/server_default.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Airport 10 multi-reln (ok 1/17/2025)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run"
                    ,"--project_name=${workspaceFolder}/../../build_and_test/ApiLogicServer/airport10_multi_reln"
                    ,"--db_url=sqlite:///../tests/test_databases/ai-created/airport/z_bad_results/airport_model.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "9 - Create servers/sample_ai",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../servers",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=sample_ai",
                "--db_url=sqlite:///sample_ai.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create servers/sample_ai, with items",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../servers",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=sample_ai",
                "--db_url=sqlite:///sample_ai_items.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "      + Add Customizations - servers/sample_ai",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers/sample_ai",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-cust"],
            "console": "integratedTerminal"
        },
        {
            "name": "      + Add Iteration - servers/sample_ai",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers/sample_ai",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["sample-ai-iteration","--project_name=../../../servers/sample_ai"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create servers/sample_ai_copilot from MODEL",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../servers/sample_ai",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=sample_ai_copilot",
                "--from-model=.",
                "--db_url=sqlite:///sample_ai_copilot.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create Sqlite - CHATGPT - ai_customer_orders",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create",
            "--infer_primary_key",
            "--project_name=../../../servers/ai_customer_orders",
                "--db_url=sqlite:////Users/val/dev/ApiLogicServer/ApiLogicServer-dev/org_git/ApiLogicServer-src/tests/test_databases/ai-created/ai_customer_orders.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Add Security to ai_customer_orders",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "add-auth",
                "--project_name=../../../servers/ai_customer_orders",
                "--db_url=auth"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "      + Add Security to ai_customer_orders_mysql",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": [
                "add-auth",
                "--project_name=../../../servers/ai_customer_orders_mysql",
                "--db_url=mysql+pymysql://root:p@localhost:3306/authdb"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "      + Create MySQL - CHATGPT - ai_customer_orders_mysql",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/ai_customer_orders_mysql",
                "--db_url=mysql+pymysql://root:p@localhost:3306/ai_customer_orders"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "    - Create MySql - CHATGPT - employee_skills",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "False"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
            "--infer_primary_key",
            "--project_name=../../../servers/employee_skills",
                "--db_url=mysql+pymysql://root:p@localhost:3306/employee_skills"],
            "console": "integratedTerminal"
        },
        {
            "name": "10 - nw- NW_No_Cust",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create", "--db_url=nw-", "--project_name=../../../servers/NW_NoCust"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - add-auth[sql] to servers/NW_NoCust - DOT",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers/NW_NoCust",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-auth",
                    "--project_name=.", 
                    "--db_url=auth"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - add-auth[KeyCloak.local] to servers/NW_NoCust - DOT",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers/NW_NoCust",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-auth",
                    "--provider-type=keycloak"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - add-auth[none] to servers/NW_NoCust - DOT",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers/NW_NoCust",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-auth",
                    "--provider-type=none",
                    "--project_name=.", 
                    "--db_url=auth"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - add-db to servers/NW_NoCust - DOT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../servers/NW_NoCust",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["add-db",
                    "--bind_key=Todo",
                    "--db_url=todo",
                    "--project_name=."],
            "console": "integratedTerminal"
        },
        {
            "name": "  - rebuild-from-database to servers/NW_NoCust - DOT",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../servers/NW_NoCust",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-database",
                    "--project_name=.",
                    "--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Add-database to NW_NoCust (curr cwd, explicit location)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["add-db",
                    "--bind_key=Todo",
                    "--db_url=todo",
                    "--project_name=../../../servers/NW_NoCust"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Add Northwind Customizations to NW-NoCust",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["add-cust","--project_name=../../../servers/NW_NoCust"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Northwind NW_Collision_Test",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create", 
                    "--db_url=sqlite:///../tests/test_databases/sqlite-databases/nw-fk-getter-collision.sqlite",
                    "--project_name=../../../servers/NW_Collision_Test"],
            "console": "integratedTerminal"
        },
        {
            "name": "Add-database",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["add-db",
                    "--bind_key=Todo",
                    "--db_url=todo"],
            "console": "integratedTerminal"
        },
        {
          "name": "  - Add-database - explicit location - ApiLogicProject",
          "type": "debugpy",
          "request": "launch",
          "cwd": "${workspaceFolder}/api_logic_server_cli",
          "program": "cli.py",
          "redirectOutput": true,
          "args": ["add-db",
                  "--bind_key=Todo",
                  "--db_url=todo",
                  "--project_name=../../../servers/ApiLogicProject"],
          "console": "integratedTerminal"
      },
          {
            "name": "Chinook - Create and run Chinook Sqlite (abbr)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/chinook_sqllite","--db_url=chinook"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create and run Chinook MySQL",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/chinook","--db_url=mysql+pymysql://root:p@localhost:3306/Chinook"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Create and run Chinook Sqlite",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/chinook_sqllite","--db_url={install}/Chinook_Sqlite.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "Allocation  (abbr)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/allocation","--db_url=allocation"],
            "console": "integratedTerminal"
        },
        {
            "name": "BudgetApp  (abbr)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create","--project_name=../../../servers/BudgetApp","--db_url=BudgetApp"],
            "console": "integratedTerminal"
        },
        {
            "name": "DOCKER Create - docker_api_logic_project",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/docker_api_logic_project","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "SQL Server nw (bypass vsc bug)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/sqlsvr_nw",
                "--db_url=sqlsvr-nw"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "  - SQL Server nw (bypass vsc bug) using DOCKER",
            "type": "debugpy",
            "request": "launch",
            "env": {"HOST_IP": "10.0.0.234"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/sqlsvr_nw",
                "--db_url=sqlsvr-nw-docker"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "  - SQL Server nwlogic",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/sqlsvr_nwlogic",
                "--db_url=sqlsvr-nwlogic"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "  - SQL Server Types [TVF]",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/sqlsvr_sample",
                "--db_url=sqlsvr-sample",
                "--extended_builder=*"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Sql/Server -- vsc bug - fails url parse",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/SqlServer","--db_url=mssql+pyodbc://sa:Posey3861@localhost:1433/NORTHWND?driver=ODBC+Driver+18+for+SQL+Server&trusted_connection=no&Encrypt=no"],
            "console": "integratedTerminal"
        },
        {
            "name": "PythonAnywhere Create",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/PythonAnywhere/ApiLogicProject",
                    "--host=ApiLogicServer.pythonanywhere.com", "--port=", "--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "CheckIP Create (?)",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/install/ApiLogicServer/dockers/CheckIP",
                    "--swagger_host=10.0.0.77", "--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "Model Migrator",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/model_migrator_project",
                "--db_url=mysql+pymysql://root:password@127.0.0.1:3308/ffghpalive",
                "--extended_builder=model_migrator"],
            "console": "integratedTerminal"
        },
        {
            "name": "copy_children",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/CopyChildren","--db_url=sqlite:////Users/val/dev/LogicBank/LogicBank/examples/copy_children/db/database-gold.db"],
            "console": "integratedTerminal"
        },
        {
            "name": "unique_keys",
            "type": "debugpy",
            "request": "launch",
            "env": {
                "APILOGICSERVER_HOME": "${workspaceFolder}",
                "APILOGICSERVER_DEBUG": "True"
            },
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run",
                "--project_name=../../../servers/unique_keys",
                "--db_url=sqlite:////Users/val/dev/ApiLogicServer/ApiLogicServer-dev/org_git/ApiLogicServer-src/tests/test_databases/sqlite-databases/unique_keys.sqlite",
                "--infer_primary_key"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - unique_keys_NO_INFER",
            "type": "debugpy",
            "request": "launch",
            "env": {
                "APILOGICSERVER_HOME": "${workspaceFolder}",
                "APILOGICSERVER_DEBUG": "True"
            },
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run",
                "--project_name=../../../servers/unique_keys",
                "--db_url=sqlite:////Users/val/dev/ApiLogicServer/ApiLogicServer-dev/org_git/ApiLogicServer-src/tests/test_databases/sqlite-databases/unique_keys.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "Create new empty project",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/NewProject","--db_url=new"],
            "console": "integratedTerminal"
        },
        {
            "name": "Table Filters Tests",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/table_filters_tests",
                    "--db_url=table_filters_tests",
                    "--include_tables=database/table_filters_tests.yml"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Table Filters Test All-Tables",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/table_filters_tests",
                    "--db_url=table_filters_tests",
                    "--include_tables=database/table_filters_tests_typical.yml"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Table Filters Test NW Subset",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create","--project_name=../../../servers/table_filters_nw",
                    "--db_url=nw-",
                    "--include_tables=database/table_filters_tests_nw.yml"],
            "console": "integratedTerminal"
        },
        {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "Rebuild-from-model-sql-svr-types",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-model","--project_name=../../../servers/sqlsvr_sample","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Rebuild-from-database",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-database","--project_name=../../../servers/ApiLogicProject","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Rebuild-from-database - blt/genai_demo",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/genai_demo",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-database", "--db_url=sqlite:///database/db.sqlite"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Rebuild-from-model",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-model","--project_name=../../../servers/ApiLogicProject","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Rebuild-from-model -- servers/ApiLogicProject",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../servers",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-model","--project_name=ApiLogicProject","--db_url="],
            "console": "integratedTerminal"
        },
        {
            "name": "  - Rebuild-from-model -- BLT / nw_sample",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/samples/nw_sample",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["rebuild-from-model"],
            "console": "integratedTerminal"
        },
        {
            "name": "  - ss1 (servers, sqlite)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create",
                "--project_name=../../../servers/ss1",
                "--db_url=sqlite:///${workspaceFolder}/tests/test_databases/sqlite-databases/ss1/SS1.db"],
            "console": "integratedTerminal"
        },
        {
            "name": "create from-model",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=create_from_model_using_numeric",
                "--from-model=system/genai/reference/model_using_numeric.py",
                "--db_url=sqlite:///model_using_numeric_retest.sqlite"],
            "console": "integratedTerminal"
        },       
        {
            "name": "create - clean/genai_demo_models_with_addr",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_DEBUG": "True"},
            "cwd": "${workspaceFolder}/../../clean/ApiLogicServer",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--project_name=genai_demo_models_with_addr",
                "--db-url=sqlite:///${workspaceFolder}/tests/test_databases/ai-created/genai_demo/genai_demo_models_with_addr.sqlite"
            ],
            "console": "integratedTerminal"
        },       
        {
            "name": "Chinook - Create and run Chinook Sqlite (abbr)",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,

            "args": ["create-and-run","--project_name=../../../servers/chinook_sqllite","--db_url=chinook"],
            "console": "integratedTerminal"
        },
        {
            "name": "11 GenAI - create genai_demo_no_logic",
//  typical start - just the model
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {
                "PYTHONPATH": "", 
                "SECURITY_ENABLED": "False", 
                "PYTHONHASHSEED": "0", 
                "APILOGICSERVER_DEBUG": "False",
                "OPT_LOCKING": "optional"},
            "justMyCode": false,
            "args": [ "genai", "--retries=3", "--project-name=genai_demo_no_logic",
                "--using=system/genai/examples/genai_demo/genai_demo_no_logic.prompt"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "  * GenAI - include Multiple Docs/Logic Files",
// gen discovery - multiple docs/logic files -- verify logic repeated in constraint_tests.py [83]
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/system/genai/examples/genai_demo/genai_demo_docs_logic",
            "env": {
                "PYTHONPATH": "", 
                "SECURITY_ENABLED": "False", 
                "PYTHONHASHSEED": "0", 
                "APILOGICSERVER_DEBUG": "False",
                "OPT_LOCKING": "optional"},
            "justMyCode": false,
            "args": ["genai-logic"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "  - GenAI - no logic - FixUp (new attrs -> data model, test data)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/genai_demo_no_logic",
            "env": {
                "PYTHONPATH": "", 
                "SECURITY_ENABLED": "False", 
                "PYTHONHASHSEED": "0", 
                "APILOGICSERVER_DEBUG": "False",
                "OPT_LOCKING": "optional"},
            "justMyCode": false,
            "args": ["genai-utils", "--fixup"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "  - GenAI - no logic -> genai_demo_no_logic_fixed (from response_fixup)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {
                "PYTHONPATH": "", 
                "SECURITY_ENABLED": "False", 
                "PYTHONHASHSEED": "0", 
                "APILOGICSERVER_DEBUG": "False",
                "OPT_LOCKING": "optional"},
            "justMyCode": false,
            "args": [ "genai", "--retries=-1",
                "--project-name=genai_demo_no_logic_fixed",  "--using=genai_demo_no_logic",
                "--repaired-response=genai_demo_no_logic/docs/fixup/response_fixup.json"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "  - GenAI - no logic -> genai_demo_no_logic_fixed (from dir)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer",
            "env": {
                "PYTHONPATH": "", 
                "SECURITY_ENABLED": "False", 
                "PYTHONHASHSEED": "0", 
                "APILOGICSERVER_DEBUG": "False",
                "OPT_LOCKING": "optional"},
            "justMyCode": false,
            "args": [ "genai", "--retries=-1",
                "--project-name=genai_demo_no_logic_fixed",  "--using=genai_demo_no_logic",
                "--repaired-response=genai_demo_no_logic/docs/fixup"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "GenAI - import genai_export from tests/test_databases/ai-created/wg_dev_merge",
// first, copy tests/test_databases/ai-created/wg_dev_merge --> <manager>/system/genai/examples/genai_demo/
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "cwd": "${workspaceFolder}/../../build_and_test/ApiLogicServer/system/genai/examples/genai_demo/wg_dev_merge/dev_demo_no_logic_fixed",
            "env": {
                "PYTHONPATH": "", 
                "SECURITY_ENABLED": "False", 
                "PYTHONHASHSEED": "0", 
                "APILOGICSERVER_DEBUG": "True",
                "OPT_LOCKING": "optional"},
            "justMyCode": false,
            "args": ["genai-utils", "--import-genai", 
                    // "--import-restart",
                    "--using=../wg_demo_no_logic_fixed"],
            "console": "internalConsole",
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "Spaces in project dir",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create-and-run","--project_name='../../../servers/install/ApiLogicServer/spaces name/ApiLogicProject'","--db_url="],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "Python Status",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/api_logic_server_cli/project_prototype/venv_setup/py.py",
            "redirectOutput": true,
            "justMyCode": false,
            "args": ["go"],
            "console": "integratedTerminal"
        },
        {
            "name": "ApiLogicServer <empty>",
            "type": "debugpy",
            "request": "launch",
            "justMyCode": false,
            "program": "${workspaceFolder}/api_logic_server_cli/cli.py",
            "redirectOutput": true,
            "console": "integratedTerminal"
        },
        {
            "name": "ApiLogicServer examples",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["examples"],
            "console": "integratedTerminal"
        },
        {
            "name": "cURL test",
            "type": "debugpy",
            "request": "launch",
            "env": {"APILOGICSERVER_HOME": "${workspaceFolder}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["curl-test","--message=''"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },
        {
            "name": "ApiLogicServer create open_with",
            "type": "debugpy",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create",
                "--open_with=code",
                "--project_name=../../../servers/demo",
                "--db_url=nw"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },        
        {
            "name": "ApiLogicServer help",
            "type": "debugpy",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["--help"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },        
        {
            "name": "ApiLogicServer create help",
            "type": "debugpy",
            "request": "launch",
            "env": {"PYTHONPATH": "${workspaceFolder}${pathSeparator}${env:PYTHONPATH}"},
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["create", "--help"],
            "stopOnEntry": false,
            "justMyCode": false,
            "console": "integratedTerminal"
        },        
        {
            "name": "ApiLogicServer about",
            "type": "debugpy",
            "request": "launch",
            "cwd": "${workspaceFolder}/api_logic_server_cli",
            "program": "cli.py",
            "redirectOutput": true,
            "args": ["about"],
            "console": "integratedTerminal"
        }
    ]
}
